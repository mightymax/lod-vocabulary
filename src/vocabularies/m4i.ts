// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('http://w3id.org/nfdi4ing/metadata4ing#');

/**
 * [m4i](http://w3id.org/nfdi4ing/metadata4ing#})
 */
const m4i = {
  /**
    * **[Field](http://mlcommons.org/croissant/Field)** (class)
    * 
    * A component of the structure of a RecordSet, such as a column of a table.
    */
    '': prefixer(''),

    /**
    * **[intangible](https://schema.org/Intangible)** (class)
    * 
    * A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
    */
    'sdo:Intangible': prefixer('sdo:Intangible'),

    /**
    * **[file object](http://mlcommons.org/croissant/FileObject)** (class)
    * 
    * An individual file that is part of a dataset.
    */
    '': prefixer(''),

    /**
    * **[file set](http://mlcommons.org/croissant/FileSet)** (class)
    * 
    * A set of homogeneous files extracted from a container, optionally filtered by inclusion and/or exclusion filters.
    */
    '': prefixer(''),

    /**
    * **[record set](http://mlcommons.org/croissant/RecordSet)** (class)
    * 
    * A description of a set of structured records from one or more data sources and their structure, expressed as a set of fields.
    */
    '': prefixer(''),

    /**
    * **[process](http://purl.obolibrary.org/obo/BFO_0000015)** (class)
    * 
    * Process, i.e., a physical entity with a temporal evolution that 'has a meaning for the ontologist'
    */
    '': prefixer(''),

    /**
    * **[realizable entity](http://purl.obolibrary.org/obo/BFO_0000017)** (class)
    * 
    * To say that b is a realizable entity is to say that b is a specifically dependent continuant that inheres in some independent continuant which is not a spatial region and is of a type instances of which are realized in processes of a correlated type. (axiom label in BFO2 Reference: [058-002])
    */
    '': prefixer(''),

    /**
    * **[processing step](http://w3id.org/nfdi4ing/metadata4ing#ProcessingStep)** (class)
    * 
    * Specific action undertaken during research
    */
    ProcessingStep: prefixer('ProcessingStep'),

    /**
    * **[bibliographic record](http://purl.org/spar/biro/BibliographicRecord)** (class)
    * 
    * A record that uniquely describes a particular textual or data publication (or a work in preparation for publication). Each bibliographic record is a set of entities describing aspects of the referenced work, including, for example, but not restricted to: authors, title, journal, publication year, DOI, ISSN, publisher and copyright information, or, in the case of a data publication: creators, title, version, archive, publication year, DOI or other identifier). The FRBR expression of a bibliographic record is a bibliographic reference, which usually contains only a sub-set of these entities, ordered in a particular way that corresponds to the house style of the publication in which it occurs.
    */
    '': prefixer(''),

    /**
    * **[quantity kind](http://qudt.org/schema/qudt/QuantityKind)** (class)
    * 
    * Kind of quantity, i.e., a physical/chemical quantity from a controlled vocabulary, such as QUDT, IEC, or EMMO
    */
    'qudt:QuantityKind': prefixer('qudt:QuantityKind'),

    /**
    * **[unit](http://qudt.org/schema/qudt/Unit)** (class)
    * 
    * A unit of measure, or unit is a particular quantity value that has been chosen as a scale for measuring other quantities the same kind (more generally of equivalent dimension). For example, the meter is a quantity of length that has been rigorously defined and standardized by the BIPM (International Board of Weights and Measures). Any measurement of the length can be expressed as a number multiplied by the unit meter. More formally, the value of physical quanitity Q with respect to a unit (U) is expressed as the scalar multiple of a real number (n) and U, as Q = nU.
    */
    'qudt:Unit': prefixer('qudt:Unit'),

    /**
    * **[role](http://www.w3.org/ns/prov#Role)** (class)
    * 
    * A role is the function of an entity or agent with respect to an activity, in the context of a usage, generation, invalidation, association, start, and end.
    */
    'prov:Role': prefixer('prov:Role'),

    /**
    * **[method](http://w3id.org/nfdi4ing/metadata4ing#Method)** (class)
    * 
    * Abstract description of a method for analysis, generation and transformation of data and material objects like, e.g., 'Fourier Transform Infrared Spectroscopy' or 'Molecular Dynamics Simulation'. Note that while values for relevant parameters should be provided, m4i:Method does not refer to the actual execution of the process that is described (use m4i:ProcessingStep for that), but rather a description of the underlying principle.
    */
    Method: prefixer('Method'),

    /**
    * **[numerical assignment](http://w3id.org/nfdi4ing/metadata4ing#NumericalAssignment)** (class)
    * 
    * Assignment by which a variable (e.g., a physical property) is assigned an si:Real quantity value (scalar x measurement unit) in some context (e.g., applied to some object of research)
    */
    NumericalAssignment: prefixer('NumericalAssignment'),

    /**
    * **[assignment](http://www.molmod.info/semantics/pims-ii.ttl#Assignment)** (class)
    * 
    * Assignment, i.e., a data item by which a value is assigned to a variable with respect to a particular referent (e.g., T = 200 K for substance o as it was measured in a particular cognitive step); therein, T is the variable, related to the assignment by m4i:hasVariable, 200 K is the value, related to the assignment by m4i:hasValue, and o is the referent, related to the assignment by isAssignmentFor
    */
    '': prefixer(''),

    /**
    * **[numerical variable](http://w3id.org/nfdi4ing/metadata4ing#NumericalVariable)** (class)
    * 
    * A variable that expects a float or integer as a value
    */
    NumericalVariable: prefixer('NumericalVariable'),

    /**
    * **[variable](http://www.molmod.info/semantics/pims-ii.ttl#Variable)** (class)
    * 
    * Variable, i.e., a conventional that is employed for something to which values can be assigned (this may include different notations for the same variable including, e.g., computational representations); this is to be understood very generally, e.g., a variable may be an array or set of elements or have another kind of internal structure
    */
    '': prefixer(''),

    /**
    * **[real](https://ptb.de/si/Real)** (class)
    * 
    * (Real value +- uncertainty) x measurement unit, i.e., a scalar value with a measurement unit and an uncertainty indication
    */
    '': prefixer(''),

    /**
    * **[activity](http://www.w3.org/ns/prov#Activity)** (class)
    * 
    * An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.
    */
    'prov:Activity': prefixer('prov:Activity'),

    /**
    * **[text variable](http://w3id.org/nfdi4ing/metadata4ing#TextVariable)** (class)
    * 
    * A variable that expects a string of characters as a value
    */
    TextVariable: prefixer('TextVariable'),

    /**
    * **[tool](http://w3id.org/nfdi4ing/metadata4ing#Tool)** (class)
    * 
    * Object that helps an agent perform an action (e.g., John wrote a book with a pen), i.e., an object of the relation schema:instrument or m4i:hasTool
    */
    Tool: prefixer('Tool'),

    /**
    * **[uncertainty declaration](http://w3id.org/nfdi4ing/metadata4ing#UncertaintyDeclaration)** (class)
    * 
    * Declaration that can be applied to an si:Real quantity value to give an assessment of uncertainty
    */
    UncertaintyDeclaration: prefixer('UncertaintyDeclaration'),

    /**
    * **[description](http://purl.org/dc/terms/description)** (property)
    * 
    * An account of the resource.
    */
    'dcterms:description': prefixer('dcterms:description'),

    /**
    * **[is referenced by](http://purl.org/dc/terms/isReferencedBy)** (property)
    * 
    * A related resource that references, cites, or otherwise points to the described resource.
    */
    'dcterms:isReferencedBy': prefixer('dcterms:isReferencedBy'),

    /**
    * **[project](https://schema.org/Project)** (class)
    * 
    * An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim
    */
    'sdo:Project': prefixer('sdo:Project'),

    /**
    * **[value](http://www.molmod.info/semantics/pims-ii.ttl#Value)** (class)
    * 
    * Value, i.e., an articulation that is by social convention understood to be potentially assignable to a variable
    */
    '': prefixer(''),

    /**
    * **[coverage interval](https://ptb.de/si/CoverageInterval)** (class)
    * 
    * Structure for stating a probabilistic-symmetric coverage interval for a real uncertainty, to be applied to an si:Real quantity value
    */
    '': prefixer(''),

    /**
    * **[expanded uncertainty](https://ptb.de/si/ExpandedUnc)** (class)
    * 
    * Structure for stating an expanded measurement, model, or simulation uncertainty, e.g., to be applied to an si:Real quantity value
    */
    '': prefixer(''),

    /**
    * **[references](http://purl.org/dc/terms/references)** (property)
    * 
    * A related resource that is referenced, cited, or otherwise pointed to by the described resource.
    */
    'dcterms:references': prefixer('dcterms:references'),

    /**
    * **[organization](http://www.w3.org/ns/prov#Organization)** (class)
    * 
    * An organization is a social or legal institution such as a company, society, etc.
    */
    'prov:Organization': prefixer('prov:Organization'),

    /**
    * **[property](http://www.molmod.info/semantics/pims-ii.ttl#Property)** (class)
    * 
    * Property, i.e., a variable that can be considered (as an investigated property, i.e., target property) within a processing step
    */
    '': prefixer(''),

    /**
    * **[title](http://purl.org/dc/terms/title)** (property)
    * 
    * A name given to the resource.
    */
    'dcterms:title': prefixer('dcterms:title'),

    /**
    * **[person](http://www.w3.org/ns/prov#Person)** (class)
    * 
    * Person agents are people.
    */
    'prov:Person': prefixer('prov:Person'),

    /**
    * **[quantity value](http://www.molmod.info/semantics/pims-ii.ttl#QuantityValue)** (class)
    * 
    * Quantity value, i.e., a value that has a numerical magnitude and a physical unit
    */
    '': prefixer(''),

    /**
    * **[dataset](http://www.w3.org/ns/dcat#Dataset)** (class)
    * 
    * A collection of data, published or curated by a single source, and available for access or download in one or more representations.
    */
    'dcat:Dataset': prefixer('dcat:Dataset'),

    /**
    * **[dataset series](http://www.w3.org/ns/dcat#DatasetSeries)** (class)
    * 
    * A collection of datasets that are published separately, but share some common characteristics that groups them.
    */
    'dcat:DatasetSeries': prefixer('dcat:DatasetSeries'),

    /**
    * **[distribution](http://www.w3.org/ns/dcat#Distribution)** (class)
    * 
    * A specific representation of a dataset. A dataset might be available in multiple serializations that may differ in various ways, including natural language, media-type or format, schematic organization, temporal and spatial resolution, level of detail or profiles (which might specify any or all of the above).
    */
    'dcat:Distribution': prefixer('dcat:Distribution'),

    /**
    * **[agent](http://www.w3.org/ns/prov#Agent)** (class)
    * 
    * An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity.
    */
    'prov:Agent': prefixer('prov:Agent'),

    /**
    * **[association](http://www.w3.org/ns/prov#Association)** (class)
    * 
    * An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedssociation [ a prov:Association; prov:agent :baker; :foo :bar ].
    */
    'prov:Association': prefixer('prov:Association'),

    /**
    * **[software agent](http://www.w3.org/ns/prov#SoftwareAgent)** (class)
    * 
    * A software agent is running software.
    */
    'prov:SoftwareAgent': prefixer('prov:SoftwareAgent'),

    /**
    * **[affiliation](https://schema.org/affiliation)** (property)
    * 
    * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
    */
    'sdo:affiliation': prefixer('sdo:affiliation'),

    /**
    * **[funder](https://schema.org/funder)** (property)
    * 
    * A person or organization that supports (sponsors) something through some kind of financial contribution.
    */
    'sdo:funder': prefixer('sdo:funder'),

    /**
    * **[field](http://mlcommons.org/croissant/field)** (property)
    * 
    * A data element that appears in the records of the RecordSet (e.g., one column of a table).
    */
    '': prefixer(''),

    /**
    * **[research project](https://schema.org/ResearchProject)** (class)
    * 
    * A research project
    */
    'sdo:ResearchProject': prefixer('sdo:ResearchProject'),

    /**
    * **[source](http://mlcommons.org/croissant/source)** (property)
    * 
    * The data source of the field. This will generally reference a FileObject or FileSet's contents (e.g., a specific column of a table).
    */
    '': prefixer(''),

    /**
    * **[part of](http://purl.obolibrary.org/obo/BFO_0000050)** (property)
    * 
    * a core relation that holds between a part and its whole
    */
    '': prefixer(''),

    /**
    * **[has part](http://purl.obolibrary.org/obo/BFO_0000051)** (property)
    * 
    * a core relation that holds between a whole and its part
    */
    '': prefixer(''),

    /**
    * **[realized in](http://purl.obolibrary.org/obo/BFO_0000054)** (property)
    * 
    * Paraphrase of elucidation: a relation between a realizable entity and a process, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process
    */
    '': prefixer(''),

    /**
    * **[realizes](http://purl.obolibrary.org/obo/BFO_0000055)** (property)
    * 
    * Paraphrase of elucidation: a relation between a process and a realizable entity, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process
    */
    '': prefixer(''),

    /**
    * **[precedes](http://purl.obolibrary.org/obo/BFO_0000063)** (property)
    * 
    * x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.
    */
    '': prefixer(''),

    /**
    * **[participates in](http://purl.obolibrary.org/obo/RO_0000056)** (property)
    * 
    * a relation between a continuant and a process, in which the continuant is somehow involved in the process
    */
    '': prefixer(''),

    /**
    * **[has participant](http://purl.obolibrary.org/obo/RO_0000057)** (property)
    * 
    * a relation between a process and a continuant, in which the continuant is somehow involved in the process
    */
    '': prefixer(''),

    /**
    * **[immediately precedes](http://purl.obolibrary.org/obo/RO_0002090)** (property)
    * 
    * X immediately precedes_Y iff: end(X) simultaneous_with start(Y)
    */
    '': prefixer(''),

    /**
    * **[starts with](http://purl.obolibrary.org/obo/RO_0002224)** (property)
    * 
    * x starts with y if and only if x has part y and the time point at which x starts is equivalent to the time point at which y starts. Formally: α(y) = α(x) ∧ ω(y) < ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.
    */
    '': prefixer(''),

    /**
    * **[ends with](http://purl.obolibrary.org/obo/RO_0002230)** (property)
    * 
    * x ends with y if and only if x has part y and the time point at which x ends is equivalent to the time point at which y ends. Formally: α(y) > α(x) ∧ ω(y) = ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.
    */
    '': prefixer(''),

    /**
    * **[has input](http://purl.obolibrary.org/obo/RO_0002233)** (property)
    * 
    * (x has input y) means x takes specific input as y for further processes
    */
    '': prefixer(''),

    /**
    * **[input of](http://purl.obolibrary.org/obo/RO_0002352)** (property)
    * 
    * (x input of y) means x is a specific input of y to carry out further processes
    */
    '': prefixer(''),

    /**
    * **[has output](http://purl.obolibrary.org/obo/RO_0002234)** (property)
    * 
    * (x has output y) means x provides specific output y for the result or further processes
    */
    '': prefixer(''),

    /**
    * **[output of](http://purl.obolibrary.org/obo/RO_0002353)** (property)
    * 
    * (x output of y) means x is the specific output of y as the result or further processes
    */
    '': prefixer(''),

    /**
    * **[is related to](http://semanticscience.org/resource/SIO_000001)** (property)
    * 
    * A is related to B iff there is some relation between A and B.
    */
    '': prefixer(''),

    /**
    * **[represents](http://semanticscience.org/resource/SIO_000210)** (property)
    * 
    * A represents B when A serves as a sign, symbol or model of B.
    */
    '': prefixer(''),

    /**
    * **[refers to](http://semanticscience.org/resource/SIO_000628)** (property)
    * 
    * bezieht sich auf ist eine Relation zwischen einer Entität und einer anderen Entität, auf die sie sich bezieht
    */
    '': prefixer(''),

    /**
    * **[has admissible unit](http://w3id.org/nfdi4ing/metadata4ing#hasAdmissibleUnit)** (property)
    * 
    * DEPRECATED (x hasAdmissibleUnit y) means that y is a unit that can be associated with the variable x
    */
    hasAdmissibleUnit: prefixer('hasAdmissibleUnit'),

    /**
    * **[is admissible unit for](http://www.molmod.info/semantics/pims-ii.ttl#isAdmissibleUnitFor)** (property)
    * 
    * DEPRECATED (x isAdmissibleUnitFor y) means that x is a unit that can be associated with the variable y; subsumption under msHPIPIR is explained as follows: There is a sign z for the variable y (where z is a description of admissible values of y) of which x is constitutive (and with which x hence overlaps)
    */
    '': prefixer(''),

    /**
    * **[has admissible value](http://w3id.org/nfdi4ing/metadata4ing#hasAdmissibleValue)** (property)
    * 
    * (x hasAdmissibleValue y) means that y is a value that can be assigned to the variable x
    */
    hasAdmissibleValue: prefixer('hasAdmissibleValue'),

    /**
    * **[is admissible value for](http://www.molmod.info/semantics/pims-ii.ttl#isAdmissibleValueFor)** (property)
    * 
    * (x isAdmissibleValueFor y) means that x is a value that can be assigned to the variable y; subsumption under msIPIRIR is explained as follows: There is a sign z for the variable y (where z is the range of admissible values of y), for which in turn there is another sign z' (where z' lists members of z, explicitly including x) of which x is a part
    */
    '': prefixer(''),

    /**
    * **[has assigned value](http://w3id.org/nfdi4ing/metadata4ing#hasAssignedValue)** (property)
    * 
    * (a hasAssignedValue y) means that a: x = y is an assignment where the value y is assigned to a variable x
    */
    hasAssignedValue: prefixer('hasAssignedValue'),

    /**
    * **[is value in assignment](http://www.molmod.info/semantics/pims-ii.ttl#isValueInAssignment)** (property)
    * 
    * (y isValueInAssignment a) means that a: x = y is an assignment where the value y is assigned to a variable x
    */
    '': prefixer(''),

    /**
    * **[has coverage interval](http://w3id.org/nfdi4ing/metadata4ing#hasCoverageInterval)** (property)
    * 
    * Associates an si:Real quantity value with an si:CoverageInterval
    */
    hasCoverageInterval: prefixer('hasCoverageInterval'),

    /**
    * **[has uncertainty declaration](http://w3id.org/nfdi4ing/metadata4ing#hasUncertaintyDeclaration)** (property)
    * 
    * Associates an si:Real quantity value with its mandatory uncertainty declaration (i.e., with an expanded uncertainty or a coverage interval)
    */
    hasUncertaintyDeclaration: prefixer('hasUncertaintyDeclaration'),

    /**
    * **[has employed tool](http://w3id.org/nfdi4ing/metadata4ing#hasEmployedTool)** (property)
    * 
    * Points to a tool that is used within a given processing step
    */
    hasEmployedTool: prefixer('hasEmployedTool'),

    /**
    * **[uses instrument](https://schema.org/instrument)** (property)
    * 
    * points to an object that helped the agent perform the action (e.g., John wrote a book with a pen)
    */
    'sdo:instrument': prefixer('sdo:instrument'),

    /**
    * **[is employed tool](http://w3id.org/nfdi4ing/metadata4ing#isEmployedToolIn)** (property)
    * 
    * Points to a processing step the tool has been used in
    */
    isEmployedToolIn: prefixer('isEmployedToolIn'),

    /**
    * **[has expanded uncertainty](http://w3id.org/nfdi4ing/metadata4ing#hasExpandedUnc)** (property)
    * 
    * Relates an si:Real to its expanded uncertainty
    */
    hasExpandedUnc: prefixer('hasExpandedUnc'),

    /**
    * **[has kind of quantity](http://w3id.org/nfdi4ing/metadata4ing#hasKindOfQuantity)** (property)
    * 
    * Points to the property characterization (i.e., to the kind of quantity) from a controlled vocabulary
    */
    hasKindOfQuantity: prefixer('hasKindOfQuantity'),

    /**
    * **[has parameter](http://w3id.org/nfdi4ing/metadata4ing#hasParameter)** (property)
    * 
    * Points to a parameter of a given method or tool.
    */
    hasParameter: prefixer('hasParameter'),

    /**
    * **[has runtime assignment](http://w3id.org/nfdi4ing/metadata4ing#hasRuntimeAssignment)** (property)
    * 
    * Points to an assignment that is neither input nor output
    */
    hasRuntimeAssignment: prefixer('hasRuntimeAssignment'),

    /**
    * **[has unit](http://w3id.org/nfdi4ing/metadata4ing#hasUnit)** (property)
    * 
    * Represents the unit of a numerical (real) value
    */
    hasUnit: prefixer('hasUnit'),

    /**
    * **[has variable](http://w3id.org/nfdi4ing/metadata4ing#hasVariable)** (property)
    * 
    * ( a hasVariable x ) means that a: x = y is an assignment where the value y is assigned to a variable x
    */
    hasVariable: prefixer('hasVariable'),

    /**
    * **[is variable in assignment](http://www.molmod.info/semantics/pims-ii.ttl#isVariableInAssignment)** (property)
    * 
    * (x isVariableInAssignment a) means that a: x = y is an assignment where a value y is assigned to the variable x
    */
    '': prefixer(''),

    /**
    * **[implemented by](http://w3id.org/nfdi4ing/metadata4ing#implementedByTool)** (property)
    * 
    * Points to a tool that implements a given method
    */
    implementedByTool: prefixer('implementedByTool'),

    /**
    * **[implemented by](http://www.w3.org/ns/ssn/implementedBy)** (property)
    * 
    * Relation between a Procedure (an algorithm, procedure or method) and an entity that implements that Procedure in some executable way.
    */
    'ssn:implementedBy': prefixer('ssn:implementedBy'),

    /**
    * **[implements](http://w3id.org/nfdi4ing/metadata4ing#implementsMethod)** (property)
    * 
    * Points to a method that is implemented by a given tool
    */
    implementsMethod: prefixer('implementsMethod'),

    /**
    * **[implements](http://www.w3.org/ns/ssn/implements)** (property)
    * 
    * Relation between an entity that implements a Procedure in some executable way and the Procedure (an algorithm, procedure or method).
    */
    'ssn:implements': prefixer('ssn:implements'),

    /**
    * **[associated to project](http://w3id.org/nfdi4ing/metadata4ing#inProject)** (property)
    * 
    * A property that connects a person or an organization with a project.
    */
    inProject: prefixer('inProject'),

    /**
    * **[project participant](http://w3id.org/nfdi4ing/metadata4ing#projectParticipant)** (property)
    * 
    * A property that connects a project with a person or an organisation.
    */
    projectParticipant: prefixer('projectParticipant'),

    /**
    * **[investigates](http://w3id.org/nfdi4ing/metadata4ing#investigates)** (property)
    * 
    * (x investigates y) means that x is about y, in the context of scientific research and development
    */
    investigates: prefixer('investigates'),

    /**
    * **[investigates property](http://w3id.org/nfdi4ing/metadata4ing#investigatesProperty)** (property)
    * 
    * (x investigatesProperty y) means that x is about target property y, in the context of scientific research and development
    */
    investigatesProperty: prefixer('investigatesProperty'),

    /**
    * **[realizes method](http://w3id.org/nfdi4ing/metadata4ing#realizesMethod)** (property)
    * 
    * Points to a method that is used within a given processing step
    */
    realizesMethod: prefixer('realizesMethod'),

    /**
    * **[represents variable](http://w3id.org/nfdi4ing/metadata4ing#representsVariable)** (property)
    * 
    * Points to a variable that is represented through a field within a recordset
    */
    representsVariable: prefixer('representsVariable'),

    /**
    * **[is assignment for](http://www.molmod.info/semantics/pims-ii.ttl#isAssignmentFor)** (property)
    * 
    * (o isAssignment for d) means that d: x = y is an assignment that refers to o; e.g., x may be temperature, y may be a temperature value, and o may be an object of which the temperature has been measured or some other context to which the assignment refers
    */
    '': prefixer(''),

    /**
    * **[compression format](http://www.w3.org/ns/dcat#compressFormat)** (property)
    * 
    * The compression format of the distribution in which the data is contained in a compressed form, e.g. to reduce the size of the downloadable file.
    */
    'dcat:compressFormat': prefixer('dcat:compressFormat'),

    /**
    * **[has distribution](http://www.w3.org/ns/dcat#distribution)** (property)
    * 
    * An available distribution of the dataset.
    */
    'dcat:distribution': prefixer('dcat:distribution'),

    /**
    * **[download URL](http://www.w3.org/ns/dcat#downloadURL)** (property)
    * 
    * The URL of the downloadable file in a given format. E.g. CSV file or RDF file. The format is indicated by the distribution's dcterms:format and/or dcat:mediaType.
    */
    'dcat:downloadURL': prefixer('dcat:downloadURL'),

    /**
    * **[in series](http://www.w3.org/ns/dcat#inSeries)** (property)
    * 
    * A dataset series of which the dataset is part.
    */
    'dcat:inSeries': prefixer('dcat:inSeries'),

    /**
    * **[media type](http://www.w3.org/ns/dcat#mediaType)** (property)
    * 
    * The media type of the distribution as defined by IANA.
    */
    'dcat:mediaType': prefixer('dcat:mediaType'),

    /**
    * **[packaging format](http://www.w3.org/ns/dcat#packageFormat)** (property)
    * 
    * The package format of the distribution in which one or more data files are grouped together, e.g. to enable a set of related files to be downloaded together.
    */
    'dcat:packageFormat': prefixer('dcat:packageFormat'),

    /**
    * **[has agent](http://www.w3.org/ns/prov#agent)** (property)
    * 
    * The prov:agent property is used to reference an agent that had a role in an activity.
    */
    'prov:agent': prefixer('prov:agent'),

    /**
    * **[had role](http://www.w3.org/ns/prov#hadRole)** (property)
    * 
    * prov:hadRole references the Role (i.e. the function of an entity with respect to an activity)
    */
    'prov:hadRole': prefixer('prov:hadRole'),

    /**
    * **[was role in](http://www.w3.org/ns/prov#wasRoleIn)** (property)
    * 
    * prov:wasRoleIn references the association (e.g. between an agent and an activity) in which a role shall be defined. Inverse property of prov:hadRole.
    */
    'prov:wasRoleIn': prefixer('prov:wasRoleIn'),

    /**
    * **[qualified association](http://www.w3.org/ns/prov#qualifiedAssociation)** (property)
    * 
    * Allows to specify more information (e.g. a role) about an association between an agent (e.g. a person) and an Activity (e.g. a processing step).
    */
    'prov:qualifiedAssociation': prefixer('prov:qualifiedAssociation'),

    /**
    * **[participates in](http://www.w3.org/ns/prov#wasAssociateFor)** (property)
    * 
    * property between an agent and an activity with which the agent was associated with or participates in
    */
    'prov:wasAssociateFor': prefixer('prov:wasAssociateFor'),

    /**
    * **[has participant](http://www.w3.org/ns/prov#wasAssociatedWith)** (property)
    * 
    * property between some activity and an agent involved in that activity
    */
    'prov:wasAssociatedWith': prefixer('prov:wasAssociatedWith'),

    /**
    * **[has property](http://www.w3.org/ns/ssn/hasProperty)** (property)
    * 
    * Relation between an entity and a Property of that entity.
    */
    'ssn:hasProperty': prefixer('ssn:hasProperty'),

    /**
    * **[is property of](http://www.w3.org/ns/ssn/isPropertyOf)** (property)
    * 
    * Relation between a Property and the entity it belongs to.
    */
    'ssn:isPropertyOf': prefixer('ssn:isPropertyOf'),

    /**
    * **[personal mailbox](http://xmlns.com/foaf/0.1/mbox)** (property)
    * 
    * A personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that   there is (across time and change) at most one individual that ever has any particular value for foaf:mbox.
    */
    'foaf:mbox': prefixer('foaf:mbox'),

    /**
    * **[usage instruction](http://w3id.org/nfdi4ing/metadata4ing#UsageInstruction)** (property)
    * 
    * Textual description of a processing step within a research process to enable or facilitate its reproducibility
    */
    UsageInstruction: prefixer('UsageInstruction'),

    /**
    * **[project end date](http://w3id.org/nfdi4ing/metadata4ing#endOfProject)** (property)
    * 
    * end date of a project
    */
    endOfProject: prefixer('endOfProject'),

    /**
    * **[has assignment timestamp](http://w3id.org/nfdi4ing/metadata4ing#hasAssignmentTimestamp)** (property)
    * 
    * Points to a timestamp associated with an assignment; there are multiple kinds of timestamp datatype properties, which are included here from schema.org
    */
    hasAssignmentTimestamp: prefixer('hasAssignmentTimestamp'),

    /**
    * **[has timestamp](https://schema.org/temporal)** (property)
    * 
    * The 'temporal' property can be used in cases where more specific properties (e.g., dateCreated, dateModified, datePublished) are not known to be appropriate
    */
    'sdo:temporal': prefixer('sdo:temporal'),

    /**
    * **[has date assignment created](http://w3id.org/nfdi4ing/metadata4ing#hasDateAssignmentCreated)** (property)
    * 
    * Points to a date(time) of creation of an assignment
    */
    hasDateAssignmentCreated: prefixer('hasDateAssignmentCreated'),

    /**
    * **[has date assignment deleted](http://w3id.org/nfdi4ing/metadata4ing#hasDateAssignmentDeleted)** (property)
    * 
    * Points to a date(time) of deletion of an assignment
    */
    hasDateAssignmentDeleted: prefixer('hasDateAssignmentDeleted'),

    /**
    * **[has date assignment modified](http://w3id.org/nfdi4ing/metadata4ing#hasDateAssignmentModified)** (property)
    * 
    * Points to a date(time) of modification of an assignment
    */
    hasDateAssignmentModified: prefixer('hasDateAssignmentModified'),

    /**
    * **[has date assignment valid from](http://w3id.org/nfdi4ing/metadata4ing#hasDateAssignmentValidFrom)** (property)
    * 
    * Points to a date(time) at which the validity of an assignment begins
    */
    hasDateAssignmentValidFrom: prefixer('hasDateAssignmentValidFrom'),

    /**
    * **[has date assignment valid until](http://w3id.org/nfdi4ing/metadata4ing#hasDateAssignmentValidUntil)** (property)
    * 
    * Points to a date(time) at which the validity of an assignment ends
    */
    hasDateAssignmentValidUntil: prefixer('hasDateAssignmentValidUntil'),

    /**
    * **[has maximum value](http://w3id.org/nfdi4ing/metadata4ing#hasMaximumValue)** (property)
    * 
    * Represents the highest value of a multi-valued variable
    */
    hasMaximumValue: prefixer('hasMaximumValue'),

    /**
    * **[has value](http://w3id.org/nfdi4ing/metadata4ing#hasValue)** (property)
    * 
    * A value of any type
    */
    hasValue: prefixer('hasValue'),

    /**
    * **[has minimum value](http://w3id.org/nfdi4ing/metadata4ing#hasMinimumValue)** (property)
    * 
    * Represents the lowest value of a multi-valued variable
    */
    hasMinimumValue: prefixer('hasMinimumValue'),

    /**
    * **[has numerical value](http://w3id.org/nfdi4ing/metadata4ing#hasNumericalValue)** (property)
    * 
    * Represents the numerical value of a real
    */
    hasNumericalValue: prefixer('hasNumericalValue'),

    /**
    * **[has ROR ID](http://w3id.org/nfdi4ing/metadata4ing#hasRorId)** (property)
    * 
    * A Research Organization Registry identifier that persistently and uniquely identifies a research organization
    */
    hasRorId: prefixer('hasRorId'),

    /**
    * **[has identifier](http://w3id.org/nfdi4ing/metadata4ing#identifier)** (property)
    * 
    * A systematically built alphanumeric string that identifies a unique object (e.g. a person, a publication, an organisation, a research activity, a sample, etc.) or a unique class of objects.
    */
    identifier: prefixer('identifier'),

    /**
    * **[has step size](http://w3id.org/nfdi4ing/metadata4ing#hasStepSize)** (property)
    * 
    * Describes the spacing of a multi-valued variable
    */
    hasStepSize: prefixer('hasStepSize'),

    /**
    * **[has string value](http://w3id.org/nfdi4ing/metadata4ing#hasStringValue)** (property)
    * 
    * A character string of any length
    */
    hasStringValue: prefixer('hasStringValue'),

    /**
    * **[has symbol](http://w3id.org/nfdi4ing/metadata4ing#hasSymbol)** (property)
    * 
    * Letter or string that denotes a variable
    */
    hasSymbol: prefixer('hasSymbol'),

    /**
    * **[has variable description](http://w3id.org/nfdi4ing/metadata4ing#hasVariableDescription)** (property)
    * 
    * Textual and human readable description of a variable in a research context
    */
    hasVariableDescription: prefixer('hasVariableDescription'),

    /**
    * **[has ORCID ID](http://w3id.org/nfdi4ing/metadata4ing#orcidId)** (property)
    * 
    * Open Researcher and Contributor ID: an identifier, that allows unique identification of a person, usually active in research.
    */
    orcidId: prefixer('orcidId'),

    /**
    * **[has project ID](http://w3id.org/nfdi4ing/metadata4ing#projectReferenceID)** (property)
    * 
    * An alphanumeric identifier for a project.
    */
    projectReferenceID: prefixer('projectReferenceID'),

    /**
    * **[project start date](http://w3id.org/nfdi4ing/metadata4ing#startOfProject)** (property)
    * 
    * start date of a project
    */
    startOfProject: prefixer('startOfProject'),

    /**
    * **[file size (in bytes)](http://www.w3.org/ns/dcat#byteSize)** (property)
    * 
    * The size of a distribution in bytes.
    */
    'dcat:byteSize': prefixer('dcat:byteSize'),

    /**
    * **[spatial resolution (in metres)](http://www.w3.org/ns/dcat#spatialResolutionInMeters)** (property)
    * 
    * Minimum spatial separation resolvable in a dataset, measured in metres.
    */
    'dcat:spatialResolutionInMeters': prefixer('dcat:spatialResolutionInMeters'),

    /**
    * **[temporal resolution](http://www.w3.org/ns/dcat#temporalResolution)** (property)
    * 
    * Minimum time period resolvable in a dataset.
    */
    'dcat:temporalResolution': prefixer('dcat:temporalResolution'),

    /**
    * **[first name](http://xmlns.com/foaf/0.1/firstName)** (property)
    * 
    * The first name of a person.
    */
    'foaf:firstName': prefixer('foaf:firstName'),

    /**
    * **[last name](http://xmlns.com/foaf/0.1/lastName)** (property)
    * 
    * The last name of a person.
    */
    'foaf:lastName': prefixer('foaf:lastName'),

    /**
    * **[salutation](http://xmlns.com/foaf/0.1/title)** (property)
    * 
    * Title (Mr, Mrs, Ms, Dr. etc)
    */
    'foaf:title': prefixer('foaf:title'),

    /**
    * **[has coverage factor](https://ptb.de/si/hasCoverageFactor)** (property)
    * 
    * points to the coverage factor, i.e., to a factor (greater than or equal to unity) by which the expanded uncertainty relates to the standard uncertainty
    */
    '': prefixer(''),

    /**
    * **[has coverage probability](https://ptb.de/si/hasCoverageProbability)** (property)
    * 
    * points to the probability (between 0 and 1) ascribed to the event of the actual value falling within the range asserted by the given uncertainty declaration
    */
    '': prefixer(''),

    /**
    * **[has statistical distribution](https://ptb.de/si/hasDistribution)** (property)
    * 
    * points to a descriptor/label of the assumed underlying distribution
    */
    '': prefixer(''),

    /**
    * **[has interval maximum](https://ptb.de/si/hasIntervalMax)** (property)
    * 
    * upper boundary of the coverage interval
    */
    '': prefixer(''),

    /**
    * **[has interval minimum](https://ptb.de/si/hasIntervalMin)** (property)
    * 
    * lower boundary of the coverage interval
    */
    '': prefixer(''),

    /**
    * **[has standard uncertainty](https://ptb.de/si/hasStandardUnc)** (property)
    * 
    * The standard measurement uncertainty is the measurement uncertainty expressed as a standard deviation
    */
    '': prefixer(''),

    /**
    * **[has uncertainty](https://ptb.de/si/hasUncertainty)** (property)
    * 
    * absolute magnitude of the indicated uncertainty
    */
    '': prefixer(''),

    /**
    * **[end time](https://schema.org/endTime)** (property)
    * 
    * The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>. For media, including audio and video, it's the time offset of the end of a clip within a larger file.<br/><br/>
    * 
    * Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
    */
    'sdo:endTime': prefixer('sdo:endTime'),

    /**
    * **[start time](https://schema.org/startTime)** (property)
    * 
    * The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.<br/><br/>
    * 
    * Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
    */
    'sdo:startTime': prefixer('sdo:startTime'),

  
  };

export default m4i

