// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('http://www.w3.org/ns/sparql-service-description#');

/**
 * [sd](http://www.w3.org/ns/sparql-service-description#})
 */
const sd = {
  /**
    * **[Aggregate](http://www.w3.org/ns/sparql-service-description#Aggregate)** (class)
    * 
    * An instance of sd:Aggregate represents an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE.
    */
    Aggregate: prefixer('Aggregate'),

    /**
    * **[Feature](http://www.w3.org/ns/sparql-service-description#Feature)** (class)
    * 
    * An instance of sd:Feature represents a feature of a SPARQL service. Specific types of features include functions, aggregates, languages, and entailment regimes and profiles. This document defines five instances of sd:Feature: sd:DereferencesURIs, sd:UnionDefaultGraph, sd:RequiresDataset, sd:EmptyGraphs, and sd:BasicFederatedQuery.
    */
    Feature: prefixer('Feature'),

    /**
    * **[Dataset](http://www.w3.org/ns/sparql-service-description#Dataset)** (class)
    * 
    * An instance of sd:Dataset represents a RDF Dataset comprised of a default graph and zero or more named graphs.
    */
    Dataset: prefixer('Dataset'),

    /**
    * **[Graph Collection](http://www.w3.org/ns/sparql-service-description#GraphCollection)** (class)
    * 
    * An instance of sd:GraphCollection represents a collection of zero or more named graph descriptions. Each named graph description belonging to an sd:GraphCollection MUST be linked with the sd:namedGraph predicate.
    */
    GraphCollection: prefixer('GraphCollection'),

    /**
    * **[Entailment Profile](http://www.w3.org/ns/sparql-service-description#EntailmentProfile)** (class)
    * 
    * An instance of sd:EntailmentProfile represents a profile of an entailment regime. An entailment profile MAY impose restrictions on what constitutes valid RDF with respect to entailment.
    */
    EntailmentProfile: prefixer('EntailmentProfile'),

    /**
    * **[Entailment Regime](http://www.w3.org/ns/sparql-service-description#EntailmentRegime)** (class)
    * 
    * An instance of sd:EntailmentRegime represents an entailment regime used in basic graph pattern matching (as described by SPARQL 1.1 Query Language).
    */
    EntailmentRegime: prefixer('EntailmentRegime'),

    /**
    * **[Function](http://www.w3.org/ns/sparql-service-description#Function)** (class)
    * 
    * An instance of sd:Function represents a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.
    */
    Function: prefixer('Function'),

    /**
    * **[Graph](http://www.w3.org/ns/sparql-service-description#Graph)** (class)
    * 
    * An instance of sd:Graph represents the description of an RDF graph.
    */
    Graph: prefixer('Graph'),

    /**
    * **[Language](http://www.w3.org/ns/sparql-service-description#Language)** (class)
    * 
    * An instance of sd:Language represents one of the SPARQL languages, including specific configurations providing particular features or extensions. This document defines three instances of sd:Language: sd:SPARQL10Query, sd:SPARQL11Query, and sd:SPARQL11Update.
    */
    Language: prefixer('Language'),

    /**
    * **[Named Graph](http://www.w3.org/ns/sparql-service-description#NamedGraph)** (class)
    * 
    * An instance of sd:NamedGraph represents a named graph having a name (via sd:name) and an optional graph description (via sd:graph).
    */
    NamedGraph: prefixer('NamedGraph'),

    /**
    * **[Service](http://www.w3.org/ns/sparql-service-description#Service)** (class)
    * 
    * An instance of sd:Service represents a SPARQL service made available via the SPARQL Protocol.
    */
    Service: prefixer('Service'),

    /**
    * **[available graph descriptions](http://www.w3.org/ns/sparql-service-description#availableGraphs)** (property)
    * 
    * Relates an instance of sd:Service to a description of the graphs which are allowed in the construction of a dataset either via the SPARQL Protocol, with FROM/FROM NAMED clauses in a query, or with USING/USING NAMED in an update request, if the service limits the scope of dataset construction.
    */
    availableGraphs: prefixer('availableGraphs'),

    /**
    * **[default dataset description](http://www.w3.org/ns/sparql-service-description#defaultDataset)** (property)
    * 
    * Relates an instance of sd:Service to a description of the default dataset available when no explicit dataset is specified in the query, update request or via protocol parameters.
    */
    defaultDataset: prefixer('defaultDataset'),

    /**
    * **[default entailment regime](http://www.w3.org/ns/sparql-service-description#defaultEntailmentRegime)** (property)
    * 
    * Relates an instance of sd:Service with a resource representing an entailment regime used for basic graph pattern matching. This property is intended for use when a single entailment regime by default applies to all graphs in the default dataset of the service. In situations where a different entailment regime applies to a specific graph in the dataset, the sd:entailmentRegime property should be used to indicate this fact in the description of that graph.
    */
    defaultEntailmentRegime: prefixer('defaultEntailmentRegime'),

    /**
    * **[feature](http://www.w3.org/ns/sparql-service-description#feature)** (property)
    * 
    * Relates an instance of sd:Service with a resource representing a supported feature.
    */
    feature: prefixer('feature'),

    /**
    * **[default graph](http://www.w3.org/ns/sparql-service-description#defaultGraph)** (property)
    * 
    * Relates an instance of sd:Dataset to the description of its default graph.
    */
    defaultGraph: prefixer('defaultGraph'),

    /**
    * **[default supported entailment profile](http://www.w3.org/ns/sparql-service-description#defaultSupportedEntailmentProfile)** (property)
    * 
    * Relates an instance of sd:Service with a resource representing a supported profile of the default entailment regime (as declared by sd:defaultEntailmentRegime).
    */
    defaultSupportedEntailmentProfile: prefixer('defaultSupportedEntailmentProfile'),

    /**
    * **[endpoint](http://www.w3.org/ns/sparql-service-description#endpoint)** (property)
    * 
    * The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. The object of the sd:endpoint property is an IRI.
    */
    endpoint: prefixer('endpoint'),

    /**
    * **[entailment regime](http://www.w3.org/ns/sparql-service-description#entailmentRegime)** (property)
    * 
    * Relates a named graph description with a resource representing an entailment regime used for basic graph pattern matching over that graph.
    */
    entailmentRegime: prefixer('entailmentRegime'),

    /**
    * **[extension aggregate](http://www.w3.org/ns/sparql-service-description#extensionAggregate)** (property)
    * 
    * Relates an instance of sd:Service to an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE
    */
    extensionAggregate: prefixer('extensionAggregate'),

    /**
    * **[extension function](http://www.w3.org/ns/sparql-service-description#extensionFunction)** (property)
    * 
    * Relates an instance of sd:Service to a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.
    */
    extensionFunction: prefixer('extensionFunction'),

    /**
    * **[graph](http://www.w3.org/ns/sparql-service-description#graph)** (property)
    * 
    * Relates a named graph to its graph description.
    */
    graph: prefixer('graph'),

    /**
    * **[input format](http://www.w3.org/ns/sparql-service-description#inputFormat)** (property)
    * 
    * Relates an instance of sd:Service to a format that is supported for parsing RDF input; for example, via a SPARQL 1.1 Update LOAD statement, or when URIs are dereferenced in FROM/FROM NAMED/USING/USING NAMED clauses.
    */
    inputFormat: prefixer('inputFormat'),

    /**
    * **[language extension](http://www.w3.org/ns/sparql-service-description#languageExtension)** (property)
    * 
    * Relates an instance of sd:Service to a resource representing an implemented extension to the SPARQL Query or Update language.
    */
    languageExtension: prefixer('languageExtension'),

    /**
    * **[name](http://www.w3.org/ns/sparql-service-description#name)** (property)
    * 
    * Relates a named graph to the name by which it may be referenced in a FROM/FROM NAMED clause. The object of the sd:name property is an IRI.
    */
    name: prefixer('name'),

    /**
    * **[named graph](http://www.w3.org/ns/sparql-service-description#namedGraph)** (property)
    * 
    * Relates an instance of sd:GraphCollection (or its subclass sd:Dataset) to the description of one of its named graphs. The description of such a named graph MUST include the sd:name property and MAY include the sd:graph property.
    */
    namedGraph: prefixer('namedGraph'),

    /**
    * **[property feature](http://www.w3.org/ns/sparql-service-description#propertyFeature)** (property)
    * 
    * Relates an instance of sd:Service to a resource representing an implemented feature that extends the SPARQL Query or Update language and that is accessed by using the named property.
    */
    propertyFeature: prefixer('propertyFeature'),

    /**
    * **[result format](http://www.w3.org/ns/sparql-service-description#resultFormat)** (property)
    * 
    * Relates an instance of sd:Service to a format that is supported for serializing query results.
    */
    resultFormat: prefixer('resultFormat'),

    /**
    * **[supported entailment profile](http://www.w3.org/ns/sparql-service-description#supportedEntailmentProfile)** (property)
    * 
    * Relates a named graph description with a resource representing a supported profile of the entailment regime (as declared by sd:entailmentRegime) used for basic graph pattern matching over that graph.
    */
    supportedEntailmentProfile: prefixer('supportedEntailmentProfile'),

    /**
    * **[supported language](http://www.w3.org/ns/sparql-service-description#supportedLanguage)** (property)
    * 
    * Relates an instance of sd:Service to a SPARQL language (e.g. Query and Update) that it implements.
    */
    supportedLanguage: prefixer('supportedLanguage'),

  
  };

export default sd

