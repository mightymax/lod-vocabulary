// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('http://www.w3.org/ns/pim/space#');

/**
 * [pim](http://www.w3.org/ns/pim/space#})
 */
const pim = {
  /**
    * **[access controlled storage](http://www.w3.org/ns/pim/space#ControlledStorage)** (class)
    * 
    * A  storage is a space of URIs in which you can individually control for each resource
    * who has access to it.
    * 
    */
    ControlledStorage: prefixer('ControlledStorage'),

    /**
    * **[storage](http://www.w3.org/ns/pim/space#Storage)** (class)
    * 
    * A storage is a space of URIs in which you have access to data.
    * 
    */
    Storage: prefixer('Storage'),

    /**
    * **[personal storage](http://www.w3.org/ns/pim/space#PersonalStorage)** (class)
    * 
    * A personal storage is a space of URIs in which you and only you have access to data,
    * you cannot give access to anyone else.
    * 
    */
    PersonalStorage: prefixer('PersonalStorage'),

    /**
    * **[workspace](http://www.w3.org/ns/pim/space#Workspace)** (class)
    * 
    * Workspaces are place where data is stored, and associated polices of privacy.
    * A given application typically stores information in several different
    * workspaces, some being user private, some shared, and some public.
    * 
    */
    Workspace: prefixer('Workspace'),

    /**
    * **[public storage](http://www.w3.org/ns/pim/space#PublicStorage)** (class)
    * 
    * A public storage is a space of URIs in which you have access to data,
    * and all data is accessible to anyone without control.
    * 
    */
    PublicStorage: prefixer('PublicStorage'),

    /**
    * **[storage](http://www.w3.org/ns/pim/space#storage)** (property)
    * 
    * The storage in which this workspace is, or the storage which
    * contains this resource, or a storage available to this agent to use.
    */
    storage: prefixer('storage'),

    /**
    * **[URI prefix](http://www.w3.org/ns/pim/space#uriPrefix)** (property)
    * 
    * URIs which start with this string are in this workspace or storage.
    * This may be used for constructing URIs for new storage resources.
    * 
    */
    uriPrefix: prefixer('uriPrefix'),

  
  };

export default pim

