// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('http://dbpedia.org/ontology/');

/**
 * [dbo](http://dbpedia.org/ontology/})
 */
const dbo = {
  /**
    * **[academic journal](http://dbpedia.org/ontology/AcademicJournal)** (class)
    * 
    * An academic journal is a mostly peer-reviewed periodical in which scholarship relating to a particular academic discipline is published. Academic journals serve as forums for the introduction and presentation for scrutiny of new research, and the critique of existing research. Content typically takes the form of articles presenting original research, review articles, and book reviews.
    */
    AcademicJournal: prefixer('AcademicJournal'),

    /**
    * **[academic subject](http://dbpedia.org/ontology/AcademicSubject)** (class)
    * 
    * Genres of art, e.g. Mathematics, History, Philosophy, Medicine
    */
    AcademicSubject: prefixer('AcademicSubject'),

    /**
    * **[actor](http://dbpedia.org/ontology/Actor)** (class)
    * 
    * An actor or actress is a person who acts in a dramatic production and who works in film, television, theatre, or radio in that capacity.
    */
    Actor: prefixer('Actor'),

    /**
    * **[administrative region](http://dbpedia.org/ontology/AdministrativeRegion)** (class)
    * 
    * A PopulatedPlace under the jurisdiction of an administrative body. This body may administer either a whole region or one or more adjacent Settlements (town administration)
    */
    AdministrativeRegion: prefixer('AdministrativeRegion'),

    /**
    * **[adult (pornographic) actor](http://dbpedia.org/ontology/AdultActor)** (class)
    * 
    * A pornographic actor or actress or a porn star is a person who performs sex acts in film, normally characterised as a pornographic film.
    */
    AdultActor: prefixer('AdultActor'),

    /**
    * **[agent](http://dbpedia.org/ontology/Agent)** (class)
    * 
    * Analogous to a foaf:Agent, an agent is an entity that acts. This is intended to be the super class of Person and Organisation.
    */
    Agent: prefixer('Agent'),

    /**
    * **[ambassador](http://dbpedia.org/ontology/Ambassador)** (class)
    * 
    * An ambassador is the highest ranking diplomat that represents a nation and is usually accredited to a foreign sovereign or government, or to an international organization.
    */
    Ambassador: prefixer('Ambassador'),

    /**
    * **[american football league](http://dbpedia.org/ontology/AmericanFootballLeague)** (class)
    * 
    * A group of sports teams that compete against each other in american football.
    */
    AmericanFootballLeague: prefixer('AmericanFootballLeague'),

    /**
    * **[animanga character](http://dbpedia.org/ontology/AnimangaCharacter)** (class)
    * 
    * Anime/Manga character
    */
    AnimangaCharacter: prefixer('AnimangaCharacter'),

    /**
    * **[Anime](http://dbpedia.org/ontology/Anime)** (class)
    * 
    * A style of animation originating in Japan
    */
    Anime: prefixer('Anime'),

    /**
    * **[architectural structure](http://dbpedia.org/ontology/ArchitecturalStructure)** (class)
    * 
    * An architectural structure is a human-made, free-standing, immobile outdoor construction (http://en.wikipedia.org/wiki/Architectural_structure).
    */
    ArchitecturalStructure: prefixer('ArchitecturalStructure'),

    /**
    * **[Archive](http://dbpedia.org/ontology/Archive)** (class)
    * 
    * Collection of documents pertaining to a person or organisation.
    */
    Archive: prefixer('Archive'),

    /**
    * **[area](http://dbpedia.org/ontology/Area)** (class)
    * 
    * Area of something. Use "value" for the value, "min" & "max" for a range (if uncertain) and "rank" (integer) for the rank of that thing amongst its siblings (eg regions ordered by area)
    */
    Area: prefixer('Area'),

    /**
    * **[arena](http://dbpedia.org/ontology/Arena)** (class)
    * 
    * An arena is an enclosed area, often circular or oval-shaped, designed to showcase theater, musical performances, or sporting events. (http://en.wikipedia.org/wiki/Arena)
    */
    Arena: prefixer('Arena'),

    /**
    * **[arrondissement](http://dbpedia.org/ontology/Arrondissement)** (class)
    * 
    * An administrative (France) or lawcourts (Netherlands) body governing a territorial unity on the intermediate level, between local and national level
    */
    Arrondissement: prefixer('Arrondissement'),

    /**
    * **[ArtificialSatellite](http://dbpedia.org/ontology/ArtificialSatellite)** (class)
    * 
    * In the context of spaceflight, an artificial satellite is an artificial object which has been intentionally placed into orbit.
    */
    ArtificialSatellite: prefixer('ArtificialSatellite'),

    /**
    * **[artistic genre](http://dbpedia.org/ontology/ArtisticGenre)** (class)
    * 
    * Genres of art, e.g. Pointillist, Modernist
    */
    ArtisticGenre: prefixer('ArtisticGenre'),

    /**
    * **[artwork](http://dbpedia.org/ontology/Artwork)** (class)
    * 
    * A work of art, artwork, art piece, or art object is an aesthetic item or artistic creation.
    */
    Artwork: prefixer('Artwork'),

    /**
    * **[attack](http://dbpedia.org/ontology/Attack)** (class)
    * 
    * An Attack is not necessarily part of a Military Conflict
    */
    Attack: prefixer('Attack'),

    /**
    * **[australian football league](http://dbpedia.org/ontology/AustralianFootballLeague)** (class)
    * 
    * A group of sports teams that compete against each other in australian football.
    */
    AustralianFootballLeague: prefixer('AustralianFootballLeague'),

    /**
    * **[auto racing league](http://dbpedia.org/ontology/AutoRacingLeague)** (class)
    * 
    * a group of sports teams or individual athletes that compete against each other in auto racing
    */
    AutoRacingLeague: prefixer('AutoRacingLeague'),

    /**
    * **[bank](http://dbpedia.org/ontology/Bank)** (class)
    * 
    * a company which main services are banking or financial services.
    */
    Bank: prefixer('Bank'),

    /**
    * **[baseball league](http://dbpedia.org/ontology/BaseballLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Baseball.
    */
    BaseballLeague: prefixer('BaseballLeague'),

    /**
    * **[basketball league](http://dbpedia.org/ontology/BasketballLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Basketball
    */
    BasketballLeague: prefixer('BasketballLeague'),

    /**
    * **[beach](http://dbpedia.org/ontology/Beach)** (class)
    * 
    * The shore of a body of water, especially when sandy or pebbly.
    */
    Beach: prefixer('Beach'),

    /**
    * **[beauty queen](http://dbpedia.org/ontology/BeautyQueen)** (class)
    * 
    * A beauty pageant titleholder
    */
    BeautyQueen: prefixer('BeautyQueen'),

    /**
    * **[beverage](http://dbpedia.org/ontology/Beverage)** (class)
    * 
    * A drink, or beverage, is a liquid which is specifically prepared for human consumption.
    */
    Beverage: prefixer('Beverage'),

    /**
    * **[Biomolecule](http://dbpedia.org/ontology/Biomolecule)** (class)
    * 
    * equivalent to http://ccdb.ucsd.edu/NIF/BIRNLex-OBO-UBO.owl#birnlex_22.
    */
    Biomolecule: prefixer('Biomolecule'),

    /**
    * **[board game](http://dbpedia.org/ontology/BoardGame)** (class)
    * 
    * come from http://en.wikipedia.org/wiki/Category:Board_games
    */
    BoardGame: prefixer('BoardGame'),

    /**
    * **[bowling league](http://dbpedia.org/ontology/BowlingLeague)** (class)
    * 
    * a group of sports teams or players that compete against each other in Bowling
    */
    BowlingLeague: prefixer('BowlingLeague'),

    /**
    * **[boxing league](http://dbpedia.org/ontology/BoxingLeague)** (class)
    * 
    * A group of sports teams or fighters that compete against each other in Boxing
    */
    BoxingLeague: prefixer('BoxingLeague'),

    /**
    * **[bridge](http://dbpedia.org/ontology/Bridge)** (class)
    * 
    * A bridge is a structure built to span physical obstacles such as a body of water, valley, or road, for the purpose of providing passage over the obstacle (http://en.wikipedia.org/wiki/Bridge).
    */
    Bridge: prefixer('Bridge'),

    /**
    * **[broadcast network](http://dbpedia.org/ontology/BroadcastNetwork)** (class)
    * 
    * A broadcast network is an organization, such as a corporation or other association, that provides live or recorded content, such as movies, newscasts, sports, and public affairs programs for broadcast over a group of radio or television stations. (http://en.wikipedia.org/wiki/Broadcast_network - 28/03/2011)
    */
    BroadcastNetwork: prefixer('BroadcastNetwork'),

    /**
    * **[broadcaster](http://dbpedia.org/ontology/Broadcaster)** (class)
    * 
    * A broadcaster is an organisation responsible for the production of radio or television programs and/or their transmission. (http://en.wikipedia.org/wiki/Broadcaster - 28/03/2011)
    */
    Broadcaster: prefixer('Broadcaster'),

    /**
    * **[building](http://dbpedia.org/ontology/Building)** (class)
    * 
    * Building is defined as a Civil Engineering structure such as a house, worship center, factory etc. that has a foundation, wall, roof etc. that protect human being and their properties from direct harsh effect of weather like rain, wind, sun etc. (http://en.wikipedia.org/wiki/Building).
    */
    Building: prefixer('Building'),

    /**
    * **[liga de f√∫tbol canadiense](http://dbpedia.org/ontology/CanadianFootballLeague)** (class)
    * 
    * A group of sports teams that compete against each other in canadian football league.
    */
    CanadianFootballLeague: prefixer('CanadianFootballLeague'),

    /**
    * **[canal](http://dbpedia.org/ontology/Canal)** (class)
    * 
    * a man-made channel for water
    */
    Canal: prefixer('Canal'),

    /**
    * **[canton](http://dbpedia.org/ontology/Canton)** (class)
    * 
    * An administrative (France) or lawcourts (Netherlands) body governing a territorial unity on the municipal level or somewhat above
    */
    Canton: prefixer('Canton'),

    /**
    * **[Capital](http://dbpedia.org/ontology/Capital)** (class)
    * 
    * A municipality enjoying primary status in a state, country, province, or other region as its seat of government.
    */
    Capital: prefixer('Capital'),

    /**
    * **[Capital of region](http://dbpedia.org/ontology/CapitalOfRegion)** (class)
    * 
    * seat of a first order administration division.
    */
    CapitalOfRegion: prefixer('CapitalOfRegion'),

    /**
    * **[card game](http://dbpedia.org/ontology/CardGame)** (class)
    * 
    * come from http://en.wikipedia.org/wiki/Category:Card_games
    */
    CardGame: prefixer('CardGame'),

    /**
    * **[Cardinal direction](http://dbpedia.org/ontology/CardinalDirection)** (class)
    * 
    * One of the four main directions on a compass or any other system to determine a geographical position
    */
    CardinalDirection: prefixer('CardinalDirection'),

    /**
    * **[career station](http://dbpedia.org/ontology/CareerStation)** (class)
    * 
    * this class marks a career step in the life of a person, e.g. a soccer player, holding information on the time span, matches and goals he or she achieved at a certain club
    */
    CareerStation: prefixer('CareerStation'),

    /**
    * **[case](http://dbpedia.org/ontology/Case)** (class)
    * 
    * A case is the total of work done to prepare for an administrative or business decision. As a rule, a case is reflected in a set of documents.
    */
    Case: prefixer('Case'),

    /**
    * **[casino](http://dbpedia.org/ontology/Casino)** (class)
    * 
    * In modern English, a casino is a facility which houses and accommodates certain types of gambling activities.
    */
    Casino: prefixer('Casino'),

    /**
    * **[castle](http://dbpedia.org/ontology/Castle)** (class)
    * 
    * Castles often are, but need not be a military structure. They can serve for status, pleasure and hunt as well.
    */
    Castle: prefixer('Castle'),

    /**
    * **[cemetery](http://dbpedia.org/ontology/Cemetery)** (class)
    * 
    * A burial place
    */
    Cemetery: prefixer('Cemetery'),

    /**
    * **[cheese](http://dbpedia.org/ontology/Cheese)** (class)
    * 
    * A milk product prepared for human consumption
    */
    Cheese: prefixer('Cheese'),

    /**
    * **[chef](http://dbpedia.org/ontology/Chef)** (class)
    * 
    * a person who cooks professionally for other people
    */
    Chef: prefixer('Chef'),

    /**
    * **[Christian Doctrine](http://dbpedia.org/ontology/ChristianDoctrine)** (class)
    * 
    * Tenets of the Christian faith, e.g. Trinity, Nicene Creed
    */
    ChristianDoctrine: prefixer('ChristianDoctrine'),

    /**
    * **[average speed (km/s)](http://dbpedia.org/ontology/Galaxy/averageSpeed)** (property)
    * 
    * The average speed of a thing.
    */
    'Galaxy/averageSpeed': prefixer('Galaxy/averageSpeed'),

    /**
    * **[church](http://dbpedia.org/ontology/Church)** (class)
    * 
    * This is used for church buildings, not any other meaning of church.
    */
    Church: prefixer('Church'),

    /**
    * **[city](http://dbpedia.org/ontology/City)** (class)
    * 
    * a relatively large and permanent settlement, particularly a large urban settlement
    */
    City: prefixer('City'),

    /**
    * **[city district](http://dbpedia.org/ontology/CityDistrict)** (class)
    * 
    * District, borough, area or neighbourhood in a city or town
    */
    CityDistrict: prefixer('CityDistrict'),

    /**
    * **[clerical administrative region](http://dbpedia.org/ontology/ClericalAdministrativeRegion)** (class)
    * 
    * An administrative body governing some territorial unity, in this case a clerical administrative body
    */
    ClericalAdministrativeRegion: prefixer('ClericalAdministrativeRegion'),

    /**
    * **[coal pit](http://dbpedia.org/ontology/CoalPit)** (class)
    * 
    * A coal pit is a place where charcoal is or was extracted
    */
    CoalPit: prefixer('CoalPit'),

    /**
    * **[collection of valuables](http://dbpedia.org/ontology/CollectionOfValuables)** (class)
    * 
    * Collection of valuables is a collection considered to be a work in itself)
    */
    CollectionOfValuables: prefixer('CollectionOfValuables'),

    /**
    * **[colour](http://dbpedia.org/ontology/Colour)** (class)
    * 
    * Color or colour is the visual perceptual property corresponding in humans to the categories called red, yellow, blue and others. Color derives from the spectrum of light (distribution of light energy versus wavelength) interacting in the eye with the spectral sensitivities of the light receptors.
    */
    Colour: prefixer('Colour'),

    /**
    * **[Concentration camp](http://dbpedia.org/ontology/ConcentrationCamp)** (class)
    * 
    * camp in which people are imprisoned or confined, commonly in large groups, without trial.
    * Includes concentration, extermination, transit, detention, internment, (forced) labor, prisoner-of-war, Gulag; Nazi camps related to the Holocaust
    */
    ConcentrationCamp: prefixer('ConcentrationCamp'),

    /**
    * **[Controlled designation of origin wine](http://dbpedia.org/ontology/ControlledDesignationOfOriginWine)** (class)
    * 
    * A quality assurance label for wines
    */
    ControlledDesignationOfOriginWine: prefixer('ControlledDesignationOfOriginWine'),

    /**
    * **[country estate](http://dbpedia.org/ontology/CountrySeat)** (class)
    * 
    * A country seat is a rural patch of land owned by a land owner.
    */
    CountrySeat: prefixer('CountrySeat'),

    /**
    * **[cricket league](http://dbpedia.org/ontology/CricketLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Cricket
    */
    CricketLeague: prefixer('CricketLeague'),

    /**
    * **[average speed (km/s)](http://dbpedia.org/ontology/Planet/averageSpeed)** (property)
    * 
    * The average speed of a thing.
    */
    'Planet/averageSpeed': prefixer('Planet/averageSpeed'),

    /**
    * **[cultivar (cultivated variety)](http://dbpedia.org/ontology/CultivatedVariety)** (class)
    * 
    * A cultivar is a plant or grouping of plants selected for desirable characteristics that can be maintained by propagation. A plant whose origin or selection is primarily due to intentional human activity.
    */
    CultivatedVariety: prefixer('CultivatedVariety'),

    /**
    * **[curling league](http://dbpedia.org/ontology/CurlingLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Curling
    */
    CurlingLeague: prefixer('CurlingLeague'),

    /**
    * **[cycling league](http://dbpedia.org/ontology/CyclingLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Cycling
    */
    CyclingLeague: prefixer('CyclingLeague'),

    /**
    * **[area (km2)](http://dbpedia.org/ontology/PopulatedPlace/area)** (property)
    * 
    * The area of the thing in square meters.
    */
    'PopulatedPlace/area': prefixer('PopulatedPlace/area'),

    /**
    * **[dam](http://dbpedia.org/ontology/Dam)** (class)
    * 
    * A dam is part of a landscape infrastructure, like waterworks (canals) or roads, much more than a building, though, of course, it has been built, too.
    */
    Dam: prefixer('Dam'),

    /**
    * **[deanery](http://dbpedia.org/ontology/Deanery)** (class)
    * 
    * The intermediate level of a clerical administrative body between parish and diocese
    */
    Deanery: prefixer('Deanery'),

    /**
    * **[decoration](http://dbpedia.org/ontology/Decoration)** (class)
    * 
    * An object, such as a medal or an order, that is awarded to honor the recipient ostentatiously.
    */
    Decoration: prefixer('Decoration'),

    /**
    * **[lower earth orbit payload (kg)](http://dbpedia.org/ontology/Rocket/lowerEarthOrbitPayload)** (property)
    * 
    * Payload mass in a typical Low Earth orbit
    */
    'Rocket/lowerEarthOrbitPayload': prefixer('Rocket/lowerEarthOrbitPayload'),

    /**
    * **[demographics](http://dbpedia.org/ontology/Demographics)** (class)
    * 
    * Population of a place. Uses these properties: populationTotal, year (when measured, populationYear), rank (sortOrder of this place amongst its siblings at the same level), name (areal measured by the population, eg: "locality", "municipality" or "comitat")
    */
    Demographics: prefixer('Demographics'),

    /**
    * **[size (MB)](http://dbpedia.org/ontology/Software/fileSize)** (property)
    * 
    * size of a file or software
    */
    'Software/fileSize': prefixer('Software/fileSize'),

    /**
    * **[Desert](http://dbpedia.org/ontology/Desert)** (class)
    * 
    * A barren area of land where little precipitation occurs.
    */
    Desert: prefixer('Desert'),

    /**
    * **[dike](http://dbpedia.org/ontology/Dike)** (class)
    * 
    * A dike is an elongated naturally occurring ridge or artificially constructed fill or wall, which regulates water levels
    */
    Dike: prefixer('Dike'),

    /**
    * **[diocese](http://dbpedia.org/ontology/Diocese)** (class)
    * 
    * District or see under the supervision of a bishop.
    */
    Diocese: prefixer('Diocese'),

    /**
    * **[district water board](http://dbpedia.org/ontology/DistrictWaterBoard)** (class)
    * 
    * Conservancy, governmental agency dedicated to surface water management
    */
    DistrictWaterBoard: prefixer('DistrictWaterBoard'),

    /**
    * **[document](http://dbpedia.org/ontology/Document)** (class)
    * 
    * Any document
    */
    Document: prefixer('Document'),

    /**
    * **[Document Type](http://dbpedia.org/ontology/DocumentType)** (class)
    * 
    * type of document (official, informal etc.)
    */
    DocumentType: prefixer('DocumentType'),

    /**
    * **[earthquake](http://dbpedia.org/ontology/Earthquake)** (class)
    * 
    * the result of a sudden release of energy in the Earth's crust that creates seismic waves
    */
    Earthquake: prefixer('Earthquake'),

    /**
    * **[economist](http://dbpedia.org/ontology/Economist)** (class)
    * 
    * An economist is a professional in the social science discipline of economics.
    */
    Economist: prefixer('Economist'),

    /**
    * **[Employer](http://dbpedia.org/ontology/Employer)** (class)
    * 
    * a person, business, firm, etc, that employs workers.
    */
    Employer: prefixer('Employer'),

    /**
    * **[Employers' Organisation](http://dbpedia.org/ontology/EmployersOrganisation)** (class)
    * 
    * An employers' organisation is an organisation of entrepreneurs who work together to coordinate their actions in the field of labour relations
    */
    EmployersOrganisation: prefixer('EmployersOrganisation'),

    /**
    * **[factory](http://dbpedia.org/ontology/Factory)** (class)
    * 
    * A factory (previously manufactory) or manufacturing plant is an industrial site, usually consisting of buildings and machinery, or more commonly a complex having several buildings, where workers manufacture goods or operate machines processing one product into another.
    */
    Factory: prefixer('Factory'),

    /**
    * **[family](http://dbpedia.org/ontology/Family)** (class)
    * 
    * A group of people related by common descent, a lineage.
    */
    Family: prefixer('Family'),

    /**
    * **[fashion](http://dbpedia.org/ontology/Fashion)** (class)
    * 
    * type or code of dressing, according to the standards of the time or individual design.
    */
    Fashion: prefixer('Fashion'),

    /**
    * **[abstentions](http://dbpedia.org/ontology/abstentions)** (property)
    * 
    * Number of abstentions from the vote
    */
    abstentions: prefixer('abstentions'),

    /**
    * **[has abstract](http://dbpedia.org/ontology/abstract)** (property)
    * 
    * Reserved for DBpedia.
    */
    abstract: prefixer('abstract'),

    /**
    * **[field hockey league](http://dbpedia.org/ontology/FieldHockeyLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Field Hockey
    */
    FieldHockeyLeague: prefixer('FieldHockeyLeague'),

    /**
    * **[file](http://dbpedia.org/ontology/File)** (class)
    * 
    * A document with a filename
    */
    File: prefixer('File'),

    /**
    * **[active years](http://dbpedia.org/ontology/activeYears)** (property)
    * 
    * Also called "floruit". Use this if the active years are in one field that can't be split. Else use activeYearsStartYear and activeYearsEndYear
    */
    activeYears: prefixer('activeYears'),

    /**
    * **[Food](http://dbpedia.org/ontology/Food)** (class)
    * 
    * Food is any eatable or drinkable substance that is normally consumed by humans.
    */
    Food: prefixer('Food'),

    /**
    * **[football match](http://dbpedia.org/ontology/FootballMatch)** (class)
    * 
    * a competition between two football teams
    */
    FootballMatch: prefixer('FootballMatch'),

    /**
    * **[forest](http://dbpedia.org/ontology/Forest)** (class)
    * 
    * A natural place more or less densely grown with trees
    */
    Forest: prefixer('Forest'),

    /**
    * **[address](http://dbpedia.org/ontology/address)** (property)
    * 
    * Address of something as literal. Usually Building, but we also use it for the address of a Region's or Settlement's government
    */
    address: prefixer('address'),

    /**
    * **[one-time municipality](http://dbpedia.org/ontology/FormerMunicipality)** (class)
    * 
    * A municipality that has ceased to exist, and most of the time got incorporated (wholesale or partly) into another municipality
    */
    FormerMunicipality: prefixer('FormerMunicipality'),

    /**
    * **[fort](http://dbpedia.org/ontology/Fort)** (class)
    * 
    * Fortified place, most of the time to protect traffic routes
    */
    Fort: prefixer('Fort'),

    /**
    * **[age range](http://dbpedia.org/ontology/ageRange)** (property)
    * 
    * Age range of students admitted in a School, MilitaryUnit, etc
    */
    ageRange: prefixer('ageRange'),

    /**
    * **[agency station code](http://dbpedia.org/ontology/agencyStationCode)** (property)
    * 
    * Agency station code (used on tickets/reservations, etc.).
    */
    agencyStationCode: prefixer('agencyStationCode'),

    /**
    * **[game](http://dbpedia.org/ontology/Game)** (class)
    * 
    * a structured activity, usually undertaken for enjoyment and sometimes used as an educational tool
    */
    Game: prefixer('Game'),

    /**
    * **[garden](http://dbpedia.org/ontology/Garden)** (class)
    * 
    * A garden is a planned space, usually outdoors, set aside for the display, cultivation, and enjoyment of plants and other forms of nature. (http://en.wikipedia.org/wiki/Garden)
    */
    Garden: prefixer('Garden'),

    /**
    * **[albedo](http://dbpedia.org/ontology/albedo)** (property)
    * 
    * reflection coefficient
    */
    albedo: prefixer('albedo'),

    /**
    * **[allegiance](http://dbpedia.org/ontology/allegiance)** (property)
    * 
    * The country or other power the person served. Multiple countries may be indicated together with the corresponding dates. This field should not be used to indicate a particular service branch, which is better indicated by the branch field.
    */
    allegiance: prefixer('allegiance'),

    /**
    * **[Alps SOIUSA code](http://dbpedia.org/ontology/alpsSoiusaCode)** (property)
    * 
    * the Alps SOIUSA code corresponding to the mountain, according to the SOIUSA classification
    */
    alpsSoiusaCode: prefixer('alpsSoiusaCode'),

    /**
    * **[alternative name](http://dbpedia.org/ontology/alternativeName)** (property)
    * 
    * Alternative naming of anything not being a Person (for which case foaf:nick should be used).
    */
    alternativeName: prefixer('alternativeName'),

    /**
    * **[alternative title](http://dbpedia.org/ontology/alternativeTitle)** (property)
    * 
    * The alternative title attributed to a work
    */
    alternativeTitle: prefixer('alternativeTitle'),

    /**
    * **[golf league](http://dbpedia.org/ontology/GolfLeague)** (class)
    * 
    * Golfplayer that compete against each other in Golf
    */
    GolfLeague: prefixer('GolfLeague'),

    /**
    * **[government agency](http://dbpedia.org/ontology/GovernmentAgency)** (class)
    * 
    * A government agency is a permanent or semi-permanent organization in the machinery of government that is responsible for the oversight and administration of specific functions, such as an intelligence agency.
    */
    GovernmentAgency: prefixer('GovernmentAgency'),

    /**
    * **[cabinet of ministers](http://dbpedia.org/ontology/GovernmentCabinet)** (class)
    * 
    * A cabinet is a body of high-ranking state officials, typically consisting of the top leaders of the executive branch.
    */
    GovernmentCabinet: prefixer('GovernmentCabinet'),

    /**
    * **[Government Type](http://dbpedia.org/ontology/GovernmentType)** (class)
    * 
    * a form of government
    */
    GovernmentType: prefixer('GovernmentType'),

    /**
    * **[governmental administrative region](http://dbpedia.org/ontology/GovernmentalAdministrativeRegion)** (class)
    * 
    * An administrative body governing some territorial unity, in this case a governmental administrative body
    */
    GovernmentalAdministrativeRegion: prefixer('GovernmentalAdministrativeRegion'),

    /**
    * **[grave stone or grave monument](http://dbpedia.org/ontology/GraveMonument)** (class)
    * 
    * A monument erected on a tomb, or a memorial stone.
    */
    GraveMonument: prefixer('GraveMonument'),

    /**
    * **[group](http://dbpedia.org/ontology/Group)** (class)
    * 
    * An (informal) group of people.
    */
    Group: prefixer('Group'),

    /**
    * **[guitar](http://dbpedia.org/ontology/Guitar)** (class)
    * 
    * Describes the guitar
    */
    Guitar: prefixer('Guitar'),

    /**
    * **[gymnast](http://dbpedia.org/ontology/Gymnast)** (class)
    * 
    * A gymnast is one who performs gymnastics
    */
    Gymnast: prefixer('Gymnast'),

    /**
    * **[date of approval by lower parliament](http://dbpedia.org/ontology/approvedByLowerParliament)** (property)
    * 
    * Date of approval by lower parliament (House of Commons, Chambre des D√©put√©s, Bundestag, Tweede Kamer etc.).
    */
    approvedByLowerParliament: prefixer('approvedByLowerParliament'),

    /**
    * **[handball league](http://dbpedia.org/ontology/HandballLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Handball
    */
    HandballLeague: prefixer('HandballLeague'),

    /**
    * **[date of approval by upper parliament](http://dbpedia.org/ontology/approvedByUpperParliament)** (property)
    * 
    * Date of approval by upper parliament (House of Lords, S√©nat, Eerste Kamer etc.).
    */
    approvedByUpperParliament: prefixer('approvedByUpperParliament'),

    /**
    * **[approximate calories (J)](http://dbpedia.org/ontology/approximateCalories)** (property)
    * 
    * Approximate calories per serving.
    */
    approximateCalories: prefixer('approximateCalories'),

    /**
    * **[area (m2)](http://dbpedia.org/ontology/area)** (property)
    * 
    * The area of the thing in square meters.
    */
    area: prefixer('area'),

    /**
    * **[area code](http://dbpedia.org/ontology/areaCode)** (property)
    * 
    * Area code for telephone numbers. Use this not phonePrefix
    */
    areaCode: prefixer('areaCode'),

    /**
    * **[ancient area of jurisdiction of a person (feudal) or of a governmental body](http://dbpedia.org/ontology/HistoricalAreaOfAuthority)** (class)
    * 
    * Mostly for feudal forms of authority, but can also serve for historical forms of centralised authority
    */
    HistoricalAreaOfAuthority: prefixer('HistoricalAreaOfAuthority'),

    /**
    * **[Historical country](http://dbpedia.org/ontology/HistoricalCountry)** (class)
    * 
    * A place which used to be a country.
    */
    HistoricalCountry: prefixer('HistoricalCountry'),

    /**
    * **[Historical district](http://dbpedia.org/ontology/HistoricalDistrict)** (class)
    * 
    * a place which used to be a district.
    */
    HistoricalDistrict: prefixer('HistoricalDistrict'),

    /**
    * **[historical period](http://dbpedia.org/ontology/HistoricalPeriod)** (class)
    * 
    * A historical Period should be linked to a Place by way of the property dct:spatial (already defined)
    */
    HistoricalPeriod: prefixer('HistoricalPeriod'),

    /**
    * **[Historical province](http://dbpedia.org/ontology/HistoricalProvince)** (class)
    * 
    * A place which used to be a province.
    */
    HistoricalProvince: prefixer('HistoricalProvince'),

    /**
    * **[Historical region](http://dbpedia.org/ontology/HistoricalRegion)** (class)
    * 
    * a place which used to be a region.
    */
    HistoricalRegion: prefixer('HistoricalRegion'),

    /**
    * **[Historical settlement](http://dbpedia.org/ontology/HistoricalSettlement)** (class)
    * 
    * A place which used to be a city or town or village.
    */
    HistoricalSettlement: prefixer('HistoricalSettlement'),

    /**
    * **[Hormone](http://dbpedia.org/ontology/Hormone)** (class)
    * 
    * A hormone is any member of a class of signaling molecules produced by glands in multicellular organisms that are transported by the circulatory system to target distant organs to regulate physiology and behaviour.
    */
    Hormone: prefixer('Hormone'),

    /**
    * **[ascent](http://dbpedia.org/ontology/ascent)** (property)
    * 
    * Ascent of a celestial body, aircraft, etc. For person who ascended a mountain, use firstAscent
    */
    ascent: prefixer('ascent'),

    /**
    * **[assets ($)](http://dbpedia.org/ontology/assets)** (property)
    * 
    * Assets and liabilities are part of a companis balance sheet. In financial accounting, assets are economic resources. Anything tangible or intangible that is capable of being owned or controlled to produce value and that is held to have positive economic value is considered an asset.
    */
    assets: prefixer('assets'),

    /**
    * **[ice hockey league](http://dbpedia.org/ontology/IceHockeyLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Ice Hockey.
    */
    IceHockeyLeague: prefixer('IceHockeyLeague'),

    /**
    * **[page number](http://dbpedia.org/ontology/atPage)** (property)
    * 
    * Page # where the referenced resource is to be found in the source document
    */
    atPage: prefixer('atPage'),

    /**
    * **[row number](http://dbpedia.org/ontology/atRowNumber)** (property)
    * 
    * Row # where the referenced resource is to be found in the source file
    */
    atRowNumber: prefixer('atRowNumber'),

    /**
    * **[ideology](http://dbpedia.org/ontology/Ideology)** (class)
    * 
    * for example: Progressivism_in_the_United_States, Classical_liberalism
    */
    Ideology: prefixer('Ideology'),

    /**
    * **[image](http://dbpedia.org/ontology/Image)** (class)
    * 
    * A document that contains a visual image
    */
    Image: prefixer('Image'),

    /**
    * **[information appliance](http://dbpedia.org/ontology/InformationAppliance)** (class)
    * 
    * An information device such as PDAs or Video game consoles, etc.
    */
    InformationAppliance: prefixer('InformationAppliance'),

    /**
    * **[atomic number](http://dbpedia.org/ontology/atomicNumber)** (property)
    * 
    * the ratio of the average mass of atoms of an element (from a single given sample or source) to 1‚ÅÑ12 of the mass of an atom of carbon-12
    */
    atomicNumber: prefixer('atomicNumber'),

    /**
    * **[inline hockey league](http://dbpedia.org/ontology/InlineHockeyLeague)** (class)
    * 
    * group of sports teams that compete against each other in Inline Hockey.
    */
    InlineHockeyLeague: prefixer('InlineHockeyLeague'),

    /**
    * **[Instrument](http://dbpedia.org/ontology/Instrument)** (class)
    * 
    * Describes all musical instrument
    */
    Instrument: prefixer('Instrument'),

    /**
    * **[international organisation](http://dbpedia.org/ontology/InternationalOrganisation)** (class)
    * 
    * An international organisation is either a private or a public organisation seeking to accomplish goals across country borders
    */
    InternationalOrganisation: prefixer('InternationalOrganisation'),

    /**
    * **[average depth (Œº)](http://dbpedia.org/ontology/averageDepth)** (property)
    * 
    * Source of the value can be declare by .
    */
    averageDepth: prefixer('averageDepth'),

    /**
    * **[average depth quote](http://dbpedia.org/ontology/averageDepthQuote)** (property)
    * 
    * Source of the  value.
    */
    averageDepthQuote: prefixer('averageDepthQuote'),

    /**
    * **[average speed (kmh)](http://dbpedia.org/ontology/averageSpeed)** (property)
    * 
    * The average speed of a thing.
    */
    averageSpeed: prefixer('averageSpeed'),

    /**
    * **[lacrosse league](http://dbpedia.org/ontology/LacrosseLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Lacrosse.
    */
    LacrosseLeague: prefixer('LacrosseLeague'),

    /**
    * **[awardName](http://dbpedia.org/ontology/awardName)** (property)
    * 
    * Award a person has received (literal). Compare to award (ObjectProperty)
    */
    awardName: prefixer('awardName'),

    /**
    * **[colour hex code of away jersey or its parts](http://dbpedia.org/ontology/awayColourHexCode)** (property)
    * 
    * A colour represented by its hex code (e.g.: #FF0000 or #40E0D0).
    */
    awayColourHexCode: prefixer('awayColourHexCode'),

    /**
    * **[law firm](http://dbpedia.org/ontology/LawFirm)** (class)
    * 
    * A law firm is a business entity formed by one or more lawyers to engage in the practice of law. The primary service provided by a law firm is to advise clients (individuals or corporations) about their legal rights and responsibilities, and to represent their clients in civil or criminal cases, business transactions, and other matters in which legal advice and other assistance are sought.
    */
    LawFirm: prefixer('LawFirm'),

    /**
    * **[Lawyer](http://dbpedia.org/ontology/Lawyer)** (class)
    * 
    * a person who is practicing law.
    */
    Lawyer: prefixer('Lawyer'),

    /**
    * **[letter](http://dbpedia.org/ontology/Letter)** (class)
    * 
    * A letter from the alphabet.
    */
    Letter: prefixer('Letter'),

    /**
    * **[light novel](http://dbpedia.org/ontology/LightNovel)** (class)
    * 
    * A style of Japanese novel
    */
    LightNovel: prefixer('LightNovel'),

    /**
    * **[line of fashion](http://dbpedia.org/ontology/LineOfFashion)** (class)
    * 
    * A coherent type of clothing or dressing following a particular fashion
    */
    LineOfFashion: prefixer('LineOfFashion'),

    /**
    * **[list](http://dbpedia.org/ontology/List)** (class)
    * 
    * A general list of items.
    */
    List: prefixer('List'),

    /**
    * **[literary genre](http://dbpedia.org/ontology/LiteraryGenre)** (class)
    * 
    * Genres of literature, e.g. Satire, Gothic
    */
    LiteraryGenre: prefixer('LiteraryGenre'),

    /**
    * **[BIBSYS Id](http://dbpedia.org/ontology/bibsysId)** (property)
    * 
    * BIBSYS is a supplier of library and information systems for all Norwegian university Libraries, the National Library of Norway, college libraries, and a number of research libraries and institutions.
    */
    bibsysId: prefixer('bibsysId'),

    /**
    * **[bicycle information](http://dbpedia.org/ontology/bicycleInformation)** (property)
    * 
    * Information on station's bicycle facilities.
    */
    bicycleInformation: prefixer('bicycleInformation'),

    /**
    * **[Bioavailability](http://dbpedia.org/ontology/bioavailability)** (property)
    * 
    * "The rate and extent to which the active ingredient or active moiety is absorbed from a drug product and becomes available at the site of action. For drug products that are not intended to be absorbed into the bloodstream, bioavailability may be assessed by measurements intended to reflect the rate and extent to which the active ingredient or active moiety becomes available at the site of action (21CFR320.1)."
    */
    bioavailability: prefixer('bioavailability'),

    /**
    * **[magazine](http://dbpedia.org/ontology/Magazine)** (class)
    * 
    * Magazines, periodicals, glossies or serials are publications, generally published on a regular schedule, containing a variety of articles. They are generally financed by advertising, by a purchase price, by pre-paid magazine subscriptions, or all three.
    */
    Magazine: prefixer('Magazine'),

    /**
    * **[manga](http://dbpedia.org/ontology/Manga)** (class)
    * 
    * Manga are comics created in Japan
    */
    Manga: prefixer('Manga'),

    /**
    * **[manhua](http://dbpedia.org/ontology/Manhua)** (class)
    * 
    * Comics originally produced in China
    */
    Manhua: prefixer('Manhua'),

    /**
    * **[manhwa](http://dbpedia.org/ontology/Manhwa)** (class)
    * 
    * Korean term for comics and print cartoons
    */
    Manhwa: prefixer('Manhwa'),

    /**
    * **[blazon](http://dbpedia.org/ontology/blazon)** (property)
    * 
    * Coat of arms (heraldic image) or emblem
    */
    blazon: prefixer('blazon'),

    /**
    * **[Mathematical concept](http://dbpedia.org/ontology/MathematicalConcept)** (class)
    * 
    * Mathematical concepts, e.g. Fibonacci numbers, Imaginary numbers, Symmetry
    */
    MathematicalConcept: prefixer('MathematicalConcept'),

    /**
    * **[media](http://dbpedia.org/ontology/Media)** (class)
    * 
    * storage and transmission channels or tools used to store and deliver information or data
    */
    Media: prefixer('Media'),

    /**
    * **[Medicine](http://dbpedia.org/ontology/Medicine)** (class)
    * 
    * The science and art of healing the human body and identifying the causes of disease
    */
    Medicine: prefixer('Medicine'),

    /**
    * **[meeting](http://dbpedia.org/ontology/Meeting)** (class)
    * 
    * A regular or irregular meeting of people as an event to keep record of
    */
    Meeting: prefixer('Meeting'),

    /**
    * **[BNF Id](http://dbpedia.org/ontology/bnfId)** (property)
    * 
    * Authority data of people listed in the general catalogue of the National Library of France
    */
    bnfId: prefixer('bnfId'),

    /**
    * **[memorial](http://dbpedia.org/ontology/Memorial)** (class)
    * 
    * A monument erected to commemorate a person, an event and/or group. In the case of a person, this might be a grave or tomb.
    */
    Memorial: prefixer('Memorial'),

    /**
    * **[micro-region](http://dbpedia.org/ontology/MicroRegion)** (class)
    * 
    * A microregion is a - mainy statistical - region in Brazil, at an administrative level between a meso-region and a community
    */
    MicroRegion: prefixer('MicroRegion'),

    /**
    * **[BPN Id](http://dbpedia.org/ontology/bpnId)** (property)
    * 
    * Dutch project with material for 40,000 digitized biographies, including former colonies of the Netherlands.
    */
    bpnId: prefixer('bpnId'),

    /**
    * **[bridge carries](http://dbpedia.org/ontology/bridgeCarries)** (property)
    * 
    * Type of vehicles the bridge carries.
    */
    bridgeCarries: prefixer('bridgeCarries'),

    /**
    * **[military structure](http://dbpedia.org/ontology/MilitaryStructure)** (class)
    * 
    * A military structure such as a Castle, Fortress, Wall, etc.
    */
    MilitaryStructure: prefixer('MilitaryStructure'),

    /**
    * **[Mill](http://dbpedia.org/ontology/Mill)** (class)
    * 
    * a unit operation designed to break a solid material into smaller pieces
    */
    Mill: prefixer('Mill'),

    /**
    * **[mine](http://dbpedia.org/ontology/Mine)** (class)
    * 
    * A mine is a place where mineral resources are or were extracted
    */
    Mine: prefixer('Mine'),

    /**
    * **[mineral](http://dbpedia.org/ontology/Mineral)** (class)
    * 
    * A naturally occurring solid chemical substance.
    */
    Mineral: prefixer('Mineral'),

    /**
    * **[mixed martial arts league](http://dbpedia.org/ontology/MixedMartialArtsLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Mixed Martial Arts
    */
    MixedMartialArtsLeague: prefixer('MixedMartialArtsLeague'),

    /**
    * **[building end date](http://dbpedia.org/ontology/buildingEndDate)** (property)
    * 
    * Building end date of an ArchitecturalStructure, man-made Lake, etc. For older structures this can be just a year or century, for newer structures an exact date is preferred
    */
    buildingEndDate: prefixer('buildingEndDate'),

    /**
    * **[building start date](http://dbpedia.org/ontology/buildingStartDate)** (property)
    * 
    * Building start date of an ArchitecturalStructure, man-made Lake, etc. For older structures this can be just a year or century, for newer structures an exact date is preferred
    */
    buildingStartDate: prefixer('buildingStartDate'),

    /**
    * **[monastery](http://dbpedia.org/ontology/Monastery)** (class)
    * 
    * Monastery denotes the building, or complex of buildings, comprising the domestic quarters and workplace(s) of monastics, whether monks or nuns, and whether living in community or alone (hermits). The monastery generally includes a place reserved for prayer which may be a chapel, church or temple, and may also serve as an oratory.
    */
    Monastery: prefixer('Monastery'),

    /**
    * **[monument](http://dbpedia.org/ontology/Monument)** (class)
    * 
    * A type of structure (a statue or an art object) created to commemorate a person or important event, not necessarily of a catastrophic nature.
    */
    Monument: prefixer('Monument'),

    /**
    * **[mosque](http://dbpedia.org/ontology/Mosque)** (class)
    * 
    * A mosque, sometimes spelt mosk, is a place of worship for followers of Islam.
    */
    Mosque: prefixer('Mosque'),

    /**
    * **[bust-waist-hip Size](http://dbpedia.org/ontology/bustWaistHipSize)** (property)
    * 
    * Use this property if all 3 sizes are given together (DBpedia cannot currently extract 3 Lengths out of a field). Otherwise use separate fields bustSize, waistSize, hipSize
    */
    bustWaistHipSize: prefixer('bustWaistHipSize'),

    /**
    * **[call sign](http://dbpedia.org/ontology/callSign)** (property)
    * 
    * A call sign is not the name of a broadcaster! In broadcasting and radio communications, a call sign (also known as a call name or call letters, or abbreviated as a call) is a unique designation for a transmitting station.
    */
    callSign: prefixer('callSign'),

    /**
    * **[call sign meaning](http://dbpedia.org/ontology/callsignMeaning)** (property)
    * 
    * The out written call sign.
    */
    callsignMeaning: prefixer('callsignMeaning'),

    /**
    * **[motorcycle racing league](http://dbpedia.org/ontology/MotorcycleRacingLeague)** (class)
    * 
    * a group of sports teams or bikerider that compete against each other in Motorcycle Racing
    */
    MotorcycleRacingLeague: prefixer('MotorcycleRacingLeague'),

    /**
    * **[can baggage checked](http://dbpedia.org/ontology/canBaggageChecked)** (property)
    * 
    * Whether bags can be checked.
    */
    canBaggageChecked: prefixer('canBaggageChecked'),

    /**
    * **[capacity](http://dbpedia.org/ontology/capacity)** (property)
    * 
    * Number of people who can be served by a Train or other service; or participate in a SoccerClub, CricketTeam, etc
    */
    capacity: prefixer('capacity'),

    /**
    * **[mountain pass](http://dbpedia.org/ontology/MountainPass)** (class)
    * 
    * a path that allows the crossing of a mountain chain. It is usually a saddle point in between two areas of higher elevation
    */
    MountainPass: prefixer('MountainPass'),

    /**
    * **[mountain range](http://dbpedia.org/ontology/MountainRange)** (class)
    * 
    * a chain of mountains bordered by highlands or separated from other mountains by passes or valleys.
    */
    MountainRange: prefixer('MountainRange'),

    /**
    * **[Movie director](http://dbpedia.org/ontology/MovieDirector)** (class)
    * 
    * a person who oversees making of film.
    */
    MovieDirector: prefixer('MovieDirector'),

    /**
    * **[carbohydrate (g)](http://dbpedia.org/ontology/carbohydrate)** (property)
    * 
    * Amount of carbohydrates per servingSize of a Food
    */
    carbohydrate: prefixer('carbohydrate'),

    /**
    * **[moving image](http://dbpedia.org/ontology/MovingImage)** (class)
    * 
    * A visual document that is intended to be animated; equivalent to http://purl.org/dc/dcmitype/MovingImage
    */
    MovingImage: prefixer('MovingImage'),

    /**
    * **[municipality](http://dbpedia.org/ontology/Municipality)** (class)
    * 
    * An administrative body governing a territorial unity on the lower level, administering one or a few more settlements
    */
    Municipality: prefixer('Municipality'),

    /**
    * **[CAS number](http://dbpedia.org/ontology/casNumber)** (property)
    * 
    * Chemical Abstracts Service number. Applicable to ChemicalCompound or Biomolecule (eg Protein)
    */
    casNumber: prefixer('casNumber'),

    /**
    * **[music composer](http://dbpedia.org/ontology/MusicComposer)** (class)
    * 
    * a person who creates music.
    */
    MusicComposer: prefixer('MusicComposer'),

    /**
    * **[music director](http://dbpedia.org/ontology/MusicDirector)** (class)
    * 
    * A person who is the director of an orchestra or concert band.
    */
    MusicDirector: prefixer('MusicDirector'),

    /**
    * **[casualties](http://dbpedia.org/ontology/casualties)** (property)
    * 
    * Number of casualties of a MilitaryConflict or natural disaster such as an Earthquake
    */
    casualties: prefixer('casualties'),

    /**
    * **[ceiling](http://dbpedia.org/ontology/ceiling)** (property)
    * 
    * Maximum distance to the earth surface, to be expressed in kilometers
    */
    ceiling: prefixer('ceiling'),

    /**
    * **[National anthem](http://dbpedia.org/ontology/NationalAnthem)** (class)
    * 
    * Patriotic musical composition which is the offcial national song.
    */
    NationalAnthem: prefixer('NationalAnthem'),

    /**
    * **[century breaks](http://dbpedia.org/ontology/centuryBreaks)** (property)
    * 
    * number of breaks with 100 points and more
    */
    centuryBreaks: prefixer('centuryBreaks'),

    /**
    * **[ChEBI](http://dbpedia.org/ontology/chEBI)** (property)
    * 
    * A unique identifier for the drug in the Chemical Entities of Biological Interest (ChEBI) ontology
    */
    chEBI: prefixer('chEBI'),

    /**
    * **[natural place](http://dbpedia.org/ontology/NaturalPlace)** (class)
    * 
    * The natural place encompasses all places occurring naturally in universe.
    */
    NaturalPlace: prefixer('NaturalPlace'),

    /**
    * **[character in play](http://dbpedia.org/ontology/characterInPlay)** (property)
    * 
    * Name of a character in play.
    */
    characterInPlay: prefixer('characterInPlay'),

    /**
    * **[chorus character in play](http://dbpedia.org/ontology/chorusCharacterInPlay)** (property)
    * 
    * The name of the (Greek) chorus character in play.
    */
    chorusCharacterInPlay: prefixer('chorusCharacterInPlay'),

    /**
    * **[newspaper](http://dbpedia.org/ontology/Newspaper)** (class)
    * 
    * A newspaper is a regularly scheduled publication containing news of current events, informative articles, diverse features and advertising. It usually is printed on relatively inexpensive, low-grade paper such as newsprint.
    */
    Newspaper: prefixer('Newspaper'),

    /**
    * **[Noble family](http://dbpedia.org/ontology/NobleFamily)** (class)
    * 
    * Family deemed to be of noble descent
    */
    NobleFamily: prefixer('NobleFamily'),

    /**
    * **[cites](http://dbpedia.org/ontology/cites)** (property)
    * 
    * A document cited by this work. Like OntologyProperty:dct:references, but as a datatype property.
    */
    cites: prefixer('cites'),

    /**
    * **[novel](http://dbpedia.org/ontology/Novel)** (class)
    * 
    * A book of long narrative in literary prose
    */
    Novel: prefixer('Novel'),

    /**
    * **[city rank](http://dbpedia.org/ontology/cityRank)** (property)
    * 
    * Place of the building in the list of the highest buildings in the city
    */
    cityRank: prefixer('cityRank'),

    /**
    * **[Ocean](http://dbpedia.org/ontology/Ocean)** (class)
    * 
    * A body of saline water that composes much of a planet's hydrosphere.
    */
    Ocean: prefixer('Ocean'),

    /**
    * **[organ](http://dbpedia.org/ontology/Organ)** (class)
    * 
    * All types and sizes of organs
    */
    Organ: prefixer('Organ'),

    /**
    * **[Organisation member](http://dbpedia.org/ontology/OrganisationMember)** (class)
    * 
    * A member of an organisation.
    */
    OrganisationMember: prefixer('OrganisationMember'),

    /**
    * **[paintball league](http://dbpedia.org/ontology/PaintballLeague)** (class)
    * 
    * a group of sports teams that compete against each other in Paintball
    */
    PaintballLeague: prefixer('PaintballLeague'),

    /**
    * **[Painting](http://dbpedia.org/ontology/Painting)** (class)
    * 
    * Describes a painting to assign picture entries in wikipedia to artists.
    */
    Painting: prefixer('Painting'),

    /**
    * **[parish](http://dbpedia.org/ontology/Parish)** (class)
    * 
    * The smallest unit of a clerical administrative body
    */
    Parish: prefixer('Parish'),

    /**
    * **[park](http://dbpedia.org/ontology/Park)** (class)
    * 
    * A park is an area of open space provided for recreational use. http://en.wikipedia.org/wiki/Park
    */
    Park: prefixer('Park'),

    /**
    * **[periodical literature](http://dbpedia.org/ontology/PeriodicalLiterature)** (class)
    * 
    * Periodical literature (also called a periodical publication or simply a periodical) is a published work that appears in a new edition on a regular schedule. The most familiar examples are the newspaper, often published daily, or weekly; or the magazine, typically published weekly, monthly or as a quarterly. Other examples would be a newsletter, a literary journal or learned journal, or a yearbook.
    */
    PeriodicalLiterature: prefixer('PeriodicalLiterature'),

    /**
    * **[code book](http://dbpedia.org/ontology/codeBook)** (property)
    * 
    * code book or statute book referred to in this legal case
    */
    codeBook: prefixer('codeBook'),

    /**
    * **[personal event](http://dbpedia.org/ontology/PersonalEvent)** (class)
    * 
    * an event that occurs in someone's personal life
    */
    PersonalEvent: prefixer('PersonalEvent'),

    /**
    * **[Philosophical concept](http://dbpedia.org/ontology/PhilosophicalConcept)** (class)
    * 
    * Philosophical concepts, e.g. Existentialism, Cogito Ergo Sum
    */
    PhilosophicalConcept: prefixer('PhilosophicalConcept'),

    /**
    * **[memorial ID number](http://dbpedia.org/ontology/codeMemorial)** (property)
    * 
    * Identifier for monuments of the Memorial type
    */
    codeMemorial: prefixer('codeMemorial'),

    /**
    * **[monument code (municipal)](http://dbpedia.org/ontology/codeMunicipalMonument)** (property)
    * 
    * Code assigned to (Dutch) monuments at the municipal level, deemed to be of local value
    */
    codeMunicipalMonument: prefixer('codeMunicipalMonument'),

    /**
    * **[place](http://dbpedia.org/ontology/Place)** (class)
    * 
    * Immobile things or locations.
    */
    Place: prefixer('Place'),

    /**
    * **[monument code (national)](http://dbpedia.org/ontology/codeNationalMonument)** (property)
    * 
    * Code assigned to (Dutch) monuments at the national level, deemed to be of national value
    */
    codeNationalMonument: prefixer('codeNationalMonument'),

    /**
    * **[monument code (provinciall)](http://dbpedia.org/ontology/codeProvincialMonument)** (property)
    * 
    * Code assigned to (Dutch) monuments at the provincial level, mostly for monuments in the countryside, or for waterworks
    */
    codeProvincialMonument: prefixer('codeProvincialMonument'),

    /**
    * **[play](http://dbpedia.org/ontology/Play)** (class)
    * 
    * A play is a form of literature written by a playwright, usually consisting of scripted dialogue between characters, intended for theatrical performance rather than just reading.
    */
    Play: prefixer('Play'),

    /**
    * **[Playwright](http://dbpedia.org/ontology/PlayWright)** (class)
    * 
    * A person who writes dramatic literature or drama.
    */
    PlayWright: prefixer('PlayWright'),

    /**
    * **[CODEN](http://dbpedia.org/ontology/coden)** (property)
    * 
    * CODEN is a six character, alphanumeric bibliographic code, that provides concise, unique and unambiguous identification of the titles of serials and non-serial publications from all subject areas.
    */
    coden: prefixer('coden'),

    /**
    * **[Political concept](http://dbpedia.org/ontology/PoliticalConcept)** (class)
    * 
    * Political concepts, e.g. Capitalism, Democracy
    */
    PoliticalConcept: prefixer('PoliticalConcept'),

    /**
    * **[colour hex code](http://dbpedia.org/ontology/colourHexCode)** (property)
    * 
    * A colour represented by its hex code (e.g.: #FF0000 or #40E0D0).
    */
    colourHexCode: prefixer('colourHexCode'),

    /**
    * **[colour name](http://dbpedia.org/ontology/colourName)** (property)
    * 
    * A colour represented by a string holding its name (e.g.: red or green).
    */
    colourName: prefixer('colourName'),

    /**
    * **[political party](http://dbpedia.org/ontology/PoliticalParty)** (class)
    * 
    * for example: Democratic_Party_(United_States)
    */
    PoliticalParty: prefixer('PoliticalParty'),

    /**
    * **[polo league](http://dbpedia.org/ontology/PoloLeague)** (class)
    * 
    * A group of sports teams that compete against each other in Polo.
    */
    PoloLeague: prefixer('PoloLeague'),

    /**
    * **[populated place](http://dbpedia.org/ontology/PopulatedPlace)** (class)
    * 
    * As defined by the United States Geological Survey, a populated place is a place or area with clustered or scattered buildings and a permanent human population (city, settlement, town, or village) referenced with geographic coordinates (http://en.wikipedia.org/wiki/Populated_place).
    */
    PopulatedPlace: prefixer('PopulatedPlace'),

    /**
    * **[Port](http://dbpedia.org/ontology/Port)** (class)
    * 
    * a location on a coast or shore containing one or more harbors where ships can dock and transfer people or cargo to or from land.
    */
    Port: prefixer('Port'),

    /**
    * **[common name](http://dbpedia.org/ontology/commonName)** (property)
    * 
    * The common name of an entity. Frequently, foaf:name is used for all of the different names of a person; this property just defines the most commonly used name.
    */
    commonName: prefixer('commonName'),

    /**
    * **[presenter](http://dbpedia.org/ontology/Presenter)** (class)
    * 
    * TV or radio show presenter
    */
    Presenter: prefixer('Presenter'),

    /**
    * **[complexity](http://dbpedia.org/ontology/complexity)** (property)
    * 
    * Complexity of preparing a Food (recipe)
    */
    complexity: prefixer('complexity'),

    /**
    * **[Producer](http://dbpedia.org/ontology/Producer)** (class)
    * 
    * a person who manages movies or music recordings.
    */
    Producer: prefixer('Producer'),

    /**
    * **[continent rank](http://dbpedia.org/ontology/continentRank)** (property)
    * 
    * Place of the building in the list of the highest buildings in the continent
    */
    continentRank: prefixer('continentRank'),

    /**
    * **[project](http://dbpedia.org/ontology/Project)** (class)
    * 
    * A project is a temporary endeavor undertaken to achieve defined objectives.
    */
    Project: prefixer('Project'),

    /**
    * **[protected area](http://dbpedia.org/ontology/ProtectedArea)** (class)
    * 
    * This class should be used for protected nature. For enclosed neighbourhoods there is now class GatedCommunity
    */
    ProtectedArea: prefixer('ProtectedArea'),

    /**
    * **[province](http://dbpedia.org/ontology/Province)** (class)
    * 
    * An administrative body governing a territorial unity on the intermediate level, between local and national level
    */
    Province: prefixer('Province'),

    /**
    * **[COSPAR id](http://dbpedia.org/ontology/cosparId)** (property)
    * 
    * Described at http://en.wikipedia.org/wiki/International_Designator
    */
    cosparId: prefixer('cosparId'),

    /**
    * **[cost ($)](http://dbpedia.org/ontology/cost)** (property)
    * 
    * Cost of building an ArchitecturalStructure, Ship, etc
    */
    cost: prefixer('cost'),

    /**
    * **[public transit system](http://dbpedia.org/ontology/PublicTransitSystem)** (class)
    * 
    * A public transit system is a shared passenger transportation service which is available for use by the general public. Public transport modes include buses, trolleybuses, trams and trains, 'rapid transit' (metro/subways/undergrounds etc) and ferries. Intercity public transport is dominated by airlines, coaches, and intercity rail. (http://en.wikipedia.org/wiki/Public_transit).
    */
    PublicTransitSystem: prefixer('PublicTransitSystem'),

    /**
    * **[country rank](http://dbpedia.org/ontology/countryRank)** (property)
    * 
    * Place of the building in the list of the highest buildings in the country
    */
    countryRank: prefixer('countryRank'),

    /**
    * **[publisher](http://dbpedia.org/ontology/Publisher)** (class)
    * 
    * Publishing company
    */
    Publisher: prefixer('Publisher'),

    /**
    * **[Pyramid](http://dbpedia.org/ontology/Pyramid)** (class)
    * 
    * a structure whose shape is roughly that of a pyramid in the geometric sense.
    */
    Pyramid: prefixer('Pyramid'),

    /**
    * **[racecourse](http://dbpedia.org/ontology/Racecourse)** (class)
    * 
    * A racecourse is an alternate term for a horse racing track, found in countries such as the United Kingdom, Australia, Hong Kong, and the United Arab Emirates.
    */
    Racecourse: prefixer('Racecourse'),

    /**
    * **[radio-controlled racing league](http://dbpedia.org/ontology/RadioControlledRacingLeague)** (class)
    * 
    * A group of sports teams or person that compete against each other in radio-controlled racing.
    */
    RadioControlledRacingLeague: prefixer('RadioControlledRacingLeague'),

    /**
    * **[cuisine](http://dbpedia.org/ontology/cuisine)** (property)
    * 
    * National cuisine of a Food or Restaurant
    */
    cuisine: prefixer('cuisine'),

    /**
    * **[currency code](http://dbpedia.org/ontology/currencyCode)** (property)
    * 
    * ISO 4217 currency designators.
    */
    currencyCode: prefixer('currencyCode'),

    /**
    * **[radio station](http://dbpedia.org/ontology/RadioStation)** (class)
    * 
    * A radio station has one line up. For instance the radio station BBC Radio 1. Not to be confused with the broadcasting network BBC, which has many radio stations.
    */
    RadioStation: prefixer('RadioStation'),

    /**
    * **[railway line](http://dbpedia.org/ontology/RailwayLine)** (class)
    * 
    * A railway line is a transport service by trains that pull passengers or freight provided by an organization. Not to be mistaken for railway track, which is the structure consisting of the rails. Wikipedia do not clearly differentiate between both, so there is one infobox describing tracks and lines.
    */
    RailwayLine: prefixer('RailwayLine'),

    /**
    * **[currently used for](http://dbpedia.org/ontology/currentlyUsedFor)** (property)
    * 
    * Current use of the architectural structure, if it is currently being used as anything other than its original purpose.
    */
    currentlyUsedFor: prefixer('currentlyUsedFor'),

    /**
    * **[referee](http://dbpedia.org/ontology/Referee)** (class)
    * 
    * An official who watches a game or match closely to ensure that the rules are adhered to.
    */
    Referee: prefixer('Referee'),

    /**
    * **[Reference](http://dbpedia.org/ontology/Reference)** (class)
    * 
    * Reference to a work (book, movie, website)  providing info about the subject
    */
    Reference: prefixer('Reference'),

    /**
    * **[research project](http://dbpedia.org/ontology/ResearchProject)** (class)
    * 
    * A research project is a scientific investigation, usually using scientific methods, to achieve defined objectives.
    */
    ResearchProject: prefixer('ResearchProject'),

    /**
    * **[rest area](http://dbpedia.org/ontology/RestArea)** (class)
    * 
    * A rest area is part of a Road, meant to stop and rest. More often than not, there is a filling station
    */
    RestArea: prefixer('RestArea'),

    /**
    * **[Resume](http://dbpedia.org/ontology/Resume)** (class)
    * 
    * A Resume describes a persons work experience and skill set.
    */
    Resume: prefixer('Resume'),

    /**
    * **[date unveiled](http://dbpedia.org/ontology/dateUnveiled)** (property)
    * 
    * Designates the unveiling date
    */
    dateUnveiled: prefixer('dateUnveiled'),

    /**
    * **[river](http://dbpedia.org/ontology/River)** (class)
    * 
    * a large natural stream
    */
    River: prefixer('River'),

    /**
    * **[road junction](http://dbpedia.org/ontology/RoadJunction)** (class)
    * 
    * A road junction is a location where vehicular traffic going in different directions can proceed in a controlled manner designed to minimize accidents. In some cases, vehicles can change between different routes or directions of travel (http://en.wikipedia.org/wiki/Junction_%28road%29).
    */
    RoadJunction: prefixer('RoadJunction'),

    /**
    * **[Digital Library code NL](http://dbpedia.org/ontology/dbnlCodeDutch)** (property)
    * 
    * identifier in Dutch digital library (dbnl)
    */
    dbnlCodeDutch: prefixer('dbnlCodeDutch'),

    /**
    * **[Dewey Decimal Classification](http://dbpedia.org/ontology/dcc)** (property)
    * 
    * The Dewey Decimal Classification is a proprietary system of library classification developed by Melvil Dewey in 1876.
    */
    dcc: prefixer('dcc'),

    /**
    * **[route of transportation](http://dbpedia.org/ontology/RouteOfTransportation)** (class)
    * 
    * A route of transportation (thoroughfare) may refer to a public road, highway, path or trail or a route on water from one place to another for use by a variety of general traffic (http://en.wikipedia.org/wiki/Thoroughfare).
    */
    RouteOfTransportation: prefixer('RouteOfTransportation'),

    /**
    * **[route stage](http://dbpedia.org/ontology/RouteStop)** (class)
    * 
    * one stage or stop on a road.
    */
    RouteStop: prefixer('RouteStop'),

    /**
    * **[rugby league](http://dbpedia.org/ontology/RugbyLeague)** (class)
    * 
    * A group of sports teams that compete against each other in rugby.
    */
    RugbyLeague: prefixer('RugbyLeague'),

    /**
    * **[Satellite](http://dbpedia.org/ontology/Satellite)** (class)
    * 
    * An astronomic object orbiting around a planet or star. Definition partly derived from http://www.ontotext.com/proton/protonext# (and thus WordNet 1.7).
    */
    Satellite: prefixer('Satellite'),

    /**
    * **[Scientific concept](http://dbpedia.org/ontology/ScientificConcept)** (class)
    * 
    * Scientific concepts, e.g. Theory of relativity, Quantum gravity
    */
    ScientificConcept: prefixer('ScientificConcept'),

    /**
    * **[demolition date](http://dbpedia.org/ontology/demolitionDate)** (property)
    * 
    * The date the building was demolished.
    */
    demolitionDate: prefixer('demolitionDate'),

    /**
    * **[demolition year](http://dbpedia.org/ontology/demolitionYear)** (property)
    * 
    * The year the building was demolished.
    */
    demolitionYear: prefixer('demolitionYear'),

    /**
    * **[Sculpture](http://dbpedia.org/ontology/Sculpture)** (class)
    * 
    * Sculpture is three-dimensional artwork created by shaping or combining hard materials, typically stone such as marble, metal, glass, or wood, or plastic materials such as clay, textiles, polymers and softer metals.
    */
    Sculpture: prefixer('Sculpture'),

    /**
    * **[depiction description (caption)](http://dbpedia.org/ontology/depictionDescription)** (property)
    * 
    * This property can be used to map image captions from Infoboxes
    */
    depictionDescription: prefixer('depictionDescription'),

    /**
    * **[depth (Œº)](http://dbpedia.org/ontology/depth)** (property)
    * 
    * Is a measure of the distance between a reference height and a point underneath. The exact meaning for a place is unclear. If possible, use  or  to be unambiguous.
    */
    depth: prefixer('depth'),

    /**
    * **[Singer](http://dbpedia.org/ontology/Singer)** (class)
    * 
    * a person who sings.
    */
    Singer: prefixer('Singer'),

    /**
    * **[description](http://dbpedia.org/ontology/description)** (property)
    * 
    * Short description of a person
    */
    description: prefixer('description'),

    /**
    * **[single](http://dbpedia.org/ontology/Single)** (class)
    * 
    * In music, a single or record single is a type of release, typically a recording of fewer tracks than an LP or a CD.
    */
    Single: prefixer('Single'),

    /**
    * **[Site of Special Scientific Interest](http://dbpedia.org/ontology/SiteOfSpecialScientificInterest)** (class)
    * 
    * A Site of Special Scientific Interest (SSSI) is a conservation designation denoting a protected area in the United Kingdom. SSSIs are the basic building block of site-based nature conservation legislation and most other legal nature/geological conservation designations in Great Britain are based upon them, including National Nature Reserves, Ramsar Sites, Special Protection Areas, and Special Areas of Conservation.
    */
    SiteOfSpecialScientificInterest: prefixer('SiteOfSpecialScientificInterest'),

    /**
    * **[snooker world champion](http://dbpedia.org/ontology/SnookerChamp)** (class)
    * 
    * An athlete that plays snooker and won the world championship at least once
    */
    SnookerChamp: prefixer('SnookerChamp'),

    /**
    * **[snooker player](http://dbpedia.org/ontology/SnookerPlayer)** (class)
    * 
    * An athlete that plays snooker, which is a billard derivate
    */
    SnookerPlayer: prefixer('SnookerPlayer'),

    /**
    * **[snooker world ranking](http://dbpedia.org/ontology/SnookerWorldRanking)** (class)
    * 
    * The official world ranking in snooker for a certain year/season
    */
    SnookerWorldRanking: prefixer('SnookerWorldRanking'),

    /**
    * **[soccer league](http://dbpedia.org/ontology/SoccerLeague)** (class)
    * 
    * A group of sports teams that compete against each other in soccer.
    */
    SoccerLeague: prefixer('SoccerLeague'),

    /**
    * **[societal event](http://dbpedia.org/ontology/SocietalEvent)** (class)
    * 
    * an event that is clearly different from strictly personal events
    */
    SocietalEvent: prefixer('SocietalEvent'),

    /**
    * **[softball league](http://dbpedia.org/ontology/SoftballLeague)** (class)
    * 
    * A group of sports teams that compete against each other in softball.
    */
    SoftballLeague: prefixer('SoftballLeague'),

    /**
    * **[songwriter](http://dbpedia.org/ontology/SongWriter)** (class)
    * 
    * a person who writes songs.
    */
    SongWriter: prefixer('SongWriter'),

    /**
    * **[sound](http://dbpedia.org/ontology/Sound)** (class)
    * 
    * An audio document intended to be listened to; equivalent to http://purl.org/dc/dcmitype/Sound
    */
    Sound: prefixer('Sound'),

    /**
    * **[speedway league](http://dbpedia.org/ontology/SpeedwayLeague)** (class)
    * 
    * A group of sports teams that compete against each other in motorcycle speedway racing.
    */
    SpeedwayLeague: prefixer('SpeedwayLeague'),

    /**
    * **[document number](http://dbpedia.org/ontology/documentNumber)** (property)
    * 
    * Identification a document within a particular registry
    */
    documentNumber: prefixer('documentNumber'),

    /**
    * **[sport](http://dbpedia.org/ontology/Sport)** (class)
    * 
    * A sport is commonly defined as an organized, competitive, and skillful physical activity.
    */
    Sport: prefixer('Sport'),

    /**
    * **[sports event](http://dbpedia.org/ontology/SportsEvent)** (class)
    * 
    * a event of competitive physical activity
    */
    SportsEvent: prefixer('SportsEvent'),

    /**
    * **[sports league](http://dbpedia.org/ontology/SportsLeague)** (class)
    * 
    * A group of sports teams or individual athletes that compete against each other in a specific sport.
    */
    SportsLeague: prefixer('SportsLeague'),

    /**
    * **[sports manager](http://dbpedia.org/ontology/SportsManager)** (class)
    * 
    * According to the french label sub Soccer, trainership could be meant. However, here a Sportsmanager is interpreted as a member of the board of a sporting club.
    */
    SportsManager: prefixer('SportsManager'),

    /**
    * **[dress code](http://dbpedia.org/ontology/dressCode)** (property)
    * 
    * The recommended dress code for an establishment or event.
    */
    dressCode: prefixer('dressCode'),

    /**
    * **[Sports team member](http://dbpedia.org/ontology/SportsTeamMember)** (class)
    * 
    * A member of an athletic team.
    */
    SportsTeamMember: prefixer('SportsTeamMember'),

    /**
    * **[sports team season](http://dbpedia.org/ontology/SportsTeamSeason)** (class)
    * 
    * A season for a particular sports team (as opposed to the season for the entire league that the team is in)
    */
    SportsTeamSeason: prefixer('SportsTeamSeason'),

    /**
    * **[duration (s)](http://dbpedia.org/ontology/duration)** (property)
    * 
    * The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format
    */
    duration: prefixer('duration'),

    /**
    * **[monument code for the Monuments Inventory Project](http://dbpedia.org/ontology/dutchMIPCode)** (property)
    * 
    * The Dutch MIP project was meant to take stock of all kinds of monuments
    */
    dutchMIPCode: prefixer('dutchMIPCode'),

    /**
    * **[standard](http://dbpedia.org/ontology/Standard)** (class)
    * 
    * a common specification
    */
    Standard: prefixer('Standard'),

    /**
    * **[Dutch PPN code](http://dbpedia.org/ontology/dutchPPNCode)** (property)
    * 
    * Dutch PPN code is a library cataloguing code for collection items (books, journals and the like).
    */
    dutchPPNCode: prefixer('dutchPPNCode'),

    /**
    * **[Stated Resolution](http://dbpedia.org/ontology/StatedResolution)** (class)
    * 
    * A Resolution describes a formal statement adopted by a meeting or convention.
    */
    StatedResolution: prefixer('StatedResolution'),

    /**
    * **[Dutch PPN code](http://dbpedia.org/ontology/dutchWinkelID)** (property)
    * 
    * Dutch Winkel ID is a code for an underground publication, as attributed by Lydia Winkel's work on the underground WW II press in the Netherlands.
    */
    dutchWinkelID: prefixer('dutchWinkelID'),

    /**
    * **[station](http://dbpedia.org/ontology/Station)** (class)
    * 
    * Public transport station (eg. railway station, metro station, bus station).
    */
    Station: prefixer('Station'),

    /**
    * **[eMedicine topic](http://dbpedia.org/ontology/eMedicineTopic)** (property)
    * 
    * Different from eMedicineSubject, which see
    */
    eMedicineTopic: prefixer('eMedicineTopic'),

    /**
    * **[still image](http://dbpedia.org/ontology/StillImage)** (class)
    * 
    * A visual document that is not intended to be animated; equivalent to http://purl.org/dc/dcmitype/StillImage
    */
    StillImage: prefixer('StillImage'),

    /**
    * **[stream](http://dbpedia.org/ontology/Stream)** (class)
    * 
    * a flowing body of water with a current, confined within a bed and stream banks
    */
    Stream: prefixer('Stream'),

    /**
    * **[street](http://dbpedia.org/ontology/Street)** (class)
    * 
    * A Street is different from a Road in as far as the infrastructure aspect is much less important here. A Street is a social and architectural ensemble much more than the connection between two geographic points.
    */
    Street: prefixer('Street'),

    /**
    * **[borough](http://dbpedia.org/ontology/SubMunicipality)** (class)
    * 
    * An administrative body governing a territorial unity on the lowest level, administering part of a municipality
    */
    SubMunicipality: prefixer('SubMunicipality'),

    /**
    * **[EKATTE code](http://dbpedia.org/ontology/ekatteCode)** (property)
    * 
    * Indexing code used by the Bulgarian National Statistical Institute to identify populated places
    */
    ekatteCode: prefixer('ekatteCode'),

    /**
    * **[election date leader](http://dbpedia.org/ontology/electionDateLeader)** (property)
    * 
    * The date that leader was elected.
    */
    electionDateLeader: prefixer('electionDateLeader'),

    /**
    * **[election majority](http://dbpedia.org/ontology/electionMajority)** (property)
    * 
    * number of votes the office holder attained
    */
    electionMajority: prefixer('electionMajority'),

    /**
    * **[swimmer](http://dbpedia.org/ontology/Swimmer)** (class)
    * 
    * a trained athlete who participates in swimming meets
    */
    Swimmer: prefixer('Swimmer'),

    /**
    * **[element block](http://dbpedia.org/ontology/elementBlock)** (property)
    * 
    * A block of the periodic table of elements is a set of adjacent groups.
    */
    elementBlock: prefixer('elementBlock'),

    /**
    * **[synagogue](http://dbpedia.org/ontology/Synagogue)** (class)
    * 
    * A synagogue, sometimes spelt synagog, is a Jewish or Samaritan house of prayer.
    */
    Synagogue: prefixer('Synagogue'),

    /**
    * **[element group](http://dbpedia.org/ontology/elementGroup)** (property)
    * 
    * In chemistry, a group (also known as a family) is a column of elements in the periodic table of the chemical elements.
    */
    elementGroup: prefixer('elementGroup'),

    /**
    * **[System of law](http://dbpedia.org/ontology/SystemOfLaw)** (class)
    * 
    * a system of legislation, either national or international
    */
    SystemOfLaw: prefixer('SystemOfLaw'),

    /**
    * **[element period](http://dbpedia.org/ontology/elementPeriod)** (property)
    * 
    * In the periodic table of the elements, elements are arranged in a series of rows (or periods) so that those with similar properties appear in a column.
    */
    elementPeriod: prefixer('elementPeriod'),

    /**
    * **[table tennis player](http://dbpedia.org/ontology/TableTennisPlayer)** (class)
    * 
    * Athlete who plays table tennis
    */
    TableTennisPlayer: prefixer('TableTennisPlayer'),

    /**
    * **[elevation (Œº)](http://dbpedia.org/ontology/elevation)** (property)
    * 
    * average elevation above the sea level
    */
    elevation: prefixer('elevation'),

    /**
    * **[taxonomic group](http://dbpedia.org/ontology/Taxon)** (class)
    * 
    * a category within a classification system for Species
    */
    Taxon: prefixer('Taxon'),

    /**
    * **[Team member](http://dbpedia.org/ontology/TeamMember)** (class)
    * 
    * A member of an athletic team.
    */
    TeamMember: prefixer('TeamMember'),

    /**
    * **[team sport](http://dbpedia.org/ontology/TeamSport)** (class)
    * 
    * A team sport is commonly defined as a sport that is being played by competing teams
    */
    TeamSport: prefixer('TeamSport'),

    /**
    * **[Television director](http://dbpedia.org/ontology/TelevisionDirector)** (class)
    * 
    * a person who directs the activities involved in making a television program.
    */
    TelevisionDirector: prefixer('TelevisionDirector'),

    /**
    * **[television episode](http://dbpedia.org/ontology/TelevisionEpisode)** (class)
    * 
    * A television episode is a part of serial television program.
    */
    TelevisionEpisode: prefixer('TelevisionEpisode'),

    /**
    * **[end date](http://dbpedia.org/ontology/endDate)** (property)
    * 
    * The end date of the event.
    */
    endDate: prefixer('endDate'),

    /**
    * **[end date and time](http://dbpedia.org/ontology/endDateTime)** (property)
    * 
    * The end date and time of the event.
    */
    endDateTime: prefixer('endDateTime'),

    /**
    * **[television station](http://dbpedia.org/ontology/TelevisionStation)** (class)
    * 
    * A television station has usually one line up. For instance the television station WABC-TV (or ABC 7, Channel 7). Not to be confused with the broadcasting network ABC, which has many television stations.
    */
    TelevisionStation: prefixer('TelevisionStation'),

    /**
    * **[tennis league](http://dbpedia.org/ontology/TennisLeague)** (class)
    * 
    * A group of sports teams or person that compete against each other in tennis.
    */
    TennisLeague: prefixer('TennisLeague'),

    /**
    * **[territory](http://dbpedia.org/ontology/Territory)** (class)
    * 
    * A territory may refer to a country subdivision, a non-sovereign geographic region.
    */
    Territory: prefixer('Territory'),

    /**
    * **[engine power](http://dbpedia.org/ontology/enginePower)** (property)
    * 
    * Power to be expressed in Watts (kiloWatt, megaWatt)
    */
    enginePower: prefixer('enginePower'),

    /**
    * **[theatre](http://dbpedia.org/ontology/Theatre)** (class)
    * 
    * A theater or theatre (also a playhouse) is a structure where theatrical works or plays are performed or other performances such as musical concerts may be produced.
    */
    Theatre: prefixer('Theatre'),

    /**
    * **[Theatre director](http://dbpedia.org/ontology/TheatreDirector)** (class)
    * 
    * A director in the theatre field who oversees and orchestrates the mounting of a theatre production.
    */
    TheatreDirector: prefixer('TheatreDirector'),

    /**
    * **[Theological concept](http://dbpedia.org/ontology/TheologicalConcept)** (class)
    * 
    * Theological concepts, e.g. The apocalypse, Trinty, Stoicism
    */
    TheologicalConcept: prefixer('TheologicalConcept'),

    /**
    * **[episode number](http://dbpedia.org/ontology/episodeNumber)** (property)
    * 
    * The episode number of the TelevisionEpisode.
    */
    episodeNumber: prefixer('episodeNumber'),

    /**
    * **[epoch](http://dbpedia.org/ontology/epoch)** (property)
    * 
    * moment in time used as a referrence point for some time-vaying astronomical quantity
    */
    epoch: prefixer('epoch'),

    /**
    * **[tower](http://dbpedia.org/ontology/Tower)** (class)
    * 
    * A Tower is a kind of structure (not necessarily a building) that is higher than the rest
    */
    Tower: prefixer('Tower'),

    /**
    * **[town](http://dbpedia.org/ontology/Town)** (class)
    * 
    * a settlement ranging from a few hundred to several thousand (occasionally hundreds of thousands). The precise meaning varies between countries and is not always a matter of legal definition. Usually, a town is thought of as larger than a village but smaller than a city, though there are exceptions to this rule.
    */
    Town: prefixer('Town'),

    /**
    * **[track list](http://dbpedia.org/ontology/TrackList)** (class)
    * 
    * A list of music tracks, like on a CD
    */
    TrackList: prefixer('TrackList'),

    /**
    * **[trade union](http://dbpedia.org/ontology/TradeUnion)** (class)
    * 
    * A trade union or labor union is an organization of workers who have banded together to achieve common goals such as better working conditions.
    */
    TradeUnion: prefixer('TradeUnion'),

    /**
    * **[Treadmill](http://dbpedia.org/ontology/Treadmill)** (class)
    * 
    * A mill driven by the tractive power of horses, donkeys or even people
    */
    Treadmill: prefixer('Treadmill'),

    /**
    * **[tunnel](http://dbpedia.org/ontology/Tunnel)** (class)
    * 
    * A tunnel may be for foot or vehicular road traffic, for rail traffic, or for a canal. Some tunnels are aqueducts to supply water for consumption or for hydroelectric stations or are sewers (http://en.wikipedia.org/wiki/Tunnel).
    */
    Tunnel: prefixer('Tunnel'),

    /**
    * **[type](http://dbpedia.org/ontology/Type)** (class)
    * 
    * a category within a classification system
    */
    Type: prefixer('Type'),

    /**
    * **[underground journal](http://dbpedia.org/ontology/UndergroundJournal)** (class)
    * 
    * An underground journal is, although over time there have always been publications forbidden by law, a phenomenon typical of countries occupied by the Germans during the Second World War. The writing in the underground press aims at stiffening a spirit of resistance against Nazi occupation. The distribution of underground journals had to be very secretive and was, therefore, very much dependant on illegal distribution circuits and the hazards of persecution by the occupant.
    */
    UndergroundJournal: prefixer('UndergroundJournal'),

    /**
    * **[unit of work](http://dbpedia.org/ontology/UnitOfWork)** (class)
    * 
    * This class is meant to convey the notion of an amount work to be done. It is different from Activity in that it has a definite end and is being measured.
    */
    UnitOfWork: prefixer('UnitOfWork'),

    /**
    * **[valley](http://dbpedia.org/ontology/Valley)** (class)
    * 
    * a depression with predominant extent in one direction
    */
    Valley: prefixer('Valley'),

    /**
    * **[exhibition](http://dbpedia.org/ontology/exhibition)** (property)
    * 
    * Notes about an exhibition the object has been to
    */
    exhibition: prefixer('exhibition'),

    /**
    * **[extinction date](http://dbpedia.org/ontology/extinctionDate)** (property)
    * 
    * Date when an Organization (eg PoliticalParty, Company) or Species ceased to exist
    */
    extinctionDate: prefixer('extinctionDate'),

    /**
    * **[video game](http://dbpedia.org/ontology/VideoGame)** (class)
    * 
    * A video game is an electronic game that involves interaction with a user interface to generate visual feedback on a video device.
    */
    VideoGame: prefixer('VideoGame'),

    /**
    * **[videogames league](http://dbpedia.org/ontology/VideogamesLeague)** (class)
    * 
    * A group of sports teams or person that compete against each other in videogames.
    */
    VideogamesLeague: prefixer('VideogamesLeague'),

    /**
    * **[village](http://dbpedia.org/ontology/Village)** (class)
    * 
    * a clustered human settlement or community, usually smaller a town
    */
    Village: prefixer('Village'),

    /**
    * **[faculty size](http://dbpedia.org/ontology/facultySize)** (property)
    * 
    * number of faculty members
    */
    facultySize: prefixer('facultySize'),

    /**
    * **[volcano](http://dbpedia.org/ontology/Volcano)** (class)
    * 
    * A volcano is currently subclass of naturalplace, but it might also be considered a mountain.
    */
    Volcano: prefixer('Volcano'),

    /**
    * **[volleyball league](http://dbpedia.org/ontology/VolleyballLeague)** (class)
    * 
    * A group of sports teams that compete against each other in volleyball.
    */
    VolleyballLeague: prefixer('VolleyballLeague'),

    /**
    * **[fare zone](http://dbpedia.org/ontology/fareZone)** (property)
    * 
    * The fare zone in which station is located.
    */
    fareZone: prefixer('fareZone'),

    /**
    * **[fat (g)](http://dbpedia.org/ontology/fat)** (property)
    * 
    * Amount of fat per servingSize of a Food
    */
    fat: prefixer('fat'),

    /**
    * **[Water tower](http://dbpedia.org/ontology/WaterTower)** (class)
    * 
    * a construction designed to store larger quantities of water at a place of some elevation in order to keep pressure on the water provision system
    */
    WaterTower: prefixer('WaterTower'),

    /**
    * **[Watermill](http://dbpedia.org/ontology/Watermill)** (class)
    * 
    * A watermill is a structure that uses a water wheel or turbine to drive a mechanical process such as flour, lumber or textile production, or metal shaping (rolling, grinding or wire drawing)
    */
    Watermill: prefixer('Watermill'),

    /**
    * **[FDA UNII code](http://dbpedia.org/ontology/fdaUniiCode)** (property)
    * 
    * FDA Unique Ingredient Identifier (UNII) code for a DBpedia Drug
    */
    fdaUniiCode: prefixer('fdaUniiCode'),

    /**
    * **[feast day, holiday](http://dbpedia.org/ontology/feastDay)** (property)
    * 
    * A day of celebration associated with the entity. Applies to Saint, School etc
    */
    feastDay: prefixer('feastDay'),

    /**
    * **[Wind motor](http://dbpedia.org/ontology/WindMotor)** (class)
    * 
    * A wind-driven turbine that adapts itself to wind direction and to wind-force. Is considered to be a class in its own, despite the wind as common factor with Windmill.
    */
    WindMotor: prefixer('WindMotor'),

    /**
    * **[Windmill](http://dbpedia.org/ontology/Windmill)** (class)
    * 
    * A windmill is a machine that converts the energy of wind into rotational energy by means of vanes called sails
    */
    Windmill: prefixer('Windmill'),

    /**
    * **[World Heritage Site](http://dbpedia.org/ontology/WorldHeritageSite)** (class)
    * 
    * A UNESCO World Heritage Site is a site (such as a forest, mountain, lake, desert, monument, building, complex, or city) that is on the list that is maintained by the international World Heritage Programme administered by the UNESCO World Heritage Committee, composed of 21 state parties which are elected by their General Assembly for a four-year term. A World Heritage Site is a place of either cultural or physical significance.
    */
    WorldHeritageSite: prefixer('WorldHeritageSite'),

    /**
    * **[size (B)](http://dbpedia.org/ontology/fileSize)** (property)
    * 
    * size of a file or software
    */
    fileSize: prefixer('fileSize'),

    /**
    * **[film audio type](http://dbpedia.org/ontology/filmAudioType)** (property)
    * 
    * specifies the audio type of the film i.e. 'sound' or 'silent'
    */
    filmAudioType: prefixer('filmAudioType'),

    /**
    * **[film colour type](http://dbpedia.org/ontology/filmColourType)** (property)
    * 
    * specifies the colour type of the film i.e. 'colour' or 'b/w'
    */
    filmColourType: prefixer('filmColourType'),

    /**
    * **[written work](http://dbpedia.org/ontology/WrittenWork)** (class)
    * 
    * Written work is any text written to read it (e.g.: books, newspaper, articles)
    */
    WrittenWork: prefixer('WrittenWork'),

    /**
    * **[final flight](http://dbpedia.org/ontology/finalFlight)** (property)
    * 
    * date of final flight
    */
    finalFlight: prefixer('finalFlight'),

    /**
    * **[abbey](http://dbpedia.org/ontology/Abbey)** (class)
    * 
    * An abbey is a Catholic monastery or convent, under the authority of an Abbot or an Abbess, who serves as the spiritual father or mother of the community.
    */
    Abbey: prefixer('Abbey'),

    /**
    * **[birth](http://dbpedia.org/ontology/Birth)** (class)
    * 
    * someone's birth as a type of personal event
    */
    Birth: prefixer('Birth'),

    /**
    * **[final publication date](http://dbpedia.org/ontology/finalPublicationDate)** (property)
    * 
    * Date of the final publication.
    */
    finalPublicationDate: prefixer('finalPublicationDate'),

    /**
    * **[final publication year](http://dbpedia.org/ontology/finalPublicationYear)** (property)
    * 
    * Year of the final publication.
    */
    finalPublicationYear: prefixer('finalPublicationYear'),

    /**
    * **[creek](http://dbpedia.org/ontology/Creek)** (class)
    * 
    * the portion of a stream that is affected by ebb and flow of ocean tides
    */
    Creek: prefixer('Creek'),

    /**
    * **[death](http://dbpedia.org/ontology/Death)** (class)
    * 
    * someone's death as a type of personal event
    */
    Death: prefixer('Death'),

    /**
    * **[first air date](http://dbpedia.org/ontology/firstAirDate)** (property)
    * 
    * The date on which regular broadcasts began.
    */
    firstAirDate: prefixer('firstAirDate'),

    /**
    * **[divorce](http://dbpedia.org/ontology/Divorce)** (class)
    * 
    * two people's divorce as a type of personal event
    */
    Divorce: prefixer('Divorce'),

    /**
    * **[fiefdom](http://dbpedia.org/ontology/Fiefdom)** (class)
    * 
    * The territory under the authority of a feudal lord
    */
    Fiefdom: prefixer('Fiefdom'),

    /**
    * **[gate](http://dbpedia.org/ontology/Gate)** (class)
    * 
    * Gate is defined as a built structure marking the entrance to a building or an estate.
    */
    Gate: prefixer('Gate'),

    /**
    * **[marriage](http://dbpedia.org/ontology/Marriage)** (class)
    * 
    * someone's marriage as a type of personal event
    */
    Marriage: prefixer('Marriage'),

    /**
    * **[first publication date](http://dbpedia.org/ontology/firstPublicationDate)** (property)
    * 
    * Date of the first publication.
    */
    firstPublicationDate: prefixer('firstPublicationDate'),

    /**
    * **[football](http://dbpedia.org/ontology/Soccer)** (class)
    * 
    * A sports game in which the ball must be played by foot
    */
    Soccer: prefixer('Soccer'),

    /**
    * **[first publication year](http://dbpedia.org/ontology/firstPublicationYear)** (property)
    * 
    * Year of the first publication.
    */
    firstPublicationYear: prefixer('firstPublicationYear'),

    /**
    * **[flag (image)](http://dbpedia.org/ontology/flag)** (property)
    * 
    * Wikimedia Commons file name representing the subject's flag
    */
    flag: prefixer('flag'),

    /**
    * **[flash point](http://dbpedia.org/ontology/flashPoint)** (property)
    * 
    * lowest temperature at which a substance can vaporize and start burning
    */
    flashPoint: prefixer('flashPoint'),

    /**
    * **[frequency of publication](http://dbpedia.org/ontology/frequencyOfPublication)** (property)
    * 
    * The frequency of periodical publication (eg. Weekly, Bimonthly).
    */
    frequencyOfPublication: prefixer('frequencyOfPublication'),

    /**
    * **[galicianSpeakersDate](http://dbpedia.org/ontology/galicianSpeakersDate)** (property)
    * 
    * The last inquiry date about linguistics uses.
    */
    galicianSpeakersDate: prefixer('galicianSpeakersDate'),

    /**
    * **[galicianSpeakersPercentage](http://dbpedia.org/ontology/galicianSpeakersPercentage)** (property)
    * 
    * Percentage of Galician speakers.
    */
    galicianSpeakersPercentage: prefixer('galicianSpeakersPercentage'),

    /**
    * **[gas chambers](http://dbpedia.org/ontology/gasChambers)** (property)
    * 
    * Number or description of gas chambers of a ConcentrationCamp
    */
    gasChambers: prefixer('gasChambers'),

    /**
    * **[gene location end](http://dbpedia.org/ontology/geneLocationEnd)** (property)
    * 
    * the end of the gene
    */
    geneLocationEnd: prefixer('geneLocationEnd'),

    /**
    * **[gene location start](http://dbpedia.org/ontology/geneLocationStart)** (property)
    * 
    * the start of the gene coordinates
    */
    geneLocationStart: prefixer('geneLocationStart'),

    /**
    * **[Genome DB](http://dbpedia.org/ontology/genomeDB)** (property)
    * 
    * the edition of the database used (i.e. hg19)
    */
    genomeDB: prefixer('genomeDB'),

    /**
    * **[gini coefficient](http://dbpedia.org/ontology/giniCoefficient)** (property)
    * 
    * is a measure of the inequality of a distribution. It is commonly used as a measure of inequality of income or wealth.
    */
    giniCoefficient: prefixer('giniCoefficient'),

    /**
    * **[glycemic index](http://dbpedia.org/ontology/glycemicIndex)** (property)
    * 
    * Indicates a Food's effect on a person's blood glucose (blood sugar) level. Typically ranges between 50 and 100, where 100 represents the standard, an equivalent amount of pure glucose
    */
    glycemicIndex: prefixer('glycemicIndex'),

    /**
    * **[Gray page](http://dbpedia.org/ontology/grayPage)** (property)
    * 
    * Refers to the famous 1918 edition of Gray's Anatomy.
    */
    grayPage: prefixer('grayPage'),

    /**
    * **[Gray subject](http://dbpedia.org/ontology/graySubject)** (property)
    * 
    * Refers to the famous 1918 edition of Gray's Anatomy.
    */
    graySubject: prefixer('graySubject'),

    /**
    * **[grinding capability](http://dbpedia.org/ontology/grindingCapability)** (property)
    * 
    * grinding capability for Mills
    */
    grindingCapability: prefixer('grindingCapability'),

    /**
    * **[group commemorated](http://dbpedia.org/ontology/groupCommemorated)** (property)
    * 
    * Designates the category of people commemorated by a monument
    */
    groupCommemorated: prefixer('groupCommemorated'),

    /**
    * **[colour hex code of home jersey or its parts](http://dbpedia.org/ontology/homeColourHexCode)** (property)
    * 
    * A colour represented by its hex code (e.g.: #FF0000 or #40E0D0).
    */
    homeColourHexCode: prefixer('homeColourHexCode'),

    /**
    * **[Human Development Index (HDI)](http://dbpedia.org/ontology/humanDevelopmentIndex)** (property)
    * 
    * a composite statistic used to rank countries by level of "human development"
    */
    humanDevelopmentIndex: prefixer('humanDevelopmentIndex'),

    /**
    * **[IATA code](http://dbpedia.org/ontology/iataAirlineCode)** (property)
    * 
    * IATA designation for airline companies
    */
    iataAirlineCode: prefixer('iataAirlineCode'),

    /**
    * **[IBDB ID](http://dbpedia.org/ontology/ibdbId)** (property)
    * 
    * The Internet Broadway Database ID (IBDB ID) from ibdb.com.
    */
    ibdbId: prefixer('ibdbId'),

    /**
    * **[ICAO code](http://dbpedia.org/ontology/icaoAirlineCode)** (property)
    * 
    * ICAO designation for airline companies
    */
    icaoAirlineCode: prefixer('icaoAirlineCode'),

    /**
    * **[iconographic attributes](http://dbpedia.org/ontology/iconographicAttributes)** (property)
    * 
    * Standard iconographic elements used when depicting a Saint: pontifical, episcopal, insignia, martyrdom instruments
    */
    iconographicAttributes: prefixer('iconographicAttributes'),

    /**
    * **[Allocine ID](http://dbpedia.org/ontology/idAllocine)** (property)
    * 
    * ID of a film on Allocine
    */
    idAllocine: prefixer('idAllocine'),

    /**
    * **[image size (px)](http://dbpedia.org/ontology/imageSize)** (property)
    * 
    * the image size expressed in pixels
    */
    imageSize: prefixer('imageSize'),

    /**
    * **[IMDB id](http://dbpedia.org/ontology/imdbId)** (property)
    * 
    * International Movie Database ID. Applies to Films, Actors, etc
    */
    imdbId: prefixer('imdbId'),

    /**
    * **[impact factor](http://dbpedia.org/ontology/impactFactor)** (property)
    * 
    * The impact factor, often abbreviated IF, is a measure reflecting the average number of citations to articles published in science and social science journals.
    */
    impactFactor: prefixer('impactFactor'),

    /**
    * **[impact factor as of](http://dbpedia.org/ontology/impactFactorAsOf)** (property)
    * 
    * Census year of the imapct factor.
    */
    impactFactorAsOf: prefixer('impactFactorAsOf'),

    /**
    * **[individualised GND number](http://dbpedia.org/ontology/individualisedGnd)** (property)
    * 
    * GND (Gemeinsame Normdatei) is an international authority file for the organisation of personal names, subject headings and corporate bodies from catalogues. It is used mainly for documentation in libraries and archives. The GND is managed by the German National Library in cooperation with various library networks. The GND falls under the Creative Commons Zero(CC0) license.
    */
    individualisedGnd: prefixer('individualisedGnd'),

    /**
    * **[individualised PND number](http://dbpedia.org/ontology/individualisedPnd)** (property)
    * 
    * PND (Personennamendatei) data about a person. PND is published by the German National Library. For each person there is a record with her/his name, birth and occupation connected with a unique identifier, the PND number.
    */
    individualisedPnd: prefixer('individualisedPnd'),

    /**
    * **[ingredient name (literal)](http://dbpedia.org/ontology/ingredientName)** (property)
    * 
    * Main ingredient used to prepare a specific Food or Beverage. For strings use ingredientName, for objects use ingredient.
    */
    ingredientName: prefixer('ingredientName'),

    /**
    * **[initally used for](http://dbpedia.org/ontology/initiallyUsedFor)** (property)
    * 
    * Initial use of the architectural structure.
    */
    initiallyUsedFor: prefixer('initiallyUsedFor'),

    /**
    * **[INN](http://dbpedia.org/ontology/inn)** (property)
    * 
    * International Nonproprietary Name given to a pharmaceutical substance
    */
    inn: prefixer('inn'),

    /**
    * **[inscription](http://dbpedia.org/ontology/inscription)** (property)
    * 
    * Text of an inscription on the object
    */
    inscription: prefixer('inscription'),

    /**
    * **[INSEE code](http://dbpedia.org/ontology/inseeCode)** (property)
    * 
    * numerical indexing code used by the French National Institute for Statistics and Economic Studies (INSEE) to identify various entities
    */
    inseeCode: prefixer('inseeCode'),

    /**
    * **[IOBDB ID](http://dbpedia.org/ontology/iobdbId)** (property)
    * 
    * Lortel Archives Internet Off-Broadway database "show id" from lortel.org.
    */
    iobdbId: prefixer('iobdbId'),

    /**
    * **[is handicapped accessible](http://dbpedia.org/ontology/isHandicappedAccessible)** (property)
    * 
    * True if the station is handicapped accessible.
    */
    isHandicappedAccessible: prefixer('isHandicappedAccessible'),

    /**
    * **[is part of (literal)](http://dbpedia.org/ontology/isPartOfName)** (property)
    * 
    * Name of another thing that this thing is part of. Use for infobox "part of" properties given as text; for objects use isPartOf
    */
    isPartOfName: prefixer('isPartOfName'),

    /**
    * **[is peer reviewed](http://dbpedia.org/ontology/isPeerReviewed)** (property)
    * 
    * In academia peer review is often used to determine an academic papers suitability for publication.
    */
    isPeerReviewed: prefixer('isPeerReviewed'),

    /**
    * **[ISBN](http://dbpedia.org/ontology/isbn)** (property)
    * 
    * The International Standard Book Number (ISBN) is a unique numeric commercial book identifier based upon the 9-digit Standard Book Numbering (SBN) code.
    */
    isbn: prefixer('isbn'),

    /**
    * **[ISNI Id](http://dbpedia.org/ontology/isniId)** (property)
    * 
    * ISNI is a method for uniquely identifying the public identities of contributors to media content such as books, TV programmes, and newspaper articles.
    */
    isniId: prefixer('isniId'),

    /**
    * **[ISO 3166-1 code](http://dbpedia.org/ontology/iso31661Code)** (property)
    * 
    * defines codes for the names of countries, dependent territories, and special areas of geographical interest
    */
    iso31661Code: prefixer('iso31661Code'),

    /**
    * **[issn](http://dbpedia.org/ontology/issn)** (property)
    * 
    * International Standard Serial Number (ISSN)
    */
    issn: prefixer('issn'),

    /**
    * **[code istat](http://dbpedia.org/ontology/istat)** (property)
    * 
    * Indexing code used for Italian municipalities
    */
    istat: prefixer('istat'),

    /**
    * **[JSTOR](http://dbpedia.org/ontology/jstor)** (property)
    * 
    * JSTOR number (short for Journal Storage) is a United States-based online system number for archiving academic journals.
    */
    jstor: prefixer('jstor'),

    /**
    * **[last air date](http://dbpedia.org/ontology/lastAirDate)** (property)
    * 
    * The date on which the broadcaster made its last broadcast.
    */
    lastAirDate: prefixer('lastAirDate'),

    /**
    * **[last election date](http://dbpedia.org/ontology/lastElectionDate)** (property)
    * 
    * The last election date for the house.
    */
    lastElectionDate: prefixer('lastElectionDate'),

    /**
    * **[last publication date](http://dbpedia.org/ontology/lastPublicationDate)** (property)
    * 
    * Date of the last publication.
    */
    lastPublicationDate: prefixer('lastPublicationDate'),

    /**
    * **[LCC](http://dbpedia.org/ontology/lcc)** (property)
    * 
    * The Library of Congress Classification (LCC) is a system of library classification developed by the Library of Congress.
    */
    lcc: prefixer('lcc'),

    /**
    * **[LCCN](http://dbpedia.org/ontology/lccn)** (property)
    * 
    * The Library of Congress Control Number or LCCN is a serially based system of numbering cataloging records in the Library of Congress in the United States. It has nothing to do with the contents of any book, and should not be confused with Library of Congress Classification.
    */
    lccn: prefixer('lccn'),

    /**
    * **[LCCN Id](http://dbpedia.org/ontology/lccnId)** (property)
    * 
    * Library of Congress Control Number
    */
    lccnId: prefixer('lccnId'),

    /**
    * **[legal article](http://dbpedia.org/ontology/legalArticle)** (property)
    * 
    * article in code book or statute book referred to in this legal case
    */
    legalArticle: prefixer('legalArticle'),

    /**
    * **[legislative period name](http://dbpedia.org/ontology/legislativePeriodName)** (property)
    * 
    * The term of the on-going session (e.g.: "40th Canadian Parliament").
    */
    legislativePeriodName: prefixer('legislativePeriodName'),

    /**
    * **[licensee](http://dbpedia.org/ontology/licensee)** (property)
    * 
    * Identify which company or entity holds the licence (mostly string are used in Wikipedia, therefore range is xsd:sting).
    */
    licensee: prefixer('licensee'),

    /**
    * **[line length (Œº)](http://dbpedia.org/ontology/lineLength)** (property)
    * 
    * Length of the line. Wikipedians usually do not differentiate between track length and line lenght.
    */
    lineLength: prefixer('lineLength'),

    /**
    * **[load limit (g)](http://dbpedia.org/ontology/loadLimit)** (property)
    * 
    * Load limit of the bridge.
    */
    loadLimit: prefixer('loadLimit'),

    /**
    * **[locationName](http://dbpedia.org/ontology/locationName)** (property)
    * 
    * Location of the thing as string. Use "location" if the location is a resource
    */
    locationName: prefixer('locationName'),

    /**
    * **[longtype](http://dbpedia.org/ontology/longtype)** (property)
    * 
    * can be used to include more informations e.g. the name of the artist that a tribute album is in honor of
    */
    longtype: prefixer('longtype'),

    /**
    * **[lower earth orbit payload (g)](http://dbpedia.org/ontology/lowerEarthOrbitPayload)** (property)
    * 
    * Payload mass in a typical Low Earth orbit
    */
    lowerEarthOrbitPayload: prefixer('lowerEarthOrbitPayload'),

    /**
    * **[maiden flight](http://dbpedia.org/ontology/maidenFlight)** (property)
    * 
    * date of maiden flight
    */
    maidenFlight: prefixer('maidenFlight'),

    /**
    * **[majority floor leader](http://dbpedia.org/ontology/majorityFloorLeader)** (property)
    * 
    * number of office holder
    */
    majorityFloorLeader: prefixer('majorityFloorLeader'),

    /**
    * **[majority leader](http://dbpedia.org/ontology/majorityLeader)** (property)
    * 
    * number of office holder
    */
    majorityLeader: prefixer('majorityLeader'),

    /**
    * **[mascot](http://dbpedia.org/ontology/mascot)** (property)
    * 
    * something, especially a person or animal, used to symbolize a sports team, company, organization or other group.
    */
    mascot: prefixer('mascot'),

    /**
    * **[maximum preparation time (s)](http://dbpedia.org/ontology/maxTime)** (property)
    * 
    * Maximum preparation time of a recipe / Food
    */
    maxTime: prefixer('maxTime'),

    /**
    * **[maximum depth (Œº)](http://dbpedia.org/ontology/maximumDepth)** (property)
    * 
    * Source of the value can be declare by .
    */
    maximumDepth: prefixer('maximumDepth'),

    /**
    * **[maximum depth quote](http://dbpedia.org/ontology/maximumDepthQuote)** (property)
    * 
    * Source of the  value.
    */
    maximumDepthQuote: prefixer('maximumDepthQuote'),

    /**
    * **[maximum elevation (Œº)](http://dbpedia.org/ontology/maximumElevation)** (property)
    * 
    * maximum elevation above the sea level
    */
    maximumElevation: prefixer('maximumElevation'),

    /**
    * **[MBA Id](http://dbpedia.org/ontology/mbaId)** (property)
    * 
    * MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.
    */
    mbaId: prefixer('mbaId'),

    /**
    * **[Messier name](http://dbpedia.org/ontology/messierName)** (property)
    * 
    * Name for Messier objects
    */
    messierName: prefixer('messierName'),

    /**
    * **[mgiid](http://dbpedia.org/ontology/mgiid)** (property)
    * 
    * Mouse Genomic Informatics ID
    */
    mgiid: prefixer('mgiid'),

    /**
    * **[military command](http://dbpedia.org/ontology/militaryCommand)** (property)
    * 
    * For persons who are notable as commanding officers, the units they commanded. Dates should be given if multiple notable commands were held.
    */
    militaryCommand: prefixer('militaryCommand'),

    /**
    * **[military unit size](http://dbpedia.org/ontology/militaryUnitSize)** (property)
    * 
    * the size of the military unit
    */
    militaryUnitSize: prefixer('militaryUnitSize'),

    /**
    * **[mill code BE](http://dbpedia.org/ontology/millsCodeBE)** (property)
    * 
    * mills code from the Belgian database on mills
    */
    millsCodeBE: prefixer('millsCodeBE'),

    /**
    * **[mill code NL](http://dbpedia.org/ontology/millsCodeNL)** (property)
    * 
    * mills code from the central Dutch database on mills
    */
    millsCodeNL: prefixer('millsCodeNL'),

    /**
    * **[minimum preparation time (s)](http://dbpedia.org/ontology/minTime)** (property)
    * 
    * Minimum preparation time of a recipe / Food
    */
    minTime: prefixer('minTime'),

    /**
    * **[minimum elevation (Œº)](http://dbpedia.org/ontology/minimumElevation)** (property)
    * 
    * minimum elevation above the sea level
    */
    minimumElevation: prefixer('minimumElevation'),

    /**
    * **[minority floor leader](http://dbpedia.org/ontology/minorityFloorLeader)** (property)
    * 
    * number of office holder
    */
    minorityFloorLeader: prefixer('minorityFloorLeader'),

    /**
    * **[minority leader](http://dbpedia.org/ontology/minorityLeader)** (property)
    * 
    * number of office holder
    */
    minorityLeader: prefixer('minorityLeader'),

    /**
    * **[musicFormat](http://dbpedia.org/ontology/musicFormat)** (property)
    * 
    * The format of the album: EP, Single etc.
    */
    musicFormat: prefixer('musicFormat'),

    /**
    * **[mute character in play](http://dbpedia.org/ontology/muteCharacterInPlay)** (property)
    * 
    * Name of a mute character in play.
    */
    muteCharacterInPlay: prefixer('muteCharacterInPlay'),

    /**
    * **[NDL id](http://dbpedia.org/ontology/ndlId)** (property)
    * 
    * National Diet Library of Japan identificator. http://id.ndl.go.jp/auth/ndlna/$1
    */
    ndlId: prefixer('ndlId'),

    /**
    * **[NGC name](http://dbpedia.org/ontology/ngcName)** (property)
    * 
    * Name for NGC objects
    */
    ngcName: prefixer('ngcName'),

    /**
    * **[NIS code](http://dbpedia.org/ontology/nisCode)** (property)
    * 
    * Indexing code used by the Belgium National Statistical Institute to identify populated places.
    */
    nisCode: prefixer('nisCode'),

    /**
    * **[NLA Id](http://dbpedia.org/ontology/nlaId)** (property)
    * 
    * NLA Trove‚Äôs People and Organisation view allows the discovery of biographical and other contextual information about people and organisations. Search also available via VIAF.
    */
    nlaId: prefixer('nlaId'),

    /**
    * **[notes](http://dbpedia.org/ontology/notes)** (property)
    * 
    * additional notes that better describe the entity.
    */
    notes: prefixer('notes'),

    /**
    * **[number](http://dbpedia.org/ontology/number)** (property)
    * 
    * Jersey number of an Athlete (sports player, eg "99") or sequential number of an Album (eg "Third studio album")
    */
    number: prefixer('number'),

    /**
    * **[number of albums](http://dbpedia.org/ontology/numberOfAlbums)** (property)
    * 
    * the total number of albums released by the musical artist
    */
    numberOfAlbums: prefixer('numberOfAlbums'),

    /**
    * **[number of items in collection](http://dbpedia.org/ontology/numberOfCollectionItems)** (property)
    * 
    * Indication as to the size of the collection of this library
    */
    numberOfCollectionItems: prefixer('numberOfCollectionItems'),

    /**
    * **[number of houses present)](http://dbpedia.org/ontology/numberOfHouses)** (property)
    * 
    * Count of the houses in the Protected Area
    */
    numberOfHouses: prefixer('numberOfHouses'),

    /**
    * **[number of lawyers](http://dbpedia.org/ontology/numberOfLawyers)** (property)
    * 
    * Number of lawyers or attorneys in the company.
    */
    numberOfLawyers: prefixer('numberOfLawyers'),

    /**
    * **[number of lines](http://dbpedia.org/ontology/numberOfLines)** (property)
    * 
    * Number of lines in the transit system.
    */
    numberOfLines: prefixer('numberOfLines'),

    /**
    * **[number of live albums](http://dbpedia.org/ontology/numberOfLiveAlbums)** (property)
    * 
    * the number of live albums released by the musical artist
    */
    numberOfLiveAlbums: prefixer('numberOfLiveAlbums'),

    /**
    * **[number of offices](http://dbpedia.org/ontology/numberOfOffices)** (property)
    * 
    * Number of the company's offices.
    */
    numberOfOffices: prefixer('numberOfOffices'),

    /**
    * **[number of pages](http://dbpedia.org/ontology/numberOfPages)** (property)
    * 
    * The books number of pages.
    */
    numberOfPages: prefixer('numberOfPages'),

    /**
    * **[number of licensed](http://dbpedia.org/ontology/numberOfPeopleLicensed)** (property)
    * 
    * nombre de personnes ayant une license pour pratiquer cette activit√©
    */
    numberOfPeopleLicensed: prefixer('numberOfPeopleLicensed'),

    /**
    * **[number of piers in water](http://dbpedia.org/ontology/numberOfPiersInWater)** (property)
    * 
    * Number of piers standing in a river or other water in normal conditions.
    */
    numberOfPiersInWater: prefixer('numberOfPiersInWater'),

    /**
    * **[number of platform levels](http://dbpedia.org/ontology/numberOfPlatformLevels)** (property)
    * 
    * Number of levels of platforms at the station.
    */
    numberOfPlatformLevels: prefixer('numberOfPlatformLevels'),

    /**
    * **[number of professionals](http://dbpedia.org/ontology/numberOfProfessionals)** (property)
    * 
    * number of people who earns his living from a specified activity.
    */
    numberOfProfessionals: prefixer('numberOfProfessionals'),

    /**
    * **[number of seats in parliament](http://dbpedia.org/ontology/numberOfSeatsInParliament)** (property)
    * 
    * number of seats in House of Commons-like parliaments
    */
    numberOfSeatsInParliament: prefixer('numberOfSeatsInParliament'),

    /**
    * **[number of spans](http://dbpedia.org/ontology/numberOfSpans)** (property)
    * 
    * Number of spans or arches.
    */
    numberOfSpans: prefixer('numberOfSpans'),

    /**
    * **[number of stations](http://dbpedia.org/ontology/numberOfStations)** (property)
    * 
    * Number of stations or stops.
    */
    numberOfStations: prefixer('numberOfStations'),

    /**
    * **[number of studio albums](http://dbpedia.org/ontology/numberOfStudioAlbums)** (property)
    * 
    * the number of studio albums released by the musical artist
    */
    numberOfStudioAlbums: prefixer('numberOfStudioAlbums'),

    /**
    * **[number of tracks](http://dbpedia.org/ontology/numberOfTracks)** (property)
    * 
    * Number of tracks of a railway or railway station.
    */
    numberOfTracks: prefixer('numberOfTracks'),

    /**
    * **[number of vehicles](http://dbpedia.org/ontology/numberOfVehicles)** (property)
    * 
    * Number of vehicles used in the transit system.
    */
    numberOfVehicles: prefixer('numberOfVehicles'),

    /**
    * **[number of visitors as of](http://dbpedia.org/ontology/numberOfVisitorsAsOf)** (property)
    * 
    * The year in which number of visitors occurred.
    */
    numberOfVisitorsAsOf: prefixer('numberOfVisitorsAsOf'),

    /**
    * **[number sold](http://dbpedia.org/ontology/numberSold)** (property)
    * 
    * Number of things (eg vehicles) sold
    */
    numberSold: prefixer('numberSold'),

    /**
    * **[NUTS code](http://dbpedia.org/ontology/nutsCode)** (property)
    * 
    * Nomenclature of Territorial Units for Statistics (NUTS) is a geocode  standard for referencing the subdivisions of countries  for statistical purposes. The standard is developed and regulated by the European Union, and thus only covers the member states of the EU in detail.
    */
    nutsCode: prefixer('nutsCode'),

    /**
    * **[OCLC](http://dbpedia.org/ontology/oclc)** (property)
    * 
    * Online Computer Library Center number
    */
    oclc: prefixer('oclc'),

    /**
    * **[official school colour](http://dbpedia.org/ontology/officialSchoolColour)** (property)
    * 
    * The official colour of the EducationalInstitution represented by the colour name (e.g.: red or green).
    */
    officialSchoolColour: prefixer('officialSchoolColour'),

    /**
    * **[ofs code of a settlement](http://dbpedia.org/ontology/ofsCode)** (property)
    * 
    * Identifier used by the Swiss Federal Institute for Statistics
    */
    ofsCode: prefixer('ofsCode'),

    /**
    * **[okato code](http://dbpedia.org/ontology/okatoCode)** (property)
    * 
    * Code used to indentify populated places in Russia
    */
    okatoCode: prefixer('okatoCode'),

    /**
    * **[on chromosome](http://dbpedia.org/ontology/onChromosome)** (property)
    * 
    * the number corresponding to the chromosome on which the gene is located
    */
    onChromosome: prefixer('onChromosome'),

    /**
    * **[open access content](http://dbpedia.org/ontology/openAccessContent)** (property)
    * 
    * Availability of open access content.
    */
    openAccessContent: prefixer('openAccessContent'),

    /**
    * **[ORCID Id](http://dbpedia.org/ontology/orcidId)** (property)
    * 
    * Authority data on researchers, academics, etc. The ID range has been defined as a subset of the forthcoming ISNI range.
    */
    orcidId: prefixer('orcidId'),

    /**
    * **[original name](http://dbpedia.org/ontology/originalName)** (property)
    * 
    * The original name of the entity, e.g. film, settlement, etc.
    */
    originalName: prefixer('originalName'),

    /**
    * **[original title](http://dbpedia.org/ontology/originalTitle)** (property)
    * 
    * The original title of the work, most of the time in the original language as well
    */
    originalTitle: prefixer('originalTitle'),

    /**
    * **[originally used for](http://dbpedia.org/ontology/originallyUsedFor)** (property)
    * 
    * Original use of ArchitecturalStructure or ConcentrationCamp, if it is currently being used as anything other than its original purpose.
    */
    originallyUsedFor: prefixer('originallyUsedFor'),

    /**
    * **[other serving lines](http://dbpedia.org/ontology/otherServingLines)** (property)
    * 
    * Connecting services that serve the station such as bus, etc.
    */
    otherServingLines: prefixer('otherServingLines'),

    /**
    * **[parking information](http://dbpedia.org/ontology/parkingInformation)** (property)
    * 
    * Information on station's parking facilities.
    */
    parkingInformation: prefixer('parkingInformation'),

    /**
    * **[partial failed launches](http://dbpedia.org/ontology/partialFailedLaunches)** (property)
    * 
    * total number of launches resulting in partial failure
    */
    partialFailedLaunches: prefixer('partialFailedLaunches'),

    /**
    * **[passengers per day](http://dbpedia.org/ontology/passengersPerDay)** (property)
    * 
    * Number of passengers per day.
    */
    passengersPerDay: prefixer('passengersPerDay'),

    /**
    * **[passengers per year](http://dbpedia.org/ontology/passengersPerYear)** (property)
    * 
    * Number of passengers per year.
    */
    passengersPerYear: prefixer('passengersPerYear'),

    /**
    * **[passengers used system](http://dbpedia.org/ontology/passengersUsedSystem)** (property)
    * 
    * System the passengers are using (from which the passenger statistics are).
    */
    passengersUsedSystem: prefixer('passengersUsedSystem'),

    /**
    * **[PDB ID](http://dbpedia.org/ontology/pdb)** (property)
    * 
    * gene entry for 3D structural data as per the PDB (Protein Data Bank) database
    */
    pdb: prefixer('pdb'),

    /**
    * **[peopleName](http://dbpedia.org/ontology/peopleName)** (property)
    * 
    * Name for the people inhabiting a place, eg Ankara->Ankariotes, Bulgaria->Bulgarians
    */
    peopleName: prefixer('peopleName'),

    /**
    * **[percentage of alcohol](http://dbpedia.org/ontology/percentageAlcohol)** (property)
    * 
    * percentage of alcohol present in a beverage
    */
    percentageAlcohol: prefixer('percentageAlcohol'),

    /**
    * **[percentage of fat](http://dbpedia.org/ontology/percentageFat)** (property)
    * 
    * how much fat (as a percentage) does this food contain. Mostly applies to Cheese
    */
    percentageFat: prefixer('percentageFat'),

    /**
    * **[phone prefix](http://dbpedia.org/ontology/phonePrefix)** (property)
    * 
    * Don't use this, use areaCode
    */
    phonePrefix: prefixer('phonePrefix'),

    /**
    * **[pictures Commons category](http://dbpedia.org/ontology/picturesCommonsCategory)** (property)
    * 
    * Wikimedia CommonsCategory for pictures of this resource
    */
    picturesCommonsCategory: prefixer('picturesCommonsCategory'),

    /**
    * **[police name](http://dbpedia.org/ontology/policeName)** (property)
    * 
    * The police detachment serving a UK place, eg Wakefield -> "West Yorkshire Police"
    */
    policeName: prefixer('policeName'),

    /**
    * **[postal code](http://dbpedia.org/ontology/postalCode)** (property)
    * 
    * A postal code (known in various countries as a post code, postcode, or ZIP code) is a series of letters and/or digits appended to a postal address for the purpose of sorting mail.
    */
    postalCode: prefixer('postalCode'),

    /**
    * **[premiere date](http://dbpedia.org/ontology/premiereDate)** (property)
    * 
    * Date the play was first performed.
    */
    premiereDate: prefixer('premiereDate'),

    /**
    * **[premiere year](http://dbpedia.org/ontology/premiereYear)** (property)
    * 
    * Year the play was first performed.
    */
    premiereYear: prefixer('premiereYear'),

    /**
    * **[price ($)](http://dbpedia.org/ontology/price)** (property)
    * 
    * The price of something, eg a journal. For "total money earned by an Athlete" use gross
    */
    price: prefixer('price'),

    /**
    * **[procedure](http://dbpedia.org/ontology/procedure)** (property)
    * 
    * The name designating a formal collection of steps to be taken to complete the case
    */
    procedure: prefixer('procedure'),

    /**
    * **[project budget funding ($)](http://dbpedia.org/ontology/projectBudgetFunding)** (property)
    * 
    * The part of the project budget that is funded by the Organistaions given in the "FundedBy" property.
    */
    projectBudgetFunding: prefixer('projectBudgetFunding'),

    /**
    * **[project budget total ($)](http://dbpedia.org/ontology/projectBudgetTotal)** (property)
    * 
    * The total budget of the research project.
    */
    projectBudgetTotal: prefixer('projectBudgetTotal'),

    /**
    * **[project end date](http://dbpedia.org/ontology/projectEndDate)** (property)
    * 
    * The end date of the project.
    */
    projectEndDate: prefixer('projectEndDate'),

    /**
    * **[project keyword](http://dbpedia.org/ontology/projectKeyword)** (property)
    * 
    * A key word of the project.
    */
    projectKeyword: prefixer('projectKeyword'),

    /**
    * **[project objective](http://dbpedia.org/ontology/projectObjective)** (property)
    * 
    * A defined objective of the project.
    */
    projectObjective: prefixer('projectObjective'),

    /**
    * **[project reference ID](http://dbpedia.org/ontology/projectReferenceID)** (property)
    * 
    * The reference identification of the project.
    */
    projectReferenceID: prefixer('projectReferenceID'),

    /**
    * **[project start date](http://dbpedia.org/ontology/projectStartDate)** (property)
    * 
    * The start date of the project.
    */
    projectStartDate: prefixer('projectStartDate'),

    /**
    * **[project type](http://dbpedia.org/ontology/projectType)** (property)
    * 
    * The type of the research project. Mostly used for the funding schemes of the European Union, for instance: Specific Targeted Research Projects (STREP), Network of Excellence (NoE) or Integrated Project.
    */
    projectType: prefixer('projectType'),

    /**
    * **[monument protection status](http://dbpedia.org/ontology/protectionStatus)** (property)
    * 
    * The sort of status that is granted to a protected Building or Monument. This is not about being protected or not, this is about the nature of the protection regime. E.g., in the Netherlands the protection status 'rijksmonument' points to more elaborate protection than other statuses.
    */
    protectionStatus: prefixer('protectionStatus'),

    /**
    * **[protein (g)](http://dbpedia.org/ontology/protein)** (property)
    * 
    * Amount of proteins per servingSize of a Food
    */
    protein: prefixer('protein'),

    /**
    * **[publicly accessible](http://dbpedia.org/ontology/publiclyAccessible)** (property)
    * 
    * describes in what way this site is accessible for public
    */
    publiclyAccessible: prefixer('publiclyAccessible'),

    /**
    * **[quotation](http://dbpedia.org/ontology/quotation)** (property)
    * 
    * A quotation is the repetition of one expression as part of another one, particularly when the quoted expression is well-known or explicitly attributed by citation to its original source.
    */
    quotation: prefixer('quotation'),

    /**
    * **[railway platforms](http://dbpedia.org/ontology/railwayPlatforms)** (property)
    * 
    * Information on the type of platform(s) at the station.
    */
    railwayPlatforms: prefixer('railwayPlatforms'),

    /**
    * **[range](http://dbpedia.org/ontology/range)** (property)
    * 
    * Maximum distance without refueling
    */
    range: prefixer('range'),

    /**
    * **[rank](http://dbpedia.org/ontology/rank)** (property)
    * 
    * Rank of something among other things of the same kind, eg Constellations by Area; MusicalAlbums by popularity, etc
    */
    rank: prefixer('rank'),

    /**
    * **[red list ID NL](http://dbpedia.org/ontology/redListIdNL)** (property)
    * 
    * red list code for treatened species NL (different from IUCN)
    */
    redListIdNL: prefixer('redListIdNL'),

    /**
    * **[reference](http://dbpedia.org/ontology/reference)** (property)
    * 
    * Structured reference providing info about the subject
    */
    reference: prefixer('reference'),

    /**
    * **[registry number](http://dbpedia.org/ontology/registryNumber)** (property)
    * 
    * Identification of the registry a document is in
    */
    registryNumber: prefixer('registryNumber'),

    /**
    * **[atomic weight](http://dbpedia.org/ontology/relativeAtomicMass)** (property)
    * 
    * the ratio of the average mass of atoms of an element (from a single given sample or source) to 1‚ÅÑ12 of the mass of an atom of carbon-12
    */
    relativeAtomicMass: prefixer('relativeAtomicMass'),

    /**
    * **[release date](http://dbpedia.org/ontology/releaseDate)** (property)
    * 
    * Release date of a Work or another product (eg Aircraft or other MeansOfTransportation
    */
    releaseDate: prefixer('releaseDate'),

    /**
    * **[relics](http://dbpedia.org/ontology/relics)** (property)
    * 
    * Physical remains or personal effects of a saint or venerated person, preserved in a religious building
    */
    relics: prefixer('relics'),

    /**
    * **[reopening date](http://dbpedia.org/ontology/reopeningDate)** (property)
    * 
    * Date of reopening the architectural structure.
    */
    reopeningDate: prefixer('reopeningDate'),

    /**
    * **[reopening year](http://dbpedia.org/ontology/reopeningYear)** (property)
    * 
    * Year of reopening the architectural structure.
    */
    reopeningYear: prefixer('reopeningYear'),

    /**
    * **[reporting mark](http://dbpedia.org/ontology/reportingMark)** (property)
    * 
    * A reporting mark is a two-, three-, or four-letter alphabetic code used to identify owners or lessees of rolling stock and other equipment used on the North American railroad network.
    */
    reportingMark: prefixer('reportingMark'),

    /**
    * **[reservations](http://dbpedia.org/ontology/reservations)** (property)
    * 
    * Are reservations required for the establishment or event?
    */
    reservations: prefixer('reservations'),

    /**
    * **[RID Id](http://dbpedia.org/ontology/ridId)** (property)
    * 
    * An identifying system for scientific authors. The system was introduced in January 2008 by Thomson Reuters. The combined use of the Digital Object Identifier with the ResearcherID allows for a unique association of authors and scientific articles.
    */
    ridId: prefixer('ridId'),

    /**
    * **[RKDartists id](http://dbpedia.org/ontology/rkdArtistsId)** (property)
    * 
    * Rijksbureau voor Kunsthistorische Documentatie (RKD) artists database id.
    * http://rkd.nl/explore/artists/$1
    */
    rkdArtistsId: prefixer('rkdArtistsId'),

    /**
    * **[number of rocket stages](http://dbpedia.org/ontology/rocketStages)** (property)
    * 
    * number of stages, not including boosters
    */
    rocketStages: prefixer('rocketStages'),

    /**
    * **[route direction](http://dbpedia.org/ontology/routeDirection)** (property)
    * 
    * The general direction of the route (eg. North-South).
    */
    routeDirection: prefixer('routeDirection'),

    /**
    * **[road end direction](http://dbpedia.org/ontology/routeEndDirection)** (property)
    * 
    * End of the route. The opposite of OntologyProperty:routeStartDirection.
    */
    routeEndDirection: prefixer('routeEndDirection'),

    /**
    * **[route number](http://dbpedia.org/ontology/routeNumber)** (property)
    * 
    * The number of the route.
    */
    routeNumber: prefixer('routeNumber'),

    /**
    * **[road start direction](http://dbpedia.org/ontology/routeStartDirection)** (property)
    * 
    * End of the route. For U.S. roads, this should be either "South" or "West" per the standards set by the U.S. Roads project.
    */
    routeStartDirection: prefixer('routeStartDirection'),

    /**
    * **[route type abbreviation](http://dbpedia.org/ontology/routeTypeAbbreviation)** (property)
    * 
    * The route type abbreviation (eg.: I for Interstate, M for Motorway or NJ for New Jersey Route).
    */
    routeTypeAbbreviation: prefixer('routeTypeAbbreviation'),

    /**
    * **[ruling](http://dbpedia.org/ontology/ruling)** (property)
    * 
    * Ruling referred to in this legal case
    */
    ruling: prefixer('ruling'),

    /**
    * **[score](http://dbpedia.org/ontology/score)** (property)
    * 
    * Score or points of something (eg a SportCompetitionResult)
    */
    score: prefixer('score'),

    /**
    * **[season number](http://dbpedia.org/ontology/seasonNumber)** (property)
    * 
    * The season number to which the TelevisionEpisode belongs.
    */
    seasonNumber: prefixer('seasonNumber'),

    /**
    * **[security](http://dbpedia.org/ontology/security)** (property)
    * 
    * Safety precautions that are used in the building.
    */
    security: prefixer('security'),

    /**
    * **[SELIBR Id](http://dbpedia.org/ontology/selibrId)** (property)
    * 
    * Authority data from the National Library of Sweden
    */
    selibrId: prefixer('selibrId'),

    /**
    * **[service number](http://dbpedia.org/ontology/serviceNumber)** (property)
    * 
    * The service number held by the individual during military service.
    */
    serviceNumber: prefixer('serviceNumber'),

    /**
    * **[serving size (g)](http://dbpedia.org/ontology/servingSize)** (property)
    * 
    * Default serving size (eg "100 g" for the standard 100 g serving size). approximateCalories apply to this serving size
    */
    servingSize: prefixer('servingSize'),

    /**
    * **[serving temperature](http://dbpedia.org/ontology/servingTemperature)** (property)
    * 
    * Serving temperature for the food (e.g.: hot, cold, warm or room temperature).
    */
    servingTemperature: prefixer('servingTemperature'),

    /**
    * **[setting of play](http://dbpedia.org/ontology/settingOfPlay)** (property)
    * 
    * The places and time where the play takes place.
    */
    settingOfPlay: prefixer('settingOfPlay'),

    /**
    * **[ship beam (Œº)](http://dbpedia.org/ontology/shipBeam)** (property)
    * 
    * The beam of a ship is its width at the widest point.
    */
    shipBeam: prefixer('shipBeam'),

    /**
    * **[displacement (g)](http://dbpedia.org/ontology/shipDisplacement)** (property)
    * 
    * A ship's displacement is its mass at any given time.
    */
    shipDisplacement: prefixer('shipDisplacement'),

    /**
    * **[ship draft (Œº)](http://dbpedia.org/ontology/shipDraft)** (property)
    * 
    * The draft (or draught) of a ship's hull is the vertical distance between the waterline and the bottom of the hull (keel), with the thickness of the hull included; in the case of not being included the draft outline would be obtained.
    */
    shipDraft: prefixer('shipDraft'),

    /**
    * **[SMILES](http://dbpedia.org/ontology/smiles)** (property)
    * 
    * The Simplified Molecular-Input Line-Entry System or SMILES is a specification in form of a line notation for describing the structure of chemical molecules using short ASCII strings.
    */
    smiles: prefixer('smiles'),

    /**
    * **[sourceText](http://dbpedia.org/ontology/sourceText)** (property)
    * 
    * Source of something (eg an image) as text. Use dct:source if the source is described using a resource
    */
    sourceText: prefixer('sourceText'),

    /**
    * **[speaker](http://dbpedia.org/ontology/speaker)** (property)
    * 
    * number of office holder
    */
    speaker: prefixer('speaker'),

    /**
    * **[squad number](http://dbpedia.org/ontology/squadNumber)** (property)
    * 
    * The number that an athlete wears in a team sport.
    */
    squadNumber: prefixer('squadNumber'),

    /**
    * **[start date](http://dbpedia.org/ontology/startDate)** (property)
    * 
    * The start date of the event.
    */
    startDate: prefixer('startDate'),

    /**
    * **[start date and time](http://dbpedia.org/ontology/startDateTime)** (property)
    * 
    * The start date and time of the event.
    */
    startDateTime: prefixer('startDateTime'),

    /**
    * **[station structure](http://dbpedia.org/ontology/stationStructure)** (property)
    * 
    * Type of station structure (underground, at-grade, or elevated).
    */
    stationStructure: prefixer('stationStructure'),

    /**
    * **[subject of play](http://dbpedia.org/ontology/subjectOfPlay)** (property)
    * 
    * The overall subject matter dealt with by the play.
    */
    subjectOfPlay: prefixer('subjectOfPlay'),

    /**
    * **[subject term](http://dbpedia.org/ontology/subjectTerm)** (property)
    * 
    * The subject as a term, possibly a term from a formal classification
    */
    subjectTerm: prefixer('subjectTerm'),

    /**
    * **[SUDOC id](http://dbpedia.org/ontology/sudocId)** (property)
    * 
    * Syst√®me universitaire de documentation id (French collaborative library catalog).
    * http://www.idref.fr/$1
    */
    sudocId: prefixer('sudocId'),

    /**
    * **[suppredded date](http://dbpedia.org/ontology/suppreddedDate)** (property)
    * 
    * Date when the Church forbade the veneration of this saint.
    * (I hope that's what it means, I don't know why the original author didn't document it)
    */
    suppreddedDate: prefixer('suppreddedDate'),

    /**
    * **[Symbol](http://dbpedia.org/ontology/symbol)** (property)
    * 
    * HUGO Gene Symbol
    */
    symbol: prefixer('symbol'),

    /**
    * **[type of tennis surface](http://dbpedia.org/ontology/tennisSurfaceType)** (property)
    * 
    * There are five types of court surface used in professional play. Each surface is different in the speed and height of the bounce of the ball.
    */
    tennisSurfaceType: prefixer('tennisSurfaceType'),

    /**
    * **[total discs](http://dbpedia.org/ontology/totalDiscs)** (property)
    * 
    * the total number of discs contained in the album
    */
    totalDiscs: prefixer('totalDiscs'),

    /**
    * **[total tracks](http://dbpedia.org/ontology/totalTracks)** (property)
    * 
    * the total number of tracks contained in the album
    */
    totalTracks: prefixer('totalTracks'),

    /**
    * **[track length (Œº)](http://dbpedia.org/ontology/trackLength)** (property)
    * 
    * Length of the track. Wikipedians usually do not differentiate between track length and line lenght.
    */
    trackLength: prefixer('trackLength'),

    /**
    * **[track width (Œº)](http://dbpedia.org/ontology/trackWidth)** (property)
    * 
    * Width of the track, e.g., the track width differing in Russia from (Western and Middle) European track width
    */
    trackWidth: prefixer('trackWidth'),

    /**
    * **[type coordinate](http://dbpedia.org/ontology/typeCoordinate)** (property)
    * 
    * Scale parameters that can be understood by Geohack, eg "type:", "scale:", "region:" "altitude:". Use "_" for several (eg "type:landmark_scale:50000"). See https://fr.wikipedia.org/wiki/Mod√®le:Infobox_Subdivision_administrative for examples, and https://fr.wikipedia.org/wiki/Mod√®le:GeoTemplate/Utilisation#La_mention_Type:... for a complete list
    */
    typeCoordinate: prefixer('typeCoordinate'),

    /**
    * **[UCI code](http://dbpedia.org/ontology/uciCode)** (property)
    * 
    * Official UCI code for cycling teams
    */
    uciCode: prefixer('uciCode'),

    /**
    * **[ULAN id](http://dbpedia.org/ontology/ulanId)** (property)
    * 
    * Union List of Artist Names id (Getty Research Institute). ULAN has 293,000 names and other information about artists. Names in ULAN may include given names, pseudonyms, variant spellings, names in multiple languages, and names that have changed over time (e.g., married names).
    * http://vocab.getty.edu/ulan/$1
    */
    ulanId: prefixer('ulanId'),

    /**
    * **[unknown outcomes](http://dbpedia.org/ontology/unknownOutcomes)** (property)
    * 
    * number of launches with unknown outcomes (or in progress)
    */
    unknownOutcomes: prefixer('unknownOutcomes'),

    /**
    * **[UN/LOCODE](http://dbpedia.org/ontology/unloCode)** (property)
    * 
    * UN/LOCODE, the United Nations Code for Trade and Transport Locations, is a geographic coding scheme developed and maintained by United Nations Economic Commission for Europe (UNECE), a unit of the United Nations. UN/LOCODE assigns codes to locations used in trade and transport  with functions such as seaports, rail and road terminals, airports, post offices and border crossing points.
    */
    unloCode: prefixer('unloCode'),

    /**
    * **[updated](http://dbpedia.org/ontology/updated)** (property)
    * 
    * The last update date of a resource
    */
    updated: prefixer('updated'),

    /**
    * **[US sales](http://dbpedia.org/ontology/usSales)** (property)
    * 
    * Number of things (eg vehicles) sold in the US
    */
    usSales: prefixer('usSales'),

    /**
    * **[vehicle code](http://dbpedia.org/ontology/vehicleCode)** (property)
    * 
    * Region related vehicle code on the vehicle plates.
    */
    vehicleCode: prefixer('vehicleCode'),

    /**
    * **[VIAF Id](http://dbpedia.org/ontology/viafId)** (property)
    * 
    * Virtual International Authority File ID (operated by Online Computer Library Center, OCLC). Property range set to Agent because of corporate authors
    */
    viafId: prefixer('viafId'),

    /**
    * **[victims (string)](http://dbpedia.org/ontology/victims)** (property)
    * 
    * Type, description, or name(s) of victims of a ConcentrationCamp, Criminal, SerialKiller, or some other atrocity
    */
    victims: prefixer('victims'),

    /**
    * **[visitor statistics as of](http://dbpedia.org/ontology/visitorStatisticsAsOf)** (property)
    * 
    * Year visitor information was gathered.
    */
    visitorStatisticsAsOf: prefixer('visitorStatisticsAsOf'),

    /**
    * **[visitor percentage change](http://dbpedia.org/ontology/visitorsPercentageChange)** (property)
    * 
    * Percentage increase or decrease.
    */
    visitorsPercentageChange: prefixer('visitorsPercentageChange'),

    /**
    * **[voltage of electrification (V)](http://dbpedia.org/ontology/voltageOfElectrification)** (property)
    * 
    * Voltage of the electrification system.
    */
    voltageOfElectrification: prefixer('voltageOfElectrification'),

    /**
    * **[Character size of wiki page](http://dbpedia.org/ontology/wikiPageCharacterSize)** (property)
    * 
    * Needs to be removed, left at the moment to not break DBpedia Live
    */
    wikiPageCharacterSize: prefixer('wikiPageCharacterSize'),

    /**
    * **[extraction datetime](http://dbpedia.org/ontology/wikiPageExtracted)** (property)
    * 
    * Date a page was extracted ''''''
    */
    wikiPageExtracted: prefixer('wikiPageExtracted'),

    /**
    * **[Wikipage page ID](http://dbpedia.org/ontology/wikiPageID)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageID: prefixer('wikiPageID'),

    /**
    * **[Wiki page in degree](http://dbpedia.org/ontology/wikiPageInDegree)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageInDegree: prefixer('wikiPageInDegree'),

    /**
    * **[page length (characters) of wiki page](http://dbpedia.org/ontology/wikiPageLength)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageLength: prefixer('wikiPageLength'),

    /**
    * **[Wikipage modification datetime](http://dbpedia.org/ontology/wikiPageModified)** (property)
    * 
    * Reserved for DBpedia ''''''
    */
    wikiPageModified: prefixer('wikiPageModified'),

    /**
    * **[Wiki page out degree](http://dbpedia.org/ontology/wikiPageOutDegree)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageOutDegree: prefixer('wikiPageOutDegree'),

    /**
    * **[Wikipage revision ID](http://dbpedia.org/ontology/wikiPageRevisionID)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageRevisionID: prefixer('wikiPageRevisionID'),

    /**
    * **[year of world champion title](http://dbpedia.org/ontology/worldChampionTitleYear)** (property)
    * 
    * can be one or several years
    */
    worldChampionTitleYear: prefixer('worldChampionTitleYear'),

    /**
    * **[year of construction](http://dbpedia.org/ontology/yearOfConstruction)** (property)
    * 
    * The year in which construction of the Place was finished.
    */
    yearOfConstruction: prefixer('yearOfConstruction'),

    /**
    * **[year of electrification](http://dbpedia.org/ontology/yearOfElectrification)** (property)
    * 
    * Year station was electrified, if not previously at date of opening.
    */
    yearOfElectrification: prefixer('yearOfElectrification'),

    /**
    * **[zdb](http://dbpedia.org/ontology/zdb)** (property)
    * 
    * Identifier for serial titles. More precise than issn
    */
    zdb: prefixer('zdb'),

    /**
    * **[code land registry](http://dbpedia.org/ontology/codeLandRegistry)** (property)
    * 
    * Land Registry code designating a parcel of land
    */
    codeLandRegistry: prefixer('codeLandRegistry'),

    /**
    * **[academic discipline](http://dbpedia.org/ontology/academicDiscipline)** (property)
    * 
    * An academic discipline, or field of study, is a branch of knowledge that is taught and researched at the college or university level. Disciplines are defined (in part), and recognized by the academic journals in which research is published, and the learned societies and academic departments or faculties to which their practitioners belong.
    */
    academicDiscipline: prefixer('academicDiscipline'),

    /**
    * **[ACT score](http://dbpedia.org/ontology/actScore)** (property)
    * 
    * most recent average ACT scores
    */
    actScore: prefixer('actScore'),

    /**
    * **[address in road](http://dbpedia.org/ontology/addressInRoad)** (property)
    * 
    * A building, organisation or other thing that is located in the road.
    */
    addressInRoad: prefixer('addressInRoad'),

    /**
    * **[head city](http://dbpedia.org/ontology/administrativeHeadCity)** (property)
    * 
    * city where stand the administrative power
    */
    administrativeHeadCity: prefixer('administrativeHeadCity'),

    /**
    * **[alma mater](http://dbpedia.org/ontology/almaMater)** (property)
    * 
    * schools that they attended
    */
    almaMater: prefixer('almaMater'),

    /**
    * **[Alps group](http://dbpedia.org/ontology/alpsGroup)** (property)
    * 
    * the Alps group to which the mountain belongs, according to the SOIUSA classification
    */
    alpsGroup: prefixer('alpsGroup'),

    /**
    * **[Alps main part](http://dbpedia.org/ontology/alpsMainPart)** (property)
    * 
    * the Alps main part to which the mountain belongs, according to the SOIUSA classification
    */
    alpsMainPart: prefixer('alpsMainPart'),

    /**
    * **[Alps major sector](http://dbpedia.org/ontology/alpsMajorSector)** (property)
    * 
    * the Alps major sector to which the mountain belongs, according to the SOIUSA classification
    */
    alpsMajorSector: prefixer('alpsMajorSector'),

    /**
    * **[Alps section](http://dbpedia.org/ontology/alpsSection)** (property)
    * 
    * the Alps section to which the mountain belongs, according to the SOIUSA classification
    */
    alpsSection: prefixer('alpsSection'),

    /**
    * **[Alps subgroup](http://dbpedia.org/ontology/alpsSubgroup)** (property)
    * 
    * the Alps subgroup to which the mountain belongs, according to the SOIUSA classification
    */
    alpsSubgroup: prefixer('alpsSubgroup'),

    /**
    * **[Alps subsection](http://dbpedia.org/ontology/alpsSubsection)** (property)
    * 
    * the Alps subsection to which the mountain belongs, according to the SOIUSA classification
    */
    alpsSubsection: prefixer('alpsSubsection'),

    /**
    * **[Alps supergroup](http://dbpedia.org/ontology/alpsSupergroup)** (property)
    * 
    * the Alps supergroup to which the mountain belongs, according to the SOIUSA classification
    */
    alpsSupergroup: prefixer('alpsSupergroup'),

    /**
    * **[anthem](http://dbpedia.org/ontology/anthem)** (property)
    * 
    * Official song (anthem) of a PopulatedPlace, SportsTeam, School or other
    */
    anthem: prefixer('anthem'),

    /**
    * **[patron (art)](http://dbpedia.org/ontology/artPatron)** (property)
    * 
    * An influential, wealthy person who supported an artist, craftsman, a scholar or a noble.. See also
    */
    artPatron: prefixer('artPatron'),

    /**
    * **[performer](http://dbpedia.org/ontology/artist)** (property)
    * 
    * The performer or creator of the musical work.
    */
    artist: prefixer('artist'),

    /**
    * **[attorney general](http://dbpedia.org/ontology/attorneyGeneral)** (property)
    * 
    * Public attorney
    */
    attorneyGeneral: prefixer('attorneyGeneral'),

    /**
    * **[available smart card](http://dbpedia.org/ontology/availableSmartCard)** (property)
    * 
    * Smartcard for fare payment system for public transit systems that are or will be available at the station.
    */
    availableSmartCard: prefixer('availableSmartCard'),

    /**
    * **[award](http://dbpedia.org/ontology/award)** (property)
    * 
    * Award won by a Person, Musical or other Work, RaceHorse, Building, etc
    */
    award: prefixer('award'),

    /**
    * **[band member](http://dbpedia.org/ontology/bandMember)** (property)
    * 
    * A member of the band.
    */
    bandMember: prefixer('bandMember'),

    /**
    * **[birth place](http://dbpedia.org/ontology/birthPlace)** (property)
    * 
    * where the person was born
    */
    birthPlace: prefixer('birthPlace'),

    /**
    * **[bishopric](http://dbpedia.org/ontology/bishopric)** (property)
    * 
    * A bishopric (diocese or episcopal see) is a district under the supervision of a bishop. It is divided into parishes. Compare with eparchy
    */
    bishopric: prefixer('bishopric'),

    /**
    * **[broadcast network](http://dbpedia.org/ontology/broadcastNetwork)** (property)
    * 
    * The parent broadcast network to which the broadcaster belongs.
    */
    broadcastNetwork: prefixer('broadcastNetwork'),

    /**
    * **[buildingType](http://dbpedia.org/ontology/buildingType)** (property)
    * 
    * Type is too general. We should be able to distinguish types of music from types of architecture
    */
    buildingType: prefixer('buildingType'),

    /**
    * **[career station](http://dbpedia.org/ontology/careerStation)** (property)
    * 
    * this property links to a step in the career of a person, e.g. a soccer player, holding information on the time span, matches and goals he or she achieved at a club.
    */
    careerStation: prefixer('careerStation'),

    /**
    * **[chain](http://dbpedia.org/ontology/chain)** (property)
    * 
    * The chain of Hotels this instance is associated with.
    */
    chain: prefixer('chain'),

    /**
    * **[champion](http://dbpedia.org/ontology/champion)** (property)
    * 
    * winner of a competition
    */
    champion: prefixer('champion'),

    /**
    * **[champion in double](http://dbpedia.org/ontology/championInDouble)** (property)
    * 
    * winner of a competition in the double session (as in tennis)
    */
    championInDouble: prefixer('championInDouble'),

    /**
    * **[champion in double female](http://dbpedia.org/ontology/championInDoubleFemale)** (property)
    * 
    * winner of a competition in the female double session (as in tennis)
    */
    championInDoubleFemale: prefixer('championInDoubleFemale'),

    /**
    * **[champion in double male](http://dbpedia.org/ontology/championInDoubleMale)** (property)
    * 
    * winner of a competition in the male double session (as in tennis)
    */
    championInDoubleMale: prefixer('championInDoubleMale'),

    /**
    * **[champion in mixed double](http://dbpedia.org/ontology/championInMixedDouble)** (property)
    * 
    * winner of a competition in the mixed double session (as in tennis)
    */
    championInMixedDouble: prefixer('championInMixedDouble'),

    /**
    * **[champion in single](http://dbpedia.org/ontology/championInSingle)** (property)
    * 
    * winner of a competition in the single session, to distinguish from the double session (as in tennis)
    */
    championInSingle: prefixer('championInSingle'),

    /**
    * **[champion in single female](http://dbpedia.org/ontology/championInSingleFemale)** (property)
    * 
    * winner of a competition in the single female session, to distinguish from the double session (as in tennis)
    */
    championInSingleFemale: prefixer('championInSingleFemale'),

    /**
    * **[champion in single male](http://dbpedia.org/ontology/championInSingleMale)** (property)
    * 
    * winner of a competition in the single male session, to distinguish from the double session (as in tennis)
    */
    championInSingleMale: prefixer('championInSingleMale'),

    /**
    * **[classis](http://dbpedia.org/ontology/classis)** (property)
    * 
    * the living thing class (from the Latin "classis"), according to the biological taxonomy
    */
    classis: prefixer('classis'),

    /**
    * **[is close to](http://dbpedia.org/ontology/closeTo)** (property)
    * 
    * place close to another place
    */
    closeTo: prefixer('closeTo'),

    /**
    * **[coat of arms image](http://dbpedia.org/ontology/coatOfArms)** (property)
    * 
    * image of the coat of arms (heraldic symbol)
    */
    coatOfArms: prefixer('coatOfArms'),

    /**
    * **[colleague](http://dbpedia.org/ontology/colleague)** (property)
    * 
    * Colleague of a Person or OfficeHolder (not PersonFunction nor CareerStation). Sub-properties include: president, vicePresident, chancellor, viceChancellor, governor, lieutenant. Points to a Person who may have a general "position" (resource) or "title" (literal).
    */
    colleague: prefixer('colleague'),

    /**
    * **[colour](http://dbpedia.org/ontology/colour)** (property)
    * 
    * A colour represented by its entity.
    */
    colour: prefixer('colour'),

    /**
    * **[committee in legislature](http://dbpedia.org/ontology/committeeInLegislature)** (property)
    * 
    * Committee in the legislature (eg.: Committee on Economic and Monetary Affairs of the European Parliament).
    */
    committeeInLegislature: prefixer('committeeInLegislature'),

    /**
    * **[comparable](http://dbpedia.org/ontology/comparable)** (property)
    * 
    * similar, unrelated rockets
    */
    comparable: prefixer('comparable'),

    /**
    * **[compiler](http://dbpedia.org/ontology/compiler)** (property)
    * 
    * For compilation albums: the person or entity responsible for selecting the album's track listing.
    */
    compiler: prefixer('compiler'),

    /**
    * **[computing platform](http://dbpedia.org/ontology/computingPlatform)** (property)
    * 
    * some sort of hardware architecture or software framework, that allows this software to run
    */
    computingPlatform: prefixer('computingPlatform'),

    /**
    * **[connects referenced to](http://dbpedia.org/ontology/connectsReferencedTo)** (property)
    * 
    * connects a referenced resource to another resource. This property is important to connect non-extracted resources to extracted ones
    */
    connectsReferencedTo: prefixer('connectsReferencedTo'),

    /**
    * **[connotation](http://dbpedia.org/ontology/connotation)** (property)
    * 
    * A meaning of a word or phrase that is suggested or implied, as opposed to a denotation, or literal meaning.
    */
    connotation: prefixer('connotation'),

    /**
    * **[construction material](http://dbpedia.org/ontology/constructionMaterial)** (property)
    * 
    * Construction material (eg. concrete, steel, iron, stone, brick, wood).
    */
    constructionMaterial: prefixer('constructionMaterial'),

    /**
    * **[continent](http://dbpedia.org/ontology/continent)** (property)
    * 
    * links a country to the continent it belongs
    */
    continent: prefixer('continent'),

    /**
    * **[costume designer](http://dbpedia.org/ontology/costumeDesigner)** (property)
    * 
    * the person who is responsible for the film costume design
    */
    costumeDesigner: prefixer('costumeDesigner'),

    /**
    * **[country](http://dbpedia.org/ontology/country)** (property)
    * 
    * The country where the thing is located.
    */
    country: prefixer('country'),

    /**
    * **[county](http://dbpedia.org/ontology/county)** (property)
    * 
    * The county where the thing is located.
    */
    county: prefixer('county'),

    /**
    * **[cover artist](http://dbpedia.org/ontology/coverArtist)** (property)
    * 
    * Cover artist
    */
    coverArtist: prefixer('coverArtist'),

    /**
    * **[CPU](http://dbpedia.org/ontology/cpu)** (property)
    * 
    * CPU of an InformationAppliance or VideoGame (which unfortunately is currently under Software)
    */
    cpu: prefixer('cpu'),

    /**
    * **[creator (agent)](http://dbpedia.org/ontology/creator)** (property)
    * 
    * Creator/author of a work. For literal (string) use dc:creator; for object (URL) use creator
    */
    creator: prefixer('creator'),

    /**
    * **[creator of dish](http://dbpedia.org/ontology/creatorOfDish)** (property)
    * 
    * The person that creates (invents) the food (eg. Caesar Cardini is the creator of the Caesar salad).
    */
    creatorOfDish: prefixer('creatorOfDish'),

    /**
    * **[cultivar](http://dbpedia.org/ontology/cultivatedVariety)** (property)
    * 
    * Name of the cultivar (cultivated variety)
    */
    cultivatedVariety: prefixer('cultivatedVariety'),

    /**
    * **[current production](http://dbpedia.org/ontology/currentProduction)** (property)
    * 
    * The current production running in the theatre.
    */
    currentProduction: prefixer('currentProduction'),

    /**
    * **[current team member](http://dbpedia.org/ontology/currentTeamMember)** (property)
    * 
    * A current member of an athletic team.
    */
    currentTeamMember: prefixer('currentTeamMember'),

    /**
    * **[deanery](http://dbpedia.org/ontology/deanery)** (property)
    * 
    * Dioceses and parishes should know which deaneries there are
    */
    deanery: prefixer('deanery'),

    /**
    * **[death place](http://dbpedia.org/ontology/deathPlace)** (property)
    * 
    * The place where the person died.
    */
    deathPlace: prefixer('deathPlace'),

    /**
    * **[debutWork](http://dbpedia.org/ontology/debutWork)** (property)
    * 
    * First work of a person (may be notableWork or not)
    */
    debutWork: prefixer('debutWork'),

    /**
    * **[developer](http://dbpedia.org/ontology/developer)** (property)
    * 
    * Developer of a Work (Artwork, Book, Software) or Building (Hotel, Skyscraper)
    */
    developer: prefixer('developer'),

    /**
    * **[DfE](http://dbpedia.org/ontology/dfE)** (property)
    * 
    * Department for Education (UK) number of a school in England or Wales
    */
    dfE: prefixer('dfE'),

    /**
    * **[diocese](http://dbpedia.org/ontology/diocese)** (property)
    * 
    * A religious administrative body above the parish level
    */
    diocese: prefixer('diocese'),

    /**
    * **[film director](http://dbpedia.org/ontology/director)** (property)
    * 
    * A film director is a person who directs the making of a film.
    */
    director: prefixer('director'),

    /**
    * **[disciple](http://dbpedia.org/ontology/disciple)** (property)
    * 
    * A person who learns from another, especially one who then teaches others..
    */
    disciple: prefixer('disciple'),

    /**
    * **[dubber](http://dbpedia.org/ontology/dubber)** (property)
    * 
    * the person who dubs another person e.g. an actor or a fictional character in movies
    */
    dubber: prefixer('dubber'),

    /**
    * **[east place](http://dbpedia.org/ontology/eastPlace)** (property)
    * 
    * indicates another place situated east.
    */
    eastPlace: prefixer('eastPlace'),

    /**
    * **[element above](http://dbpedia.org/ontology/elementAbove)** (property)
    * 
    * element placed above current element in D.I.Mendeleev's table
    */
    elementAbove: prefixer('elementAbove'),

    /**
    * **[eparchy](http://dbpedia.org/ontology/eparchy)** (property)
    * 
    * Compare with bishopric
    */
    eparchy: prefixer('eparchy'),

    /**
    * **[Footedness](http://dbpedia.org/ontology/footedness)** (property)
    * 
    * a preference to put one's left or right foot forward in surfing, wakeboarding, skateboarding, wakeskating, snowboarding and mountainboarding. The term is sometimes applied to the foot a footballer uses to kick.
    */
    footedness: prefixer('footedness'),

    /**
    * **[format (object)](http://dbpedia.org/ontology/format)** (property)
    * 
    * Format of the resource (as object). Use dct:format for literal, format for object
    */
    format: prefixer('format'),

    /**
    * **[former band member](http://dbpedia.org/ontology/formerBandMember)** (property)
    * 
    * A former member of the band.
    */
    formerBandMember: prefixer('formerBandMember'),

    /**
    * **[former broadcast network](http://dbpedia.org/ontology/formerBroadcastNetwork)** (property)
    * 
    * A former parent broadcast network to which the broadcaster once belonged.
    */
    formerBroadcastNetwork: prefixer('formerBroadcastNetwork'),

    /**
    * **[founded by](http://dbpedia.org/ontology/foundedBy)** (property)
    * 
    * Identifies the founder of the described entity. This can be a person or a organisation for instance.
    */
    foundedBy: prefixer('foundedBy'),

    /**
    * **[founder](http://dbpedia.org/ontology/founder)** (property)
    * 
    * Ein Gr√ºnder oder Gr√ºndungsmitglied einer Organisation, Religion oder eines Ortes.
    */
    founder: prefixer('founder'),

    /**
    * **[funded by](http://dbpedia.org/ontology/fundedBy)** (property)
    * 
    * A organisation financing the research project.
    */
    fundedBy: prefixer('fundedBy'),

    /**
    * **[gallery item](http://dbpedia.org/ontology/galleryItem)** (property)
    * 
    * A file contained in a gallery
    */
    galleryItem: prefixer('galleryItem'),

    /**
    * **[game artist](http://dbpedia.org/ontology/gameArtist)** (property)
    * 
    * A game artist is an artist who creates art for one or more types of games. Game artists are responsible for all of the aspects of game development that call for visual art.
    */
    gameArtist: prefixer('gameArtist'),

    /**
    * **[Gaud√≠ Award](http://dbpedia.org/ontology/gaudiAward)** (property)
    * 
    * Awards of the Catalan Academy of Cinema
    */
    gaudiAward: prefixer('gaudiAward'),

    /**
    * **[genre](http://dbpedia.org/ontology/genre)** (property)
    * 
    * The genre of the thing (music group, film, etc.)
    */
    genre: prefixer('genre'),

    /**
    * **[genus](http://dbpedia.org/ontology/genus)** (property)
    * 
    * A rank in the classification of organisms, below family and above species; a taxon at that rank
    */
    genus: prefixer('genus'),

    /**
    * **[governing body](http://dbpedia.org/ontology/governingBody)** (property)
    * 
    * Body that owns/operates the Place.
    */
    governingBody: prefixer('governingBody'),

    /**
    * **[government type](http://dbpedia.org/ontology/governmentType)** (property)
    * 
    * broadly, the type of structure of its government
    */
    governmentType: prefixer('governmentType'),

    /**
    * **[handedness](http://dbpedia.org/ontology/handedness)** (property)
    * 
    * an attribute of humans defined by their unequal distribution of fine motor skill between the left and right hands.
    */
    handedness: prefixer('handedness'),

    /**
    * **[has inside place](http://dbpedia.org/ontology/hasInsidePlace)** (property)
    * 
    * indicates another place situated inside.
    */
    hasInsidePlace: prefixer('hasInsidePlace'),

    /**
    * **[has outside place](http://dbpedia.org/ontology/hasOutsidePlace)** (property)
    * 
    * indicates another place situated around outside.
    */
    hasOutsidePlace: prefixer('hasOutsidePlace'),

    /**
    * **[variant or variation](http://dbpedia.org/ontology/hasVariant)** (property)
    * 
    * variant or variation, for example all variations of a color
    */
    hasVariant: prefixer('hasVariant'),

    /**
    * **[heritage register](http://dbpedia.org/ontology/heritageRegister)** (property)
    * 
    * registered in a heritage register : inventory of cultural properties, natural and man-made, tangible and intangible, movable and immovable, that are deemed to be of sufficient heritage value to be separately identified and recorded.
    */
    heritageRegister: prefixer('heritageRegister'),

    /**
    * **[highway system](http://dbpedia.org/ontology/highwaySystem)** (property)
    * 
    * the highway system that a route is part of
    */
    highwaySystem: prefixer('highwaySystem'),

    /**
    * **[honours](http://dbpedia.org/ontology/honours)** (property)
    * 
    * Honours bestowed upon a Person, Organization, RaceHorse, etc
    */
    honours: prefixer('honours'),

    /**
    * **[hybrid](http://dbpedia.org/ontology/hybrid)** (property)
    * 
    * Plants from which another plant (or cultivar) has been developed from
    */
    hybrid: prefixer('hybrid'),

    /**
    * **[illustrator](http://dbpedia.org/ontology/illustrator)** (property)
    * 
    * Illustrator (where used throughout and a major feature)
    */
    illustrator: prefixer('illustrator'),

    /**
    * **[influenced](http://dbpedia.org/ontology/influenced)** (property)
    * 
    * The subject influenced the object. inverseOf influencedBy. Subject and object can be Persons or Works (eg ProgrammingLanguage)
    */
    influenced: prefixer('influenced'),

    /**
    * **[influenced by](http://dbpedia.org/ontology/influencedBy)** (property)
    * 
    * The subject was influenced by the object. inverseOf influenced. Subject and object can be Persons or Works (eg ProgrammingLanguage)
    */
    influencedBy: prefixer('influencedBy'),

    /**
    * **[ingredient](http://dbpedia.org/ontology/ingredient)** (property)
    * 
    * Main ingredient used to prepare a specific Food or Beverage. For strings use ingredientName, for objects use ingredient.
    */
    ingredient: prefixer('ingredient'),

    /**
    * **[is route stop](http://dbpedia.org/ontology/isRouteStop)** (property)
    * 
    * indicate a place is a stop on a road.
    */
    isRouteStop: prefixer('isRouteStop'),

    /**
    * **[judge](http://dbpedia.org/ontology/judge)** (property)
    * 
    * leading judge
    */
    judge: prefixer('judge'),

    /**
    * **[jurisdiction](http://dbpedia.org/ontology/jurisdiction)** (property)
    * 
    * Jurisdiction is the practical authority granted to a formally constituted legal body or to a political leader to deal with and make pronouncements on legal matters and, by implication, to administer justice within a defined area of responsibility.
    */
    jurisdiction: prefixer('jurisdiction'),

    /**
    * **[kingdom](http://dbpedia.org/ontology/kingdom)** (property)
    * 
    * In biology, kingdom (Latin: regnum, pl. regna) is a taxonomic rank, which is either the highest rank or in the more recent three-domain system, the rank below domain.
    */
    kingdom: prefixer('kingdom'),

    /**
    * **[known for](http://dbpedia.org/ontology/knownFor)** (property)
    * 
    * Work, historic event, etc that the subject is known for. Applies to Person, Organization, ConcentrationCamp, etc
    */
    knownFor: prefixer('knownFor'),

    /**
    * **[language](http://dbpedia.org/ontology/language)** (property)
    * 
    * Use dc:language for literal, language for object
    */
    language: prefixer('language'),

    /**
    * **[legal form](http://dbpedia.org/ontology/legalForm)** (property)
    * 
    * There are many types of business entity defined in the legal systems of various countries. These include corporations, cooperatives, partnerships, sole traders, limited liability company and other specialized types of organization.
    */
    legalForm: prefixer('legalForm'),

    /**
    * **[literary genre](http://dbpedia.org/ontology/literaryGenre)** (property)
    * 
    * A literary genre is a category of literary composition. Genres may be determined by literary technique, tone, content, or even (as in the case of fiction) length.
    */
    literaryGenre: prefixer('literaryGenre'),

    /**
    * **[location](http://dbpedia.org/ontology/location)** (property)
    * 
    * The location of the thing.
    */
    location: prefixer('location'),

    /**
    * **[location city](http://dbpedia.org/ontology/locationCity)** (property)
    * 
    * City the thing is located.
    */
    locationCity: prefixer('locationCity'),

    /**
    * **[pa≈Ñstwo](http://dbpedia.org/ontology/locationCountry)** (property)
    * 
    * Country the thing is located.
    */
    locationCountry: prefixer('locationCountry'),

    /**
    * **[lyrics](http://dbpedia.org/ontology/lyrics)** (property)
    * 
    * Creator of the text of a MusicalWork, eg Musical, Opera or Song
    */
    lyrics: prefixer('lyrics'),

    /**
    * **[makeup artist](http://dbpedia.org/ontology/makeupArtist)** (property)
    * 
    * the person who is responsible for the actors makeup
    */
    makeupArtist: prefixer('makeupArtist'),

    /**
    * **[map](http://dbpedia.org/ontology/map)** (property)
    * 
    * A map of the place.
    */
    map: prefixer('map'),

    /**
    * **[media item](http://dbpedia.org/ontology/mediaItem)** (property)
    * 
    * A media file (such as audio, video or images) associated with the subject
    */
    mediaItem: prefixer('mediaItem'),

    /**
    * **[media type](http://dbpedia.org/ontology/mediaType)** (property)
    * 
    * Print / On-line (then binding types etc. if relevant)
    */
    mediaType: prefixer('mediaType'),

    /**
    * **[meeting road](http://dbpedia.org/ontology/meetingRoad)** (property)
    * 
    * A road that crosses another road at the junction.
    */
    meetingRoad: prefixer('meetingRoad'),

    /**
    * **[mentor](http://dbpedia.org/ontology/mentor)** (property)
    * 
    * A wise and trusted counselor or teacher
    */
    mentor: prefixer('mentor'),

    /**
    * **[military branch](http://dbpedia.org/ontology/militaryBranch)** (property)
    * 
    * The service branch (Army, Navy, etc.) a person is part of.
    */
    militaryBranch: prefixer('militaryBranch'),

    /**
    * **[military rank](http://dbpedia.org/ontology/militaryRank)** (property)
    * 
    * The highest rank achieved by a person.
    */
    militaryRank: prefixer('militaryRank'),

    /**
    * **[military unit](http://dbpedia.org/ontology/militaryUnit)** (property)
    * 
    * For persons who are not notable as commanding officers, the unit (company, battalion, regiment, etc.) in which they served.
    */
    militaryUnit: prefixer('militaryUnit'),

    /**
    * **[movement](http://dbpedia.org/ontology/movement)** (property)
    * 
    * artistic movement or school with which artist is associated
    */
    movement: prefixer('movement'),

    /**
    * **[museumType](http://dbpedia.org/ontology/museumType)** (property)
    * 
    * This property has been added  because 'buildingType' is much more about the place, whereas 'museumType' is about the way the place is being (or:was) used
    */
    museumType: prefixer('museumType'),

    /**
    * **[musicType](http://dbpedia.org/ontology/musicType)** (property)
    * 
    * Type is too general. We should be able to distinguish types of music from types of architecture
    */
    musicType: prefixer('musicType'),

    /**
    * **[non-fiction subject](http://dbpedia.org/ontology/nonFictionSubject)** (property)
    * 
    * The subject of a non-fiction book (e.g.: History, Biography, Cookbook, Climate change, ...).
    */
    nonFictionSubject: prefixer('nonFictionSubject'),

    /**
    * **[north-east place](http://dbpedia.org/ontology/northEastPlace)** (property)
    * 
    * indicates another place situated north-east.
    */
    northEastPlace: prefixer('northEastPlace'),

    /**
    * **[north place](http://dbpedia.org/ontology/northPlace)** (property)
    * 
    * indicates another place situated north.
    */
    northPlace: prefixer('northPlace'),

    /**
    * **[north-west place](http://dbpedia.org/ontology/northWestPlace)** (property)
    * 
    * indicates another place situated north-west.
    */
    northWestPlace: prefixer('northWestPlace'),

    /**
    * **[notable work](http://dbpedia.org/ontology/notableWork)** (property)
    * 
    * Notable work created by the subject (eg Writer, Artist, Engineer) or about the subject (eg ConcentrationCamp)
    */
    notableWork: prefixer('notableWork'),

    /**
    * **[NRHP type](http://dbpedia.org/ontology/nrhpType)** (property)
    * 
    * Type of historic place as defined by the US National Park Service. For instance National Historic Landmark, National Monument or National Battlefield.
    */
    nrhpType: prefixer('nrhpType'),

    /**
    * **[operator](http://dbpedia.org/ontology/operator)** (property)
    * 
    * Organisation or City who is the operator of an ArchitecturalStructure, PublicTransitSystem, ConcentrationCamp, etc. Not to confuse with builder, owner or maintainer.
    * Domain is unrestricted since Organization is Agent but City is Place. Range is unrestricted since anything can be operated.
    */
    operator: prefixer('operator'),

    /**
    * **[opponents](http://dbpedia.org/ontology/opponents)** (property)
    * 
    * "opponent in a military conflict, an organisation, country, or group of countries. "
    */
    opponents: prefixer('opponents'),

    /**
    * **[organ](http://dbpedia.org/ontology/organ)** (property)
    * 
    * Name and/or description of the organ
    */
    organ: prefixer('organ'),

    /**
    * **[organ system](http://dbpedia.org/ontology/organSystem)** (property)
    * 
    * the organ system that a anatomical structure belongs to
    */
    organSystem: prefixer('organSystem'),

    /**
    * **[organisation member](http://dbpedia.org/ontology/organisationMember)** (property)
    * 
    * Identify the members of an organisation.
    */
    organisationMember: prefixer('organisationMember'),

    /**
    * **[original language](http://dbpedia.org/ontology/originalLanguage)** (property)
    * 
    * The original language of the work.
    */
    originalLanguage: prefixer('originalLanguage'),

    /**
    * **[owner](http://dbpedia.org/ontology/owner)** (property)
    * 
    * Used as if meaning: owned by, has as its owner
    */
    owner: prefixer('owner'),

    /**
    * **[owns](http://dbpedia.org/ontology/owns)** (property)
    * 
    * Used as if meaning: has property rights over
    */
    owns: prefixer('owns'),

    /**
    * **[phylum](http://dbpedia.org/ontology/phylum)** (property)
    * 
    * A rank in the classification of organisms, below kingdom and above class; also called a division, especially in describing plants; a taxon at that rank.
    */
    phylum: prefixer('phylum'),

    /**
    * **[picture](http://dbpedia.org/ontology/picture)** (property)
    * 
    * A picture of a thing.
    */
    picture: prefixer('picture'),

    /**
    * **[place of burial](http://dbpedia.org/ontology/placeOfBurial)** (property)
    * 
    * The place where the person has been buried.
    */
    placeOfBurial: prefixer('placeOfBurial'),

    /**
    * **[place of worship](http://dbpedia.org/ontology/placeOfWorship)** (property)
    * 
    * A religious administrative body needs to know which places of worship it
    */
    placeOfWorship: prefixer('placeOfWorship'),

    /**
    * **[player in team](http://dbpedia.org/ontology/playerInTeam)** (property)
    * 
    * A person playing for a sports team. inverseOf team
    */
    playerInTeam: prefixer('playerInTeam'),

    /**
    * **[political party in legislature](http://dbpedia.org/ontology/politicalPartyInLegislature)** (property)
    * 
    * Political party in the legislature (eg.: European People's Party in the European Parliament).
    */
    politicalPartyInLegislature: prefixer('politicalPartyInLegislature'),

    /**
    * **[political party of leader](http://dbpedia.org/ontology/politicalPartyOfLeader)** (property)
    * 
    * The Political party of leader.
    */
    politicalPartyOfLeader: prefixer('politicalPartyOfLeader'),

    /**
    * **[population place](http://dbpedia.org/ontology/populationPlace)** (property)
    * 
    * a place were members of an ethnic group are living
    */
    populationPlace: prefixer('populationPlace'),

    /**
    * **[premiere place](http://dbpedia.org/ontology/premierePlace)** (property)
    * 
    * The theatre and/or city the play was first performed in.
    */
    premierePlace: prefixer('premierePlace'),

    /**
    * **[principal](http://dbpedia.org/ontology/principal)** (property)
    * 
    * Principal of an educational institution (school)
    */
    principal: prefixer('principal'),

    /**
    * **[producer](http://dbpedia.org/ontology/producer)** (property)
    * 
    * The producer of the creative work.
    */
    producer: prefixer('producer'),

    /**
    * **[production company](http://dbpedia.org/ontology/productionCompany)** (property)
    * 
    * the company that produced the work e.g. Film, MusicalWork, Software
    */
    productionCompany: prefixer('productionCompany'),

    /**
    * **[programme format](http://dbpedia.org/ontology/programmeFormat)** (property)
    * 
    * The programming format describes the overall content broadcast on a radio or television station.
    */
    programmeFormat: prefixer('programmeFormat'),

    /**
    * **[project coordinator](http://dbpedia.org/ontology/projectCoordinator)** (property)
    * 
    * The coordinating organisation of the project.
    */
    projectCoordinator: prefixer('projectCoordinator'),

    /**
    * **[project participant](http://dbpedia.org/ontology/projectParticipant)** (property)
    * 
    * A participating organisation of the project.
    */
    projectParticipant: prefixer('projectParticipant'),

    /**
    * **[publisher](http://dbpedia.org/ontology/publisher)** (property)
    * 
    * Publisher of a work. For literal (string) use dc:publisher; for object (URL) use publisher
    */
    publisher: prefixer('publisher'),

    /**
    * **[race result](http://dbpedia.org/ontology/raceResult)** (property)
    * 
    * Result of one racer in a sport competition
    */
    raceResult: prefixer('raceResult'),

    /**
    * **[railway line using tunnel](http://dbpedia.org/ontology/railwayLineUsingTunnel)** (property)
    * 
    * Railway line that is using the tunnel.
    */
    railwayLineUsingTunnel: prefixer('railwayLineUsingTunnel'),

    /**
    * **[regent of](http://dbpedia.org/ontology/regentOf)** (property)
    * 
    * Subject has served as the regent of another monarch
    */
    regentOf: prefixer('regentOf'),

    /**
    * **[region](http://dbpedia.org/ontology/region)** (property)
    * 
    * The regin where the thing is located or is connected to.
    */
    region: prefixer('region'),

    /**
    * **[related functions](http://dbpedia.org/ontology/relatedFunctions)** (property)
    * 
    * This property is to accommodate the list field that contains a list of related personFunctions a person holds or has held
    */
    relatedFunctions: prefixer('relatedFunctions'),

    /**
    * **[related places](http://dbpedia.org/ontology/relatedPlaces)** (property)
    * 
    * This property is to accommodate the list field that contains a list of, e.g., monuments in the same town
    */
    relatedPlaces: prefixer('relatedPlaces'),

    /**
    * **[release location](http://dbpedia.org/ontology/releaseLocation)** (property)
    * 
    * Usually used with releaseDate, particularly for Films. Often there can be several pairs so our modeling is not precise here...
    */
    releaseLocation: prefixer('releaseLocation'),

    /**
    * **[residence](http://dbpedia.org/ontology/residence)** (property)
    * 
    * Place of residence of a person.
    */
    residence: prefixer('residence'),

    /**
    * **[resolution](http://dbpedia.org/ontology/resolution)** (property)
    * 
    * Native Resolution
    */
    resolution: prefixer('resolution'),

    /**
    * **[rocket function](http://dbpedia.org/ontology/rocketFunction)** (property)
    * 
    * purpose of the rocket
    */
    rocketFunction: prefixer('rocketFunction'),

    /**
    * **[route activity](http://dbpedia.org/ontology/routeActivity)** (property)
    * 
    * details of the activity for a road.
    */
    routeActivity: prefixer('routeActivity'),

    /**
    * **[route end](http://dbpedia.org/ontology/routeEnd)** (property)
    * 
    * End of the route. This is where the route ends and, for U.S. roads, is either at the northern terminus or eastern terminus.
    */
    routeEnd: prefixer('routeEnd'),

    /**
    * **[route end location](http://dbpedia.org/ontology/routeEndLocation)** (property)
    * 
    * The end location of the route.
    */
    routeEndLocation: prefixer('routeEndLocation'),

    /**
    * **[route junction](http://dbpedia.org/ontology/routeJunction)** (property)
    * 
    * A junction or cross to another route.
    */
    routeJunction: prefixer('routeJunction'),

    /**
    * **[line](http://dbpedia.org/ontology/routeLine)** (property)
    * 
    * line of a stop on a route.
    */
    routeLine: prefixer('routeLine'),

    /**
    * **[route next stop](http://dbpedia.org/ontology/routeNext)** (property)
    * 
    * next stop on a route.
    */
    routeNext: prefixer('routeNext'),

    /**
    * **[route previous stop](http://dbpedia.org/ontology/routePrevious)** (property)
    * 
    * previous stop on a route.
    */
    routePrevious: prefixer('routePrevious'),

    /**
    * **[route start](http://dbpedia.org/ontology/routeStart)** (property)
    * 
    * Start of the route. This is where the route begins and, for U.S. roads, is either at the southern terminus or western terminus.
    */
    routeStart: prefixer('routeStart'),

    /**
    * **[route start location](http://dbpedia.org/ontology/routeStartLocation)** (property)
    * 
    * The start location of the route.
    */
    routeStartLocation: prefixer('routeStartLocation'),

    /**
    * **[sales](http://dbpedia.org/ontology/sales)** (property)
    * 
    * This property holds an intermediate node of the type Sales.
    */
    sales: prefixer('sales'),

    /**
    * **[SAT score](http://dbpedia.org/ontology/satScore)** (property)
    * 
    * most recent average SAT scores
    */
    satScore: prefixer('satScore'),

    /**
    * **[school](http://dbpedia.org/ontology/school)** (property)
    * 
    * school a person goes or went to
    */
    school: prefixer('school'),

    /**
    * **[selection](http://dbpedia.org/ontology/selection)** (property)
    * 
    * when (or in which project) the person was selected to train as an astronaut
    */
    selection: prefixer('selection'),

    /**
    * **[serving railway line](http://dbpedia.org/ontology/servingRailwayLine)** (property)
    * 
    * Railway services that serve the station.
    */
    servingRailwayLine: prefixer('servingRailwayLine'),

    /**
    * **[set designer](http://dbpedia.org/ontology/setDesigner)** (property)
    * 
    * the person who is responsible for the film set design
    */
    setDesigner: prefixer('setDesigner'),

    /**
    * **[significant project](http://dbpedia.org/ontology/significantProject)** (property)
    * 
    * A siginificant artifact constructed by the person.
    */
    significantProject: prefixer('significantProject'),

    /**
    * **[SIMC code](http://dbpedia.org/ontology/simcCode)** (property)
    * 
    * indexing code used by the Polish National Official Register of the Territorial Division of the Country (TERYT) to identify various entities
    */
    simcCode: prefixer('simcCode'),

    /**
    * **[solicitor general](http://dbpedia.org/ontology/solicitorGeneral)** (property)
    * 
    * high-ranking solicitor
    */
    solicitorGeneral: prefixer('solicitorGeneral'),

    /**
    * **[sound recording](http://dbpedia.org/ontology/soundRecording)** (property)
    * 
    * Sound recording somehow related to the subject
    */
    soundRecording: prefixer('soundRecording'),

    /**
    * **[south-east place](http://dbpedia.org/ontology/southEastPlace)** (property)
    * 
    * indicates another place situated south-east.
    */
    southEastPlace: prefixer('southEastPlace'),

    /**
    * **[south place](http://dbpedia.org/ontology/southPlace)** (property)
    * 
    * indicates another place situated south.
    */
    southPlace: prefixer('southPlace'),

    /**
    * **[south-west place](http://dbpedia.org/ontology/southWestPlace)** (property)
    * 
    * indicates another place situated south-west.
    */
    southWestPlace: prefixer('southWestPlace'),

    /**
    * **[spacestation](http://dbpedia.org/ontology/spacestation)** (property)
    * 
    * space station that has been visited during a space mission
    */
    spacestation: prefixer('spacestation'),

    /**
    * **[special effects](http://dbpedia.org/ontology/specialEffects)** (property)
    * 
    * the person who is responsible for the film special effects
    */
    specialEffects: prefixer('specialEffects'),

    /**
    * **[sport country](http://dbpedia.org/ontology/sportCountry)** (property)
    * 
    * The country, for which the athlete is participating in championships
    */
    sportCountry: prefixer('sportCountry'),

    /**
    * **[sport discipline](http://dbpedia.org/ontology/sportDiscipline)** (property)
    * 
    * the sport discipline the athlete practices, e.g. Diving, or that a board member of a sporting club is focussing at
    */
    sportDiscipline: prefixer('sportDiscipline'),

    /**
    * **[sport specialty](http://dbpedia.org/ontology/sportSpecialty)** (property)
    * 
    * the sport specialty the athlete practices, e.g. 'Ring' for a men's artistic gymnastics athlete
    */
    sportSpecialty: prefixer('sportSpecialty'),

    /**
    * **[spouse](http://dbpedia.org/ontology/spouse)** (property)
    * 
    * the person they are married to
    */
    spouse: prefixer('spouse'),

    /**
    * **[sub-classis](http://dbpedia.org/ontology/subClassis)** (property)
    * 
    * a subdivision within a Species classis
    */
    subClassis: prefixer('subClassis'),

    /**
    * **[subgenus](http://dbpedia.org/ontology/subGenus)** (property)
    * 
    * A rank in the classification of organisms, below genus ; a taxon at that rank
    */
    subGenus: prefixer('subGenus'),

    /**
    * **[system of law](http://dbpedia.org/ontology/systemOfLaw)** (property)
    * 
    * A referral to the relevant system of law
    */
    systemOfLaw: prefixer('systemOfLaw'),

    /**
    * **[taoiseach](http://dbpedia.org/ontology/taoiseach)** (property)
    * 
    * head of government of Ireland
    */
    taoiseach: prefixer('taoiseach'),

    /**
    * **[TERYT code](http://dbpedia.org/ontology/terytCode)** (property)
    * 
    * indexing code used by the Polish National Official Register of the Territorial Division of the Country (TERYT) to identify various entities
    */
    terytCode: prefixer('terytCode'),

    /**
    * **[thumbnail](http://dbpedia.org/ontology/thumbnail)** (property)
    * 
    * Reserved for DBpedia.
    */
    thumbnail: prefixer('thumbnail'),

    /**
    * **[translator](http://dbpedia.org/ontology/translator)** (property)
    * 
    * Translator(s), if original not in English
    */
    translator: prefixer('translator'),

    /**
    * **[type of electrification](http://dbpedia.org/ontology/typeOfElectrification)** (property)
    * 
    * Electrification system (e.g. Third rail, Overhead catenary).
    */
    typeOfElectrification: prefixer('typeOfElectrification'),

    /**
    * **[unique reference number (URN)](http://dbpedia.org/ontology/uRN)** (property)
    * 
    * DfE unique reference number of a school in England or Wales
    */
    uRN: prefixer('uRN'),

    /**
    * **[university](http://dbpedia.org/ontology/university)** (property)
    * 
    * university a person goes or went to.
    */
    university: prefixer('university'),

    /**
    * **[used in war](http://dbpedia.org/ontology/usedInWar)** (property)
    * 
    * wars that were typical for the usage of a weapon
    */
    usedInWar: prefixer('usedInWar'),

    /**
    * **[variant or variation](http://dbpedia.org/ontology/variantOf)** (property)
    * 
    * variant or variation of something, for example the variant of a car
    */
    variantOf: prefixer('variantOf'),

    /**
    * **[vehicle](http://dbpedia.org/ontology/vehicle)** (property)
    * 
    * vehicle that uses a specific automobile platform
    */
    vehicle: prefixer('vehicle'),

    /**
    * **[victim (resource)](http://dbpedia.org/ontology/victim)** (property)
    * 
    * Specific (eg notable) person, or specific class of people (eg Romani) that are victim of a ConcentrationCamp, Criminal, SerialKiller, or some other atrocity
    */
    victim: prefixer('victim'),

    /**
    * **[voice](http://dbpedia.org/ontology/voice)** (property)
    * 
    * Voice artist used in a TelevisionShow, Movie, or to sound the voice of a FictionalCharacter
    */
    voice: prefixer('voice'),

    /**
    * **[voice type](http://dbpedia.org/ontology/voiceType)** (property)
    * 
    * voice type of a singer or an actor
    */
    voiceType: prefixer('voiceType'),

    /**
    * **[waterway through tunnel](http://dbpedia.org/ontology/waterwayThroughTunnel)** (property)
    * 
    * Waterway that goes through the tunnel.
    */
    waterwayThroughTunnel: prefixer('waterwayThroughTunnel'),

    /**
    * **[webcast](http://dbpedia.org/ontology/webcast)** (property)
    * 
    * The URL to the webcast of the Thing.
    */
    webcast: prefixer('webcast'),

    /**
    * **[west place](http://dbpedia.org/ontology/westPlace)** (property)
    * 
    * indicates another place situated west.
    */
    westPlace: prefixer('westPlace'),

    /**
    * **[Wikipage disambiguates](http://dbpedia.org/ontology/wikiPageDisambiguates)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageDisambiguates: prefixer('wikiPageDisambiguates'),

    /**
    * **[Link to the Wikipage edit URL](http://dbpedia.org/ontology/wikiPageEditLink)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageEditLink: prefixer('wikiPageEditLink'),

    /**
    * **[Link from a Wikipage to an external page](http://dbpedia.org/ontology/wikiPageExternalLink)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageExternalLink: prefixer('wikiPageExternalLink'),

    /**
    * **[Link to the Wikipage history URL](http://dbpedia.org/ontology/wikiPageHistoryLink)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageHistoryLink: prefixer('wikiPageHistoryLink'),

    /**
    * **[Link from a Wikipage to a Wikipage in a different language about the same or a related subject.](http://dbpedia.org/ontology/wikiPageInterLanguageLink)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageInterLanguageLink: prefixer('wikiPageInterLanguageLink'),

    /**
    * **[Wikipage redirect](http://dbpedia.org/ontology/wikiPageRedirects)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageRedirects: prefixer('wikiPageRedirects'),

    /**
    * **[Link to the Wikipage revision URL](http://dbpedia.org/ontology/wikiPageRevisionLink)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageRevisionLink: prefixer('wikiPageRevisionLink'),

    /**
    * **[Link from a Wikipage to another Wikipage](http://dbpedia.org/ontology/wikiPageWikiLink)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageWikiLink: prefixer('wikiPageWikiLink'),

    /**
    * **[Text used to link from a Wikipage to another Wikipage](http://dbpedia.org/ontology/wikiPageWikiLinkText)** (property)
    * 
    * Reserved for DBpedia.
    */
    wikiPageWikiLinkText: prefixer('wikiPageWikiLinkText'),

    /**
    * **[Wikidata IRI slit](http://dbpedia.org/ontology/wikidataSplitIri)** (property)
    * 
    * is used to denote splitting of a Wikidata IRI to one or more IRIs
    */
    wikidataSplitIri: prefixer('wikidataSplitIri'),

    /**
    * **[WoRMS](http://dbpedia.org/ontology/woRMS)** (property)
    * 
    * World Register of Marine Species
    */
    woRMS: prefixer('woRMS'),

    /**
    * **[zodiac sign](http://dbpedia.org/ontology/zodiacSign)** (property)
    * 
    * Zodiac Sign. Applies to persons, planets, etc
    */
    zodiacSign: prefixer('zodiacSign'),

  
  };

export default dbo

