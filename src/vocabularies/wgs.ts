// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('http://www.w3.org/2003/01/geo/wgs84_pos#');

/**
 * [wgs](http://www.w3.org/2003/01/geo/wgs84_pos#})
 */
const wgs = {
  /**
    * **[point](http://www.w3.org/2003/01/geo/wgs84_pos#Point)** (class)
    * 
    * 
    * Uniquely identified by lat/long/alt. i.e.
    * 
    * spaciallyIntersects(P1, P2) :- lat(P1, LAT), long(P1, LONG), alt(P1, ALT),
    * lat(P2, LAT), long(P2, LONG), alt(P2, ALT).
    * 
    * sameThing(P1, P2) :- type(P1, Point), type(P2, Point), spaciallyIntersects(P1, P2).
    * 
    */
    Point: prefixer('Point'),

    /**
    * **[SpatialThing](http://www.w3.org/2003/01/geo/wgs84_pos#SpatialThing)** (class)
    * 
    * Anything with spatial extent, i.e. size, shape, or position.
    * e.g. people, places, bowling balls, as well as abstract areas like cubes.
    * 
    */
    SpatialThing: prefixer('SpatialThing'),

    /**
    * **[altitude](http://www.w3.org/2003/01/geo/wgs84_pos#alt)** (property)
    * 
    * The WGS84 altitude of a SpatialThing (decimal meters
    * above the local reference ellipsoid).
    */
    alt: prefixer('alt'),

    /**
    * **[latitude](http://www.w3.org/2003/01/geo/wgs84_pos#lat)** (property)
    * 
    * The WGS84 latitude of a SpatialThing (decimal degrees).
    */
    lat: prefixer('lat'),

    /**
    * **[lat/long](http://www.w3.org/2003/01/geo/wgs84_pos#lat_long)** (property)
    * 
    * A comma-separated representation of a latitude, longitude coordinate.
    */
    lat_long: prefixer('lat_long'),

    /**
    * **[location](http://www.w3.org/2003/01/geo/wgs84_pos#location)** (property)
    * 
    * The relation between something and the point,
    * or other geometrical thing in space, where it is.  For example, the realtionship between
    * a radio tower and a Point with a given lat and long.
    * Or a relationship between a park and its outline as a closed arc of points, or a road and
    * its location as a arc (a sequence of points).
    * Clearly in practice there will be limit to the accuracy of any such statement, but one would expect
    * an accuracy appropriate for the size of the object and uses such as mapping .
    * 
    */
    location: prefixer('location'),

    /**
    * **[longitude](http://www.w3.org/2003/01/geo/wgs84_pos#long)** (property)
    * 
    * The WGS84 longitude of a SpatialThing (decimal degrees).
    */
    long: prefixer('long'),

  
  };

export default wgs

