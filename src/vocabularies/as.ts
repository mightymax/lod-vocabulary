// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('https://www.w3.org/ns/activitystreams#');

/**
 * [as](https://www.w3.org/ns/activitystreams#})
 */
const as = {
  /**
    * **[OrderedItems](https://www.w3.org/ns/activitystreams#OrderedItems)** (class)
    * 
    * A rdf:List variant for Objects and Links
    */
    OrderedItems: prefixer('OrderedItems'),

    /**
    * **[Accept](https://www.w3.org/ns/activitystreams#Accept)** (class)
    * 
    * Actor accepts the Object
    */
    Accept: prefixer('Accept'),

    /**
    * **[Activity](https://www.w3.org/ns/activitystreams#Activity)** (class)
    * 
    * An Object representing some form of Action that has been taken
    */
    Activity: prefixer('Activity'),

    /**
    * **[Add](https://www.w3.org/ns/activitystreams#Add)** (class)
    * 
    * To Add an Object or Link to Something
    */
    Add: prefixer('Add'),

    /**
    * **[Announce](https://www.w3.org/ns/activitystreams#Announce)** (class)
    * 
    * Actor announces the object to the target
    */
    Announce: prefixer('Announce'),

    /**
    * **[Application](https://www.w3.org/ns/activitystreams#Application)** (class)
    * 
    * Represents a software application of any sort
    */
    Application: prefixer('Application'),

    /**
    * **[Arrive](https://www.w3.org/ns/activitystreams#Arrive)** (class)
    * 
    * To Arrive Somewhere (can be used, for instance, to indicate that a particular entity is currently located somewhere, e.g. a "check-in")
    */
    Arrive: prefixer('Arrive'),

    /**
    * **[IntransitiveActivity](https://www.w3.org/ns/activitystreams#IntransitiveActivity)** (class)
    * 
    * An Activity that has no direct object
    */
    IntransitiveActivity: prefixer('IntransitiveActivity'),

    /**
    * **[Article](https://www.w3.org/ns/activitystreams#Article)** (class)
    * 
    * A written work. Typically several paragraphs long. For example, a blog post or a news article.
    */
    Article: prefixer('Article'),

    /**
    * **[Audio](https://www.w3.org/ns/activitystreams#Audio)** (class)
    * 
    * An audio file
    */
    Audio: prefixer('Audio'),

    /**
    * **[Document](https://www.w3.org/ns/activitystreams#Document)** (class)
    * 
    * Represents a digital document/file of any sort
    */
    Document: prefixer('Document'),

    /**
    * **[Ignore](https://www.w3.org/ns/activitystreams#Ignore)** (class)
    * 
    * Actor is ignoring the Object
    */
    Ignore: prefixer('Ignore'),

    /**
    * **[Collection](https://www.w3.org/ns/activitystreams#Collection)** (class)
    * 
    * An ordered or unordered collection of Objects or Links
    */
    Collection: prefixer('Collection'),

    /**
    * **[CollectionPage](https://www.w3.org/ns/activitystreams#CollectionPage)** (class)
    * 
    * A subset of items from a Collection
    */
    CollectionPage: prefixer('CollectionPage'),

    /**
    * **[Create](https://www.w3.org/ns/activitystreams#Create)** (class)
    * 
    * To Create Something
    */
    Create: prefixer('Create'),

    /**
    * **[Delete](https://www.w3.org/ns/activitystreams#Delete)** (class)
    * 
    * To Delete Something
    */
    Delete: prefixer('Delete'),

    /**
    * **[Dislike](https://www.w3.org/ns/activitystreams#Dislike)** (class)
    * 
    * The actor dislikes the object
    */
    Dislike: prefixer('Dislike'),

    /**
    * **[Event](https://www.w3.org/ns/activitystreams#Event)** (class)
    * 
    * An Event of any kind
    */
    Event: prefixer('Event'),

    /**
    * **[Flag](https://www.w3.org/ns/activitystreams#Flag)** (class)
    * 
    * To flag something (e.g. flag as inappropriate, flag as spam, etc)
    */
    Flag: prefixer('Flag'),

    /**
    * **[Follow](https://www.w3.org/ns/activitystreams#Follow)** (class)
    * 
    * To Express Interest in Something
    */
    Follow: prefixer('Follow'),

    /**
    * **[Group](https://www.w3.org/ns/activitystreams#Group)** (class)
    * 
    * A Group of any kind.
    */
    Group: prefixer('Group'),

    /**
    * **[Image](https://www.w3.org/ns/activitystreams#Image)** (class)
    * 
    * An Image file
    */
    Image: prefixer('Image'),

    /**
    * **[Invite](https://www.w3.org/ns/activitystreams#Invite)** (class)
    * 
    * To invite someone or something to something
    */
    Invite: prefixer('Invite'),

    /**
    * **[Offer](https://www.w3.org/ns/activitystreams#Offer)** (class)
    * 
    * To Offer something to someone or something
    */
    Offer: prefixer('Offer'),

    /**
    * **[Join](https://www.w3.org/ns/activitystreams#Join)** (class)
    * 
    * To Join Something
    */
    Join: prefixer('Join'),

    /**
    * **[Leave](https://www.w3.org/ns/activitystreams#Leave)** (class)
    * 
    * To Leave Something
    */
    Leave: prefixer('Leave'),

    /**
    * **[Like](https://www.w3.org/ns/activitystreams#Like)** (class)
    * 
    * To Like Something
    */
    Like: prefixer('Like'),

    /**
    * **[Link](https://www.w3.org/ns/activitystreams#Link)** (class)
    * 
    * Represents a qualified reference to another resource. Patterned after the RFC5988 Web Linking Model
    */
    Link: prefixer('Link'),

    /**
    * **[Listen](https://www.w3.org/ns/activitystreams#Listen)** (class)
    * 
    * The actor listened to the object
    */
    Listen: prefixer('Listen'),

    /**
    * **[Mention](https://www.w3.org/ns/activitystreams#Mention)** (class)
    * 
    * A specialized Link that represents an @mention
    */
    Mention: prefixer('Mention'),

    /**
    * **[Move](https://www.w3.org/ns/activitystreams#Move)** (class)
    * 
    * The actor is moving the object. The target specifies where the object is moving to. The origin specifies where the object is moving from.
    */
    Move: prefixer('Move'),

    /**
    * **[Note](https://www.w3.org/ns/activitystreams#Note)** (class)
    * 
    * A Short note, typically less than a single paragraph. A "tweet" is an example, or a "status update"
    */
    Note: prefixer('Note'),

    /**
    * **[OrderedCollection](https://www.w3.org/ns/activitystreams#OrderedCollection)** (class)
    * 
    * A variation of Collection in which items are strictly ordered
    */
    OrderedCollection: prefixer('OrderedCollection'),

    /**
    * **[OrderedCollectionPage](https://www.w3.org/ns/activitystreams#OrderedCollectionPage)** (class)
    * 
    * An ordered subset of items from an OrderedCollection
    */
    OrderedCollectionPage: prefixer('OrderedCollectionPage'),

    /**
    * **[Organization](https://www.w3.org/ns/activitystreams#Organization)** (class)
    * 
    * An Organization
    */
    Organization: prefixer('Organization'),

    /**
    * **[Page](https://www.w3.org/ns/activitystreams#Page)** (class)
    * 
    * A Web Page
    */
    Page: prefixer('Page'),

    /**
    * **[Person](https://www.w3.org/ns/activitystreams#Person)** (class)
    * 
    * A Person
    */
    Person: prefixer('Person'),

    /**
    * **[Place](https://www.w3.org/ns/activitystreams#Place)** (class)
    * 
    * A physical or logical location
    */
    Place: prefixer('Place'),

    /**
    * **[Profile](https://www.w3.org/ns/activitystreams#Profile)** (class)
    * 
    * A Profile Document
    */
    Profile: prefixer('Profile'),

    /**
    * **[Question](https://www.w3.org/ns/activitystreams#Question)** (class)
    * 
    * A question of any sort.
    */
    Question: prefixer('Question'),

    /**
    * **[Read](https://www.w3.org/ns/activitystreams#Read)** (class)
    * 
    * The actor read the object
    */
    Read: prefixer('Read'),

    /**
    * **[Reject](https://www.w3.org/ns/activitystreams#Reject)** (class)
    * 
    * Actor rejects the Object
    */
    Reject: prefixer('Reject'),

    /**
    * **[Relationship](https://www.w3.org/ns/activitystreams#Relationship)** (class)
    * 
    * Represents a Social Graph relationship between two Individuals (indicated by the 'a' and 'b' properties)
    */
    Relationship: prefixer('Relationship'),

    /**
    * **[Remove](https://www.w3.org/ns/activitystreams#Remove)** (class)
    * 
    * To Remove Something
    */
    Remove: prefixer('Remove'),

    /**
    * **[Service](https://www.w3.org/ns/activitystreams#Service)** (class)
    * 
    * A service provided by some entity
    */
    Service: prefixer('Service'),

    /**
    * **[accuracy](https://www.w3.org/ns/activitystreams#accuracy)** (property)
    * 
    * Specifies the accuracy around the point established by the longitude and latitude
    */
    accuracy: prefixer('accuracy'),

    /**
    * **[TentativeAccept](https://www.w3.org/ns/activitystreams#TentativeAccept)** (class)
    * 
    * Actor tentatively accepts the Object
    */
    TentativeAccept: prefixer('TentativeAccept'),

    /**
    * **[altitude](https://www.w3.org/ns/activitystreams#altitude)** (property)
    * 
    * The altitude of a place
    */
    altitude: prefixer('altitude'),

    /**
    * **[TentativeReject](https://www.w3.org/ns/activitystreams#TentativeReject)** (class)
    * 
    * Actor tentatively rejects the object
    */
    TentativeReject: prefixer('TentativeReject'),

    /**
    * **[content](https://www.w3.org/ns/activitystreams#content)** (property)
    * 
    * The content of the object.
    */
    content: prefixer('content'),

    /**
    * **[Tombstone](https://www.w3.org/ns/activitystreams#Tombstone)** (class)
    * 
    * A placeholder for a deleted object
    */
    Tombstone: prefixer('Tombstone'),

    /**
    * **[deleted](https://www.w3.org/ns/activitystreams#deleted)** (property)
    * 
    * Specifies the date and time the object was deleted
    */
    deleted: prefixer('deleted'),

    /**
    * **[Travel](https://www.w3.org/ns/activitystreams#Travel)** (class)
    * 
    * The actor is traveling to the target. The origin specifies where the actor is traveling from.
    */
    Travel: prefixer('Travel'),

    /**
    * **[Undo](https://www.w3.org/ns/activitystreams#Undo)** (class)
    * 
    * To Undo Something. This would typically be used to indicate that a previous Activity has been undone.
    */
    Undo: prefixer('Undo'),

    /**
    * **[duration](https://www.w3.org/ns/activitystreams#duration)** (property)
    * 
    * The duration of the object
    */
    duration: prefixer('duration'),

    /**
    * **[Update](https://www.w3.org/ns/activitystreams#Update)** (class)
    * 
    * To Update/Modify Something
    */
    Update: prefixer('Update'),

    /**
    * **[endTime](https://www.w3.org/ns/activitystreams#endTime)** (property)
    * 
    * The ending time of the object
    */
    endTime: prefixer('endTime'),

    /**
    * **[Video](https://www.w3.org/ns/activitystreams#Video)** (class)
    * 
    * A Video document of any kind.
    */
    Video: prefixer('Video'),

    /**
    * **[height](https://www.w3.org/ns/activitystreams#height)** (property)
    * 
    * The display height expressed as device independent pixels
    */
    height: prefixer('height'),

    /**
    * **[View](https://www.w3.org/ns/activitystreams#View)** (class)
    * 
    * The actor viewed the object
    */
    View: prefixer('View'),

    /**
    * **[href](https://www.w3.org/ns/activitystreams#href)** (property)
    * 
    * The target URI of the Link
    */
    href: prefixer('href'),

    /**
    * **[hreflang](https://www.w3.org/ns/activitystreams#hreflang)** (property)
    * 
    * A hint about the language of the referenced resource
    */
    hreflang: prefixer('hreflang'),

    /**
    * **[latitude](https://www.w3.org/ns/activitystreams#latitude)** (property)
    * 
    * The latitude
    */
    latitude: prefixer('latitude'),

    /**
    * **[longitude](https://www.w3.org/ns/activitystreams#longitude)** (property)
    * 
    * The longitude
    */
    longitude: prefixer('longitude'),

    /**
    * **[mediaType](https://www.w3.org/ns/activitystreams#mediaType)** (property)
    * 
    * The MIME Media Type
    */
    mediaType: prefixer('mediaType'),

    /**
    * **[published](https://www.w3.org/ns/activitystreams#published)** (property)
    * 
    * Specifies the date and time the object was published
    */
    published: prefixer('published'),

    /**
    * **[radius](https://www.w3.org/ns/activitystreams#radius)** (property)
    * 
    * Specifies a radius around the point established by the longitude and latitude
    */
    radius: prefixer('radius'),

    /**
    * **[rating](https://www.w3.org/ns/activitystreams#rating)** (property)
    * 
    * A numeric rating (>= 0.0, <= 5.0) for the object
    */
    rating: prefixer('rating'),

    /**
    * **[rel](https://www.w3.org/ns/activitystreams#rel)** (property)
    * 
    * The RFC 5988 or HTML5 Link Relation associated with the Link
    */
    rel: prefixer('rel'),

    /**
    * **[startIndex](https://www.w3.org/ns/activitystreams#startIndex)** (property)
    * 
    * In a strictly ordered logical collection, specifies the index position of the first item in the items list
    */
    startIndex: prefixer('startIndex'),

    /**
    * **[startTime](https://www.w3.org/ns/activitystreams#startTime)** (property)
    * 
    * The starting time of the object
    */
    startTime: prefixer('startTime'),

    /**
    * **[summary](https://www.w3.org/ns/activitystreams#summary)** (property)
    * 
    * A short summary of the object
    */
    summary: prefixer('summary'),

    /**
    * **[totalItems](https://www.w3.org/ns/activitystreams#totalItems)** (property)
    * 
    * The total number of items in a logical collection
    */
    totalItems: prefixer('totalItems'),

    /**
    * **[units](https://www.w3.org/ns/activitystreams#units)** (property)
    * 
    * Identifies the unit of measurement used by the radius, altitude and accuracy properties. The value can be expressed either as one of a set of predefined units or as a well-known common URI that identifies units.
    */
    units: prefixer('units'),

    /**
    * **[updated](https://www.w3.org/ns/activitystreams#updated)** (property)
    * 
    * Specifies when the object was last updated
    */
    updated: prefixer('updated'),

    /**
    * **[width](https://www.w3.org/ns/activitystreams#width)** (property)
    * 
    * Specifies the preferred display width of the content, expressed in terms of device independent pixels.
    */
    width: prefixer('width'),

    /**
    * **[actor](https://www.w3.org/ns/activitystreams#actor)** (property)
    * 
    * Subproperty of as:attributedTo that identifies the primary actor
    */
    actor: prefixer('actor'),

    /**
    * **[attributedTo](https://www.w3.org/ns/activitystreams#attributedTo)** (property)
    * 
    * Identifies an entity to which an object is attributed
    */
    attributedTo: prefixer('attributedTo'),

    /**
    * **[oneOf](https://www.w3.org/ns/activitystreams#anyOf)** (property)
    * 
    * Describes a possible inclusive answer or option for a question.
    */
    anyOf: prefixer('anyOf'),

    /**
    * **[author](https://www.w3.org/ns/activitystreams#author)** (property)
    * 
    * Identifies the author of an object. Deprecated. Use as:attributedTo instead
    */
    author: prefixer('author'),

    /**
    * **[context](https://www.w3.org/ns/activitystreams#context)** (property)
    * 
    * Specifies the context within which an object exists or an activity was performed
    */
    context: prefixer('context'),

    /**
    * **[describes](https://www.w3.org/ns/activitystreams#describes)** (property)
    * 
    * On a Profile object, describes the object described by the profile
    */
    describes: prefixer('describes'),

    /**
    * **[formerType](https://www.w3.org/ns/activitystreams#formerType)** (property)
    * 
    * On a Tombstone object, describes the former type of the deleted object
    */
    formerType: prefixer('formerType'),

    /**
    * **[instrument](https://www.w3.org/ns/activitystreams#instrument)** (property)
    * 
    * Indentifies an object used (or to be used) to complete an activity
    */
    instrument: prefixer('instrument'),

    /**
    * **[oneOf](https://www.w3.org/ns/activitystreams#oneOf)** (property)
    * 
    * Describes a possible exclusive answer or option for a question.
    */
    oneOf: prefixer('oneOf'),

    /**
    * **[origin](https://www.w3.org/ns/activitystreams#origin)** (property)
    * 
    * For certain activities, specifies the entity from which the action is directed.
    */
    origin: prefixer('origin'),

    /**
    * **[relationship](https://www.w3.org/ns/activitystreams#relationship)** (property)
    * 
    * On a Relationship object, describes the type of relationship
    */
    relationship: prefixer('relationship'),

    /**
    * **[a](https://www.w3.org/ns/activitystreams#subject)** (property)
    * 
    * On a Relationship object, identifies the subject. e.g. when saying "John is connected to Sally", 'subject' refers to 'John'
    */
    subject: prefixer('subject'),

    /**
    * **[url](https://www.w3.org/ns/activitystreams#url)** (property)
    * 
    * Specifies a link to a specific representation of the Object
    */
    url: prefixer('url'),

  
  };

export default as

