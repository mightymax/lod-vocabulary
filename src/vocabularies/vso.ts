// This file is generated by the build script. Do not edit it manually.
import { prefixer as $prefixer } from '../utilities.js';
const prefixer = $prefixer('http://purl.org/vso/ns#');

/**
 * [vso](http://purl.org/vso/ns#})
 */
const vso = {
  /**
    * **[SpeedInterval](http://purl.org/vso/ns#SpeedInterval)** (class)
    * 
    * A value indicating a speed interval, mostly for explaining vso:acceleration data
    */
    SpeedInterval: prefixer('SpeedInterval'),

    /**
    * **[FuelQuantity](http://purl.org/vso/ns#FuelQuantity)** (class)
    * 
    * A value indicating an amount of fuel
    */
    FuelQuantity: prefixer('FuelQuantity'),

    /**
    * **[Drive wheel configuration value (the class of predefined values)](http://purl.org/vso/ns#DriveWheelConfigurationValue)** (class)
    * 
    * A value indicating which roadwheels will receive torque
    */
    DriveWheelConfigurationValue: prefixer('DriveWheelConfigurationValue'),

    /**
    * **[Motorized road vehicle (gr:ProductOrService)](http://purl.org/vso/ns#MotorizedRoadVehicle)** (class)
    * 
    * A motorized road vehicle is a wheeled land vehicle whose main propulsion is provided by an engine or motor.
    */
    MotorizedRoadVehicle: prefixer('MotorizedRoadVehicle'),

    /**
    * **[Automobile (gr:ProductOrService)](http://purl.org/vso/ns#Automobile)** (class)
    * 
    * An automobile, motor car, or car is a wheeled motor vehicle used for transporting passengers, which also carries its own engine or motor.
    */
    Automobile: prefixer('Automobile'),

    /**
    * **[Bicycle (gr:ProductOrService)](http://purl.org/vso/ns#Bicycle)** (class)
    * 
    * A bicycle or bike is a pedal-driven, human-powered, single-track vehicle, having two wheels attached to a frame, one behind the other. Some bicycles have a small combustion or electric engine that assists with the pedaling.
    */
    Bicycle: prefixer('Bicycle'),

    /**
    * **[Vehicle (gr:ProductOrService)](http://purl.org/vso/ns#Vehicle)** (class)
    * 
    * A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.
    */
    Vehicle: prefixer('Vehicle'),

    /**
    * **[Boat (gr:ProductOrService)](http://purl.org/vso/ns#Boat)** (class)
    * 
    * A boat is a watercraft of modest size designed to float or plane, to provide passage across water.
    */
    Boat: prefixer('Boat'),

    /**
    * **[Watercraft (gr:ProductOrService)](http://purl.org/vso/ns#Watercraft)** (class)
    * 
    * A watercraft is a vehicle, vessel or craft designed to move across or through water.
    */
    Watercraft: prefixer('Watercraft'),

    /**
    * **[Body style value (the class of predefined values)](http://purl.org/vso/ns#BodyStyleValue)** (class)
    * 
    * A value indicating the body style of a vehicle.
    * 
    * You can safely use any reasonable DBPedia URI, e.g.
    * http://dbpedia.org/resource/Convertible
    * http://dbpedia.org/resource/Hatchback
    * http://dbpedia.org/resource/Station_wagon
    * http://dbpedia.org/resource/Sport_utility_vehicle
    * http://dbpedia.org/resource/Roadster
    */
    BodyStyleValue: prefixer('BodyStyleValue'),

    /**
    * **[Bus or coach (gr:ProductOrService)](http://purl.org/vso/ns#BusOrCoach)** (class)
    * 
    * A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Buses have a capacity as high as 300 passengers and are widely used for public transportation.
    * Coaches are luxury busses, usually in service for long distance travel.
    */
    BusOrCoach: prefixer('BusOrCoach'),

    /**
    * **[Canoe (gr:ProductOrService)](http://purl.org/vso/ns#Canoe)** (class)
    * 
    * A canoe (American English) or Canadian canoe (British English) is a small narrow boat, typically human-powered, though it may also be powered by sails or small electric or gas motors.
    */
    Canoe: prefixer('Canoe'),

    /**
    * **[Emission standard value (the class of predefined values)](http://purl.org/vso/ns#EmissionStandardValue)** (class)
    * 
    * A value indicating the an emission standard.
    * 
    * You can safely use any reasonable DBPedia URI, e.g.
    * http://dbpedia.org/resource/Super_Ultra_Low_Emission_Vehicle
    * http://dbpedia.org/resource/Partial_zero-emissions_vehicle
    * 
    * See also http://en.wikipedia.org/wiki/Emissions_standard.
    * 
    * Unfortunately, there are no DBPedia identifiers for the popular Euro 1 - Euro 5 standards available.
    * If you cannot find a suitable identifier in DBPedia, define your own as an instance of vso:EmissionStandardValue.
    */
    EmissionStandardValue: prefixer('EmissionStandardValue'),

    /**
    * **[Engine type value (the class of predefined values)](http://purl.org/vso/ns#EngineTypeValue)** (class)
    * 
    * A value indicating an engine type.
    * 
    * You can safely use any reasonable DBPedia URI, e.g.
    * http://dbpedia.org/resource/Two-stroke_engine
    * http://dbpedia.org/resource/Four-stroke_engine
    * http://dbpedia.org/resource/Wankel_engine
    * http://dbpedia.org/resource/Electric_motor
    */
    EngineTypeValue: prefixer('EngineTypeValue'),

    /**
    * **[Feature value (the class of predefined values)](http://purl.org/vso/ns#FeatureValue)** (class)
    * 
    * A value indicating the features or accessories that are attached to or belong to a vehicle.
    * 
    * You can safely use any reasonable DBPedia URI, e.g.
    * http://dbpedia.org/resource/Anti-lock_braking_system
    * http://dbpedia.org/resource/Electronic_stability_control
    * http://dbpedia.org/resource/Armrest
    * http://dbpedia.org/resource/Spoiler_%28automotive%29
    * http://dbpedia.org/resource/CD_Changer
    * http://dbpedia.org/resource/Cup_holder
    * http://dbpedia.org/resource/Tow_hitch
    * http://dbpedia.org/resource/Power_window
    * http://dbpedia.org/resource/Power_steering
    * http://dbpedia.org/resource/Air_conditioner
    * http://dbpedia.org/resource/Child_safety_lock
    * http://dbpedia.org/resource/Parking_sensors
    */
    FeatureValue: prefixer('FeatureValue'),

    /**
    * **[Fuel type value (the class of predefined values)](http://purl.org/vso/ns#FuelTypeValue)** (class)
    * 
    * A value indicating a type of fuel.
    * 
    * You can safely use any reasonable DBPedia URI, e.g.
    * http://dbpedia.org/resource/Gasoline
    * http://dbpedia.org/resource/Diesel
    * http://dbpedia.org/resource/Biodiesel
    * http://dbpedia.org/resource/Kerosene
    */
    FuelTypeValue: prefixer('FuelTypeValue'),

    /**
    * **[Kayak (gr:ProductOrService)](http://purl.org/vso/ns#Kayak)** (class)
    * 
    * A kayak is a small human-powered watercraft that traditionally has a covered deck, and one or more cockpits, each seating one paddler who strokes a double-bladed paddle. In this ontology, kayaks are considered watercrafts of their own kind, not a subtype of vso:Boat.
    */
    Kayak: prefixer('Kayak'),

    /**
    * **[Steering position value (the class of predefined values)](http://purl.org/vso/ns#SteeringPositionValue)** (class)
    * 
    * A value indicating a steering position
    */
    SteeringPositionValue: prefixer('SteeringPositionValue'),

    /**
    * **[Motor boat (gr:ProductOrService)](http://purl.org/vso/ns#MotorBoat)** (class)
    * 
    * A motorboat is a boat which is powered by an engine.
    */
    MotorBoat: prefixer('MotorBoat'),

    /**
    * **[ACRISSCode (0..1)](http://purl.org/vso/ns#ACRISSCode)** (property)
    * 
    * The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.
    */
    ACRISSCode: prefixer('ACRISSCode'),

    /**
    * **[Motorcycle (gr:ProductOrService)](http://purl.org/vso/ns#Motorcycle)** (class)
    * 
    * A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.
    */
    Motorcycle: prefixer('Motorcycle'),

    /**
    * **[VIN [Vehicle Identification Number] (0..1)](http://purl.org/vso/ns#VIN)** (property)
    * 
    * A unique serial number used by the automotive industry to identify individual motor vehicles
    */
    VIN: prefixer('VIN'),

    /**
    * **[Motorized bicycle (gr:ProductOrService)](http://purl.org/vso/ns#MotorizedBicycle)** (class)
    * 
    * A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.
    */
    MotorizedBicycle: prefixer('MotorizedBicycle'),

    /**
    * **[color (0..*)](http://purl.org/vso/ns#color)** (property)
    * 
    * The color of the vehicle
    */
    color: prefixer('color'),

    /**
    * **[Quadracycle (gr:ProductOrService) ](http://purl.org/vso/ns#Quadracycle)** (class)
    * 
    * A quadracycle is a four-wheeled human-powered vehicle. It is also referred to as a quadricycle, quadcycle pedal car or four-wheeled bicycle.
    */
    Quadracycle: prefixer('Quadracycle'),

    /**
    * **[condition (0..*)](http://purl.org/vso/ns#condition)** (property)
    * 
    * A textual description of the condition of the vehicle. This property should be mainly used with gr:ActualProductOrServiceInstance.
    */
    condition: prefixer('condition'),

    /**
    * **[Rickshaw (gr:ProductOrService)](http://purl.org/vso/ns#Rickshaw)** (class)
    * 
    * A rickshaw (or ricksha) is a two-wheeled cart which seats one or two persons and is being drawn by a runner.
    */
    Rickshaw: prefixer('Rickshaw'),

    /**
    * **[damages (0..*)](http://purl.org/vso/ns#damages)** (property)
    * 
    * A textual description of known damages, both repaired and unrepaired.
    * 
    * Note: This property should be used with gr:ActualProductOrServiceInstance (when offering a vehicle) or gr:ProductOrServicesSomeInstancesPlaceholder (when seeking a vehicle using gr:seeks) only.
    */
    damages: prefixer('damages'),

    /**
    * **[Sailing boat (gr:ProductOrService)](http://purl.org/vso/ns#SailingBoat)** (class)
    * 
    * A sailboat or sailing boat is a boat propelled partly or entirely by sails.
    */
    SailingBoat: prefixer('SailingBoat'),

    /**
    * **[engineName (0..*)](http://purl.org/vso/ns#engineName)** (property)
    * 
    * A short text indicating the engine(s) of the vehicle
    */
    engineName: prefixer('engineName'),

    /**
    * **[Ship (gr:ProductOrService)](http://purl.org/vso/ns#Ship)** (class)
    * 
    * A ship is a large watercraft that floats on water.
    */
    Ship: prefixer('Ship'),

    /**
    * **[firstRegistration (0..1)](http://purl.org/vso/ns#firstRegistration)** (property)
    * 
    * The date of the first registration of the vehicle with the respective public authorities. This property should be used mainly with gr:ActualProductOrServiceInstance.
    */
    firstRegistration: prefixer('firstRegistration'),

    /**
    * **[Transmission type value (the class of predefined values)](http://purl.org/vso/ns#TransmissionTypeValue)** (class)
    * 
    * A value indicating a type of transmission.
    * 
    * You can safely use any reasonable DBPedia URI, e.g.
    * http://dbpedia.org/resource/Manual_transmission
    * http://dbpedia.org/resource/Automatic_transmission
    */
    TransmissionTypeValue: prefixer('TransmissionTypeValue'),

    /**
    * **[modelDate (0..1)](http://purl.org/vso/ns#modelDate)** (property)
    * 
    * The release date of a vehicle model (often used to differentiate versions of the same make and model)
    */
    modelDate: prefixer('modelDate'),

    /**
    * **[Truck (gr:ProductOrService)](http://purl.org/vso/ns#Truck)** (class)
    * 
    * A lorry (British English) or truck (American English) is a motor vehicle designed to transport cargo.
    */
    Truck: prefixer('Truck'),

    /**
    * **[productionDate (0..1)](http://purl.org/vso/ns#productionDate)** (property)
    * 
    * The date of production of the vehicle. This property should be used mainly with gr:ActualProductOrServiceInstance.
    */
    productionDate: prefixer('productionDate'),

    /**
    * **[Van (gr:ProductOrService)](http://purl.org/vso/ns#Van)** (class)
    * 
    * A van is a kind of vehicle used for transporting  goods or groups of people. It is usually a box-shaped vehicle on four wheels, about the same width and length as a large automobile,
    * but taller and usually higher off the ground, also referred to as a light commercial vehicle or LCV.
    */
    Van: prefixer('Van'),

    /**
    * **[rentalUsage (0..1)](http://purl.org/vso/ns#rentalUsage)** (property)
    * 
    * Indicates whether the vehicle has been used for commercial rental. The legislation in many countries requires this information to be revealed when offering a car for sale.
    * 
    * Note 1: This property should be used with gr:ActualProductOrServiceInstance (when offering a vehicle) or gr:ProductOrServicesSomeInstancesPlaceholder (when seeking a vehicle using gr:seeks) only.
    * Note 2: This property is relevant mainly for offers to SELL the vehicle (gr:hasBusinessFunction gr:Sell).
    */
    rentalUsage: prefixer('rentalUsage'),

    /**
    * **[acceleration (0..*)](http://purl.org/vso/ns#acceleration)** (property)
    * 
    * The time needed to accelerate the vehicle from a given start velocity to a given target velocity
    * Typical unit code(s): SEC for seconds
    * 
    * Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities in the rdfs:label of the gr:QuantitativeValueFloat, or use vso:referenceSpeeds with vso:0to60MPH (0..60 mph) or vso:0to100KMH (0..100 km/h) to specify the reference speeds.
    */
    acceleration: prefixer('acceleration'),

    /**
    * **[axles (0..1)](http://purl.org/vso/ns#axles)** (property)
    * 
    * The number of axles
    * Typical unit code(s): C62
    */
    axles: prefixer('axles'),

    /**
    * **[bodyStyle (0..1)](http://purl.org/vso/ns#bodyStyle)** (property)
    * 
    * Indicates the design and body style of the vehicle.
    * 
    * Use DBPedia resources to indicate the features, if possible. Popular identifiers are
    * http://dbpedia.org/resource/Convertible
    * http://dbpedia.org/resource/Hatchback
    * http://dbpedia.org/resource/Station_wagon
    * http://dbpedia.org/resource/Sport_utility_vehicle
    * http://dbpedia.org/resource/Roadster
    * 
    * See also http://en.wikipedia.org/wiki/Car_body_styles.
    * 
    * If you cannot find a suitable identifier in DBPedia, define your own as an instance of vso:BodyStyleValue.
    */
    bodyStyle: prefixer('bodyStyle'),

    /**
    * **[cargoVolume (0..1)](http://purl.org/vso/ns#cargoVolume)** (property)
    * 
    * The available volume for cargo or luggage. For automobiles, this is usually the trunk space.
    * Typical unit code(s): LTR for liters, FTQ for cubic foot/feet
    * 
    * Note: You can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    cargoVolume: prefixer('cargoVolume'),

    /**
    * **[doors (0..1)](http://purl.org/vso/ns#doors)** (property)
    * 
    * The number of doors
    * Typical unit code(s): C62
    */
    doors: prefixer('doors'),

    /**
    * **[driveWheelConfiguration (0..1)](http://purl.org/vso/ns#driveWheelConfiguration)** (property)
    * 
    * The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain
    */
    driveWheelConfiguration: prefixer('driveWheelConfiguration'),

    /**
    * **[engineDisplacement (0..*)](http://purl.org/vso/ns#engineDisplacement)** (property)
    * 
    * The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. If there are multiple engines, simply attach this property multiple times.
    * Typical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches
    * 
    * Note 1: You can link to information about how the given value has been determined using the gr:valueReference property.
    * Note 2: You can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    engineDisplacement: prefixer('engineDisplacement'),

    /**
    * **[enginePower (0..*)](http://purl.org/vso/ns#enginePower)** (property)
    * 
    * The power of the vehicle's engine. If there are multiple engines, simply attach this property multiple times.
    * Typical unit code(s): KWT for kilowatt
    * 
    * Note 1: There are many different ways of measuring an engine's power. For an overview, see  http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes.
    * Note 2: You can link to information about how the given value has been determined using the gr:valueReference property.
    * Note 3: You can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    enginePower: prefixer('enginePower'),

    /**
    * **[engineType (0..*)](http://purl.org/vso/ns#engineType)** (property)
    * 
    * The type of engine or engines powering the vehicle. If there are multiple engines, simply attach this property multiple times.
    * 
    * Use DBPedia resources to indicate the engine type. Popular identifiers are
    * http://dbpedia.org/resource/Two-stroke_engine
    * http://dbpedia.org/resource/Four-stroke_engine
    * http://dbpedia.org/resource/Wankel_engine
    * http://dbpedia.org/resource/Electric_motor
    * 
    * If you cannot find a suitable identifier in DBPedia, define your own as an instance of vso:EngineTypeValue.
    */
    engineType: prefixer('engineType'),

    /**
    * **[feature (0..*)](http://purl.org/vso/ns#feature)** (property)
    * 
    * Indicates a built-in feature, accessory, or component of the vehicle.
    * 
    * Use DBPedia resources to indicate the features, if possible. Popular identifiers are
    * http://dbpedia.org/resource/Anti-lock_braking_system
    * http://dbpedia.org/resource/Electronic_stability_control
    * http://dbpedia.org/resource/Armrest
    * http://dbpedia.org/resource/Spoiler_%28automotive%29
    * http://dbpedia.org/resource/CD_Changer
    * http://dbpedia.org/resource/Cup_holder
    * http://dbpedia.org/resource/Tow_hitch
    * http://dbpedia.org/resource/Power_window
    * http://dbpedia.org/resource/Power_steering
    * http://dbpedia.org/resource/Air_conditioner
    * http://dbpedia.org/resource/Child_safety_lock
    * http://dbpedia.org/resource/Parking_sensors
    * 
    * See also http://en.wikipedia.org/wiki/Category:Automotive_accessories.
    * 
    * If you cannot find a suitable identifier in DBPedia, define your own as an instance of vso:FeatureValue.
    */
    feature: prefixer('feature'),

    /**
    * **[fuelConsumption (0..*)](http://purl.org/vso/ns#fuelConsumption)** (property)
    * 
    * The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km)
    * Typical unit code(s): LTR for liters, GLL of US Gallons, GLI for UK / Imperial Gallons
    * 
    * Note 1: There are unfortunately no standard unit codes for "liters per 100 km". Simply use "LTR" for liters, "GLL" of US Gallons, or "GLI" for UK / Imperial Gallons, and indicate the distance in the rdfs:label of the gr:QuantitativeValueFloat or use vso:referenceDistance to model the reference distance (e.g. 100 km).
    * Note 2: There are two ways of indicating the fuel consumption, vso:fuelConsumption (e.g. 8 liters per 100 km) and vso:fuelEconomy (e.g. 30 miles per gallon). They are reciprocal.
    * Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use gr:valueReference to link the value for the fuel consumption to another value.
    */
    fuelConsumption: prefixer('fuelConsumption'),

    /**
    * **[fuelEconomy (0..*)](http://purl.org/vso/ns#fuelEconomy)** (property)
    * 
    * The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L)
    * Typical unit code(s): KMT for kilometers, SMI for statute miles
    * 
    * Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter.
    * Simply use "SMI" for statute miles (common miles in the US and UK) or "KMT" for kilometers, and indicate
    * the fuel amount of reference in the rdfs:label of the gr:QuantitativeValueFloat, or use vso:referenceFuelQuantity with vso:1LTR (1 liter), vso:1GLL (1 US Gallon), or vso:1GLI (1 British Gallon).
    * Note 2: In the absence of a vso:referenceFuelQuantity one may assume that the quantity of reference is 1 gallon for distances given in miles and 1 liter for distances given in kilometers. However, note that the original unit may be obscured by unit conversion services, so this heuristic is far from perfect.
    * Note 3: There are two ways of indicating the fuel consumption, vso:fuelConsumption (e.g. 8 liters per 100 km) and vso:fuelEconomy (e.g. 30 miles per gallon). They are reciprocal.
    * Note 4: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use gr:valueReference to link the value for the fuel economy to another value.
    */
    fuelEconomy: prefixer('fuelEconomy'),

    /**
    * **[fuelTankVolume (0..1)](http://purl.org/vso/ns#fuelTankVolume)** (property)
    * 
    * The volume of the fuel tank. If there are multiple tanks, this should indicate the total of all tanks.
    * Typical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons
    */
    fuelTankVolume: prefixer('fuelTankVolume'),

    /**
    * **[fuelType (0..*)](http://purl.org/vso/ns#fuelType)** (property)
    * 
    * The type of fuel suitable for the engine or engines of the vehicle.
    * 
    * Use DBPedia resources to indicate the fuel type. Popular identifiers are
    * http://dbpedia.org/resource/Gasoline
    * http://dbpedia.org/resource/Diesel
    * http://dbpedia.org/resource/Biodiesel
    * http://dbpedia.org/resource/Kerosene
    * 
    * For two-stroke mixtures, use vso:TwoStrokeMixture.
    */
    fuelType: prefixer('fuelType'),

    /**
    * **[gearsTotal (0..1)](http://purl.org/vso/ns#gearsTotal)** (property)
    * 
    * The total number of forward and reverse gears available for the transmission system of the vehicle
    * Typical unit code(s): C62
    */
    gearsTotal: prefixer('gearsTotal'),

    /**
    * **[height (0..1)](http://purl.org/vso/ns#height)** (property)
    * 
    * The outer height of the vehicle. Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    * Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
    */
    height: prefixer('height'),

    /**
    * **[length (0..1)](http://purl.org/vso/ns#length)** (property)
    * 
    * The outer length of the vehicle. Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    * Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
    */
    length: prefixer('length'),

    /**
    * **[meetsEmissionStandard (0..*)](http://purl.org/vso/ns#meetsEmissionStandard)** (property)
    * 
    * Indicates that the vehicle meets the respective emission standard.
    * 
    * Use DBPedia resources to indicate the standard, if possible. Popular identifiers are
    * http://dbpedia.org/resource/Super_Ultra_Low_Emission_Vehicle
    * http://dbpedia.org/resource/Partial_zero-emissions_vehicle
    * 
    * See also http://en.wikipedia.org/wiki/Emissions_standard.
    * 
    * Unfortunately, there are no DBPedia identifiers for the popular Euro 1 - Euro 5 standards available.
    * If you cannot find a suitable identifier in DBPedia, define your own as an instance of vso:EmissionStandardValue.
    */
    meetsEmissionStandard: prefixer('meetsEmissionStandard'),

    /**
    * **[mileageFromOdometer (0..1)](http://purl.org/vso/ns#mileageFromOdometer)** (property)
    * 
    * The total distance travelled by the particular vehicle since its initial production, as read from its odometer
    * Typical unit code(s): KMT for kilometers, SMI for statute miles
    * 
    * Note: This property should be used with gr:ActualProductOrServiceInstance (when offering a vehicle) or gr:ProductOrServicesSomeInstancesPlaceholder (when seeking a vehicle using gr:seeks) only.
    */
    mileageFromOdometer: prefixer('mileageFromOdometer'),

    /**
    * **[payload (0..1)](http://purl.org/vso/ns#payload)** (property)
    * 
    * The permited weight of passengers and cargo, EXCLUDING the weight of the empty vehicle
    * Typical unit code(s): KGM for kilogram, LBR for pound
    * 
    * Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of vso:weight and vso:payload.
    * Note 2: You can indicate additional information in the rdfs:label of the gr:QuantitativeValueFloat node.
    * Note 3: You may also link to a gr:QualitativeValue node that provides additional information using gr:valueReference.
    * Note 4: Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    payload: prefixer('payload'),

    /**
    * **[previousOwners (0..1)](http://purl.org/vso/ns#previousOwners)** (property)
    * 
    * The number of previous owners of the vehicle, including the current one
    * Typical unit code(s): C62
    * 
    * Note: This property should be used with gr:ActualProductOrServiceInstance (when offering a vehicle) or gr:ProductOrServicesSomeInstancesPlaceholder (when seeking a vehicle using gr:seeks) only.
    */
    previousOwners: prefixer('previousOwners'),

    /**
    * **[referenceDistance (0..1)](http://purl.org/vso/ns#referenceDistance)** (property)
    * 
    * The distance to which a vso:fuelConsumption value refers
    */
    referenceDistance: prefixer('referenceDistance'),

    /**
    * **[referenceFuelQuantity (0..1)](http://purl.org/vso/ns#referenceFuelQuantity)** (property)
    * 
    * The quantity of fuel to which a vso:fuelEconomy value refers
    */
    referenceFuelQuantity: prefixer('referenceFuelQuantity'),

    /**
    * **[referenceSpeeds (0..1)](http://purl.org/vso/ns#referenceSpeeds)** (property)
    * 
    * The interval of initial and target speed to which a vso:acceleration value refers
    */
    referenceSpeeds: prefixer('referenceSpeeds'),

    /**
    * **[roofLoad (0..1)](http://purl.org/vso/ns#roofLoad)** (property)
    * 
    * The permited total weight of cargo and installations (e.g. a roof rack) on top of the vehicle
    * Typical unit code(s): KGM for kilogram, LBR for pound
    * 
    * Note 1: You can indicate additional information in the rdfs:label of the gr:QuantitativeValueFloat node.
    * Note 2: You may also link to a gr:QualitativeValue node that provides additional information using gr:valueReference.
    * Note 3: Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    roofLoad: prefixer('roofLoad'),

    /**
    * **[seatingCapacity (0..1)](http://purl.org/vso/ns#seatingCapacity)** (property)
    * 
    * The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law
    * Typical unit code(s): C62 for persons
    */
    seatingCapacity: prefixer('seatingCapacity'),

    /**
    * **[speed (0..*)](http://purl.org/vso/ns#speed)** (property)
    * 
    * The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by gr:hasMaxValueFloat) should be the maximum speed achievable under regular conditions.
    * Typical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot
    * 
    * Note 1: Use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate the range. Typically, the minimal value is zero.
    * Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the gr:valueReference property.
    */
    speed: prefixer('speed'),

    /**
    * **[steeringPosition (0..1)](http://purl.org/vso/ns#steeringPosition)** (property)
    * 
    * The position of the steering wheel or similar device (mostly for cars)
    */
    steeringPosition: prefixer('steeringPosition'),

    /**
    * **[tongueWeight (0..1)](http://purl.org/vso/ns#tongueWeight)** (property)
    * 
    * The permited vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).
    * Typical unit code(s): KGM for kilogram, LBR for pound
    * 
    * Note 1: You can indicate additional information in the rdfs:label of the gr:QuantitativeValueFloat node.
    * Note 2: You may also link to a gr:QualitativeValue node that provides additional information using gr:valueReference.
    * Note 3: Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    tongueWeight: prefixer('tongueWeight'),

    /**
    * **[trailerWeight (0..1)](http://purl.org/vso/ns#trailerWeight)** (property)
    * 
    * The permited weight of a trailer attached to the vehicle.
    * Typical unit code(s): KGM for kilogram, LBR for pound
    * 
    * Note 1: You can indicate additional information in the rdfs:label of the gr:QuantitativeValueFloat node.
    * Note 2: You may also link to a gr:QualitativeValue node that provides additional information using gr:valueReference.
    * Note 3: Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    trailerWeight: prefixer('trailerWeight'),

    /**
    * **[transmission (0..*)](http://purl.org/vso/ns#transmission)** (property)
    * 
    * The type of component used for transmitting the power from a rotating power source to the wheels or propeller(s) ("gearbox" for cars).
    * 
    * Use DBPedia resources to indicate the transmission type, if possible. Popular identifiers are
    * http://dbpedia.org/resource/Manual_transmission
    * http://dbpedia.org/resource/Automatic_transmission
    * 
    * If you cannot find a suitable identifier in DBPedia, define your own as an instance of vso:TransmissionTypeValue.
    */
    transmission: prefixer('transmission'),

    /**
    * **[weight (0..1)](http://purl.org/vso/ns#weight)** (property)
    * 
    * The weight of the empty vehicle ("curb weight" for cars), i.e. with standard equipment, all necessary operating consumables (e.g. motor oil and coolant), a full tank of fuel, while not loaded with either passengers or cargo
    * Typical unit code(s): KGM for kilogram, LBR for pound
    * 
    * Note 1: There are many varying definitions in place for specifying the weight of a vehicle. E.g., the many European Union car manufacturers include the weight of a 75 kilogram driver to follow European Directive 95/48/EC. Make sure to subtract those 75 kg when converting respective data.
    * Note 2: You can indicate additional information in the rdfs:label of the gr:QuantitativeValueFloat node.
    * Note 3: You may also link to a gr:QualitativeValue node that provides additional information using gr:valueReference.
    * Note 4: Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    weight: prefixer('weight'),

    /**
    * **[weightTotal (0..1)](http://purl.org/vso/ns#weightTotal)** (property)
    * 
    * The permited total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle
    * Typical unit code(s): KGM for kilogram, LBR for pound
    * 
    * Note 1: You can indicate additional information in the rdfs:label of the gr:QuantitativeValueFloat node.
    * Note 2: You may also link to a gr:QualitativeValue node that provides additional information using gr:valueReference.
    * Note 3: Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    */
    weightTotal: prefixer('weightTotal'),

    /**
    * **[wheelbase (0..1)](http://purl.org/vso/ns#wheelbase)** (property)
    * 
    * The distance between the centers of the front and rear wheels
    * Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
    */
    wheelbase: prefixer('wheelbase'),

    /**
    * **[width (0..1)](http://purl.org/vso/ns#width)** (property)
    * 
    * The outer width of the vehicle. Note that you can use gr:hasMinValueFloat and gr:hasMaxValueFloat to indicate ranges.
    * Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
    */
    width: prefixer('width'),

  
  };

export default vso

